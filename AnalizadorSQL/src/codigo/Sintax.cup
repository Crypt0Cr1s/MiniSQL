package codigo;
import java_cup.runtime.Symbol;
parser code
{:
    int errorCounter=0;
    public void syntax_error(Symbol s){
      errorCounter++;

        report_error("Error de Sintaxis recuperable No:" + errorCounter + ". Columna: " + (s.left+1) + " Linea: " + (s.right+1) + ". Texto: \""+ s.value + "\"", null);
    }
   
    /* Cuando se encuentra un error de donde el sistema no puede
        recuperarse, se lanza un error fatal. Se despliega el mensaje
        de error y se finaliza la ejecucion. */
    public void unrecovered_Syntax_error(Symbol s)throws java.lang.Exception {
        report_error("Error de sintaxis no recuperable No" + errorCounter + ".Columna: " + (s.left+1) + "Linea: " + (s.right+1) + ". Texto: \""+ s.value + "\"",null);
    }


:};

/* ------------Declaracion de simbolos terminales y no terminales---------- */
   
/* Terminales (tokens obtenidos por el analizador lexico).  

   Terminales que no tienen un valor son listados primero, los terminales que
   tienen un valor como los enteros son listados en la segunda o demas lineas. */
terminal           Puntuacion,Entero,Bit,Cadena,Float,ADD,ALL,ALTER,AND,ANY,AS,ASC,AUTHORIZATION,BACKUP,BEGIN,BETWEEN,BREAK,BROWSE,BULK,BY,CASCADE,CASE,CHECK,CHECKPOINT,CLOSE,CLUSTERED,COALESCE,COLLATE,COLUMN,COMMIT,COMPUTE,CONINT,CONTAINS,CONTAINSTABLE,CONTINUE,CONVERT,CREATE,CROSS,CURRENT,CURRENT_DATE,CURRENT_TIME,CURRENT_TIMESTAMP,CURRENT_USER,CURSOR,DATABASE,DBCC,DEALLOCATE,DECLARE,DEFAULT,DELETE,DENY,DESC,DISK,DISTINCT,DISTRIBUTED,DOUBLE,DROP,DUMP,ELSE,END,ERRLVL,ESCAPE,EXCEPT,EXEC,EXECUTE,EXISTS,EXIT,EXTERNAL,FETCH,FILE,FILLFACTOR,FOR,FOREIGN,FREETEXT,FREETEXTTABLE,FROM,FULL,FUNCTION,GOTO,GRANT,GROUP,HAVING,HOLDLOCK,IDENTITY,IDENTITY_INSERT,IDENTITYCOL,IF,IN,INDEX,INNER,INSERT,INTERSECT,INTO,IS,JOIN,KEY,KILL,LEFT,LIKE,LINENO,LOAD,MERGE,NATIONAL,NOCHECK,NONCLUSTERED,NOT,NULL,NULLIF,OF,OFF,OFFSETS,ON,OPEN,OPENDATASOURCE,OPENQUERY,OPENROWSET,OPENXML,OPTION,OR,ORDER,OUTER,OVER,PERCENT,PIVOT,PLAN,PRECISION,PRIMARY,PRINT,PROC,PROCEDURE,PUBLIC,RAISERROR,READ,READTEXT,RECONFIGURE,REFERENCES,REPLICATION,RESTORE,RESTRICT,RETURN,REVERT,REVOKE,RIGHT,ROLLBACK,ROWCOUNT,ROWGUIDCOL,RULE,SAVE,SCHEMA,SECURITYAUDIT,SELECT,SEMANTICKEYPHRASETABLE,SEMANTICSIMILARITYDETAILSTABLE,SEMANTICSIMILARITYTABLE,SESSION_USER,SET,SETUSER,SHUTDOWN,SOME,STATISTICS,SYSTEM_USER,TABLE,TABLESAMPLE,TEXTSIZE,THEN,TO,TOP,TRAN,TRANSACTION,TRIGGER,TRUNCATE,TRY_CONVERT,TSEQUAL,UNION,UNIQUE,UNPIVOT,UPDATE,UPDATETEXT,USE,USER,VALUES,VARYING,VIEW,WAITFOR,WHEN,WHERE,WHILE,WITH,WITHIN_GROUP,WRITETEXT,ABSOLUTE,ACTION,ADA,ALLOCATE,ARE,ASSERTION,AT,AVG,BIT,BIT_LENGTH,BOTH,CASCADED,CAST,CATALOG,CHAR,CHAR_LENGTH,CHARACTER,CHARACTER_LENGTH,COLLATION,CONNECT,CONNECTION,CONSTRAINT,CONSTRAINTS,CORRESPONDING,COUNT,DATE,DAY,DEC,DECIMAL,DEFERRABLE,DEFERRED,DESCRIBE,DESCRIPTOR,DIAGNOSTICS,DISCONNECT,DOMAIN,END_EXEC,EXCEPTION,EXTRACT,FALSE,FIRST,FLOAT,FORTRAN,FOUND,GET,GLOBAL,GO,HOUR,IMMEDIATE,INCLUDE,INDICATOR,INITIALLY,INPUT,INSENSITIVE,INT,INTEGER,INTERVAL,ISOLATION,LANGUAGE,LAST,LEADING,LEVEL,LOCAL,LOWER,MATCH,MAX,MIN,MINUTE,MODULE,MONTH,NAMES,NATURAL,NCHAR,NEXT,NO,NONE,NUMERIC,OCTET_LENGTH,ONLY,OUTPUT,OVERLAPS,PAD,PARTIAL,PASCAL,POSITION,PREPARE,PRESERVE,PRIOR,PRIVILEGES,REAL,RELATIVE,ROWS,SCROLL,SECOND,SECTION,SESSION,SIZE,SMALLINT,SPACE,SQL,SQLCA,SQLCODE,SQLERROR,SQLSTATE,SQLWARNING,SUBSTRING,SUM,TEMPORARY,TIME,TIMESTAMP,TIMEZONE_HOUR,TIMEZONE_MINUTE,TRAILING,TRANSLATE,TRANSLATION,TRIM,TRUE,UNKNOWN,UPPER,USAGE,USING,VALUE,VARCHAR,WHENEVER,WORK,WRITE,YEAR,ZONE,LOGIN,Identificador,IdentificadorTruncado,ComentarioE,MAS,MENOS,ASTERISCO,DIV,PORCENTAJE,MENOR,MENORIGUAL,MAYOR,MAYORIGUAL,IGUAL,IGUALIGUAL,NOIGUAL,And,Or,ADMIRACION,PUNTOCOMA,COMMA,PUNTO,CORCHETEOP,CORCHETECLO,PARENTESISOP,PARENTESISCLO,LLAVEOP,LLAVECLO,CORCHETEDOBLE,PARENTESISDOBLE,LLAVEDOBLE,ARROBA,NUMERAL,NUMERALDOBLE,RETURNS,FORWARD_ONLY,STATIC,KEYSET,DYNAMIC,FAST_FORWARD,READ_ONLY,SCROLL_LOCKS,OPTIMISTIC,TYPE_WARNING,DELAYED_DURABILITY;

   
/* No terminales usados en la seccion gramatical. 

   Primero se lista los no terminales que tienen un valor Object y despues
   se lista los no terminales que tienen un entero. Un Object se refiere a que
   no tienen tipo, pudiendo ser entero o String. */
non terminal Object     INIT,DECL,ROLLB,ROLLB1,ROLLB2,COMF,SAVEP,SAVEP1,SAVEP2,COM,COM1,COM2,COM3,COM4,DELETE1,DELETE2,DELETE3,DELETE4,DELETE5,DELETE6,DELETE7,DELETE8,DELETE9,OBJECT,OBJECT1,OBJECT2,OBJECT3,SEXP,SEXP2,SEXP3,SEXP4,SEXP5,OUTCL,OUTCL1,OUTCL2,OUTCL3,EXPRESSION,EXPRESSION1,EXPRESSION2,EXPRESSION3,EXPRESSION4,SEL_AVG,SEL_AVG2,SEL_AVG3,SEL_AD,SEL_COUNT,SEL_COUNT2,SEL_COUNT3,SEL_AGR,SEL_AGR2,SEL_AGR3,DML,DML2,DML3,DML4,COLST,COLST1,COLST2,AR_OPR,SUM_OPR,COMPARE_OPR,LOGIC_OPR,COLNAME,COLNAME1,JOINTB,JOINTB1,JOINTB2,JOINTB3,JOINTB4,JOIN_TYPE,JOIN_TYPE1,JOIN_TYPE2,JOIN_TYPE3,TB_SOURCE,TB_SOURCE1,TB_SOURCE2,ROWSET,SAM_CL,SAM_CL1,SAM_CL2,AGG_FN,SearchC,SearchC1,SearchC2,GSP,GSP1,SH_CONDWM,SH_CONDWM1,SH_CONDWM2,SH_CONDWM3,PREDICADO,PREDICADO1,PREDICADO2,PREDICADO3,PREDICADO4,PREDICADO5,PREDICADO6,PREDICADO7,PREDICADO8,PREDICADO9,CaseWhen,CaseWhen1,CaseWhen2,CaseWhen3,STR_FN,STR_FN1,STR_FN2,DT_FN,DT_FN1,DT_FN2,CONV,CONV1,CONV2,CONV3,CONV4,CONV5,OTH_FN,OTH_FN1,OTH_FN2,OTH_FN3,ORDERB,ORDERB1,ORDERB2,ORDERB3,ORDERB4,SELIST,SELIST1,SELIST2,SELIST3,SELIST5,SELIST6,DATA_TYPE,DATA_TYPE2,DATA_TYPE3,DATA_TYPE4,DATA_TYPE5,DROPC,DROP1,DROP2,DROP3,DROP4,DROP5,DROP6,DROP7,DROP8,DROP9,DROP10,DROP11,TRUNCATEC,TRUNCATE1,CREATEC,CREATE1,CREATE2,CREATE3,CREATE4,CREATE5,CREATE6,CREATE7,CREATE8,CREATE9,CREATE10,CREATE11,CREATE12,CREATE13,CREATE14,CREATE15,CREATE16,CREATE17,CREATE18,CREATE19,CREATE20,TB_CST,TB_CST1,TB_CST2,TB_CST3,TB_CST4,TB_CST5,TB_CST6,TB_CST7,TB_CST8,TB_CST9,TB_CST10,TB_CST11,TB_CST12,TB_CST13,TB_CST14,TB_CST15,TB_CST16,TB_CST17,TB_CST18,TB_CST19,TB_CST20,TB_CST21,TB_CST22,TB_CST23,COL_DEF,COL_DEF1,COL_DEF2,COL_DEF3,COL_DEF4,COL_DEF5,COL_DEF6,COL_DEF7,COL_DEF8,COL_DEF9,COL_DEF10,CONST_EXP,COL_CST,COL_CST1,COL_CST2,COL_CST3,COL_CST4,COL_CST5,COL_CST6,COL_CST7,COL_CST8,COL_CST9,COL_CST10,COL_CST11,COL_CST12,COL_CST13,COL_CST14,COL_CST15,COL_CST16,ALTERC,ALTER1,ALTER2,ALTER3,ALTER4,ALTER5,ALTER6,ALTER7,ALTER8,ALTER9,ALTER10,ALTER11,ALTER12,ALTER13,ALTER14,ALTER15,ALTER16,ALTER17,ALTER18,ALTER19,ALTER20,ALTER21,ALTER22,ALTER23,ALTER24,UPDATEC,UPDATE1,UPDATE2,UPDATE3,UPDATE4,UPDATE5,UPDATE6,UPDATE7,UPDATE8,UPDATE9,UPDATE10,UPDATE11,UPDATE12,UPDATE13,UPDATE14,UPDATE16,UPDATE17,INSERTC,INSERT1,INSERT2,INSERT3,INSERT4,INSERT5,INSERT6,INSERT7,INSERT8,INSERT9,INSERT10,INSERT11,INSERT12,SELECT1,SELECT2,SELECT3,SELECT4,SELECT5,SELECT6,SELECT7,SELECT8,SELECT9,SELECT10,SELECT11,SELECT12,SELECT13,SELECT14,SELECT15,SELECT16,SELECT17,SELECT18,BEGEND,BEGINT,BEGINT1,BEGINT2,SQL_STM,STORED_PROCEDURE1,STORED_PROCEDURE2,STORED_PROCEDURE3,STP4,STP5,STP6,STP7,Procedure_Option,S01,STORED_PROCEDURE5,BEGIN1,BEGIN2,BEGIN3,BEGIN4,FUNCTION1,FUNCTION2,FUNCTION3,FUNCTION4,FUNCTION5,FUNCTION6,FUNCTION7,FUNCTION8,FUNCTION9,FUNCTION10,FUNCTION11,FUNCTION12,FUNCTION13,FUNCTION14,FUNCTION15,CURSOR1,CURSOR2,CURSOR3,RESERVADAS_CURSOR1,RESERVADAS_CURSOR2,RESERVADAS_CURSOR3,RESERVADAS_CURSOR4,RESERVADAS_CURSOR5;

   

/* -------------Seccion de predencia y asociacion de los terminales----------- */
precedence left MAS, MENOS, ASTERISCO, DIV, PORCENTAJE;
precedence left MENOR, MENORIGUAL, MAYOR, MAYORIGUAL, IGUAL, IGUALIGUAL, NOIGUAL, And, Or, ADMIRACION;
precedence left Identificador,PARENTESISOP,PUNTOCOMA,GO,INNER,LEFT,RIGHT,FULL,FROM;

/* ------------------- Seccion de la gramatica ------------------------ */  

INIT ::= INIT DECL
    | /* ε */ ;

DECL ::= ROLLB
    |SAVEP
    |COM
    |DELETE1
    |DROPC
    |CREATEC
    |TRUNCATEC
    |ALTERC
    |UPDATEC
    |INSERTC
    |SELECT1
    |BEGEND
    |BEGINT
    |FUNCTION1
    |STORED_PROCEDURE1
    |CURSOR1
    |error PUNTOCOMA
    |error GO;

ROLLB ::= ROLLBACK ROLLB1 COMF;

ROLLB1 ::= TRAN ROLLB2
    |TRANSACTION ROLLB2 
    | WORK ;

ROLLB2 ::= Identificador
    | ARROBA Identificador
    | /* ε */ ;

COMF ::= PUNTOCOMA
    | GO;

SAVEP ::= SAVE SAVEP1 COMF;

SAVEP1 ::= TRAN SAVEP2
    |TRANSACTION SAVEP2;

SAVEP2 ::= Identificador 
    |ARROBA Identificador;

COM ::= COMMIT  COM1 COMF;

COM1 ::= TRAN COM2 
    |TRANSACTION COM2
    | WORK ;

COM2 ::= Identificador
    | ARROBA Identificador
    | COM3 ;

COM3 ::= WITH PARENTESISOP  DELAYED_DURABILITY IGUAL COM4 PARENTESISCLO 
    |/* ε */ ; 

COM4 ::= OFF 
    |ON ;

////////////////////////////////////////////////////////////////////////////////////// Comienza Viejo////////////////////////////
DELETE1 ::= DELETE DELETE2; 

DELETE2 ::= TOP PARENTESISOP SEXP PARENTESISCLO DELETE3 
    | DELETE4;

DELETE3 ::= PORCENTAJE DELETE4 
    | DELETE4;

DELETE4 ::= FROM DELETE5 
    | DELETE5;

DELETE5 ::= OBJECT DELETE6 
    | ARROBA Identificador DELETE6;

DELETE6 ::= OUTCL DELETE7 
    | DELETE7;

DELETE7 ::= FROM JOINTB DELETE8 
    | DELETE9;

DELETE8 ::= COMMA JOINTB DELETE8 
    | DELETE9;

DELETE9 ::= WHERE EXPRESSION COMF 
    | COMF;


OBJECT ::= Identificador OBJECT1; 

OBJECT1 ::= PUNTO Identificador OBJECT2 
    | /* ε */ ;

OBJECT2 ::= PUNTO Identificador OBJECT3 
    | /* ε */ ;

OBJECT3 ::= PUNTO Identificador
    | /* ε */ ;

SEXP ::= SEXP3 SEXP2; 

SEXP2 ::= MAS SEXP3 SEXP2 
    | MENOS SEXP3 SEXP2 
    | /* ε */ ;

SEXP3 ::= SEXP5 SEXP4 ;

SEXP4 ::= ASTERISCO SEXP5 SEXP4 
    | DIV SEXP5 SEXP4 
    | /* ε */ ;

SEXP5 ::= PARENTESISOP SEXP PARENTESISCLO 
    | Entero 
    | Float
    | ARROBA Identificador
    | AGG_FN ;

OUTCL ::= OUTPUT DML OUTCL1 
    | /* ε */ ;

OUTCL1 ::= INTO OUTCL2 
    | /* ε */ ;

OUTCL2 ::= ARROBA Identificador OUTCL3 
    | Identificador OUTCL3 ;

OUTCL3 ::= COLST 
    | /* ε */ ;

EXPRESSION ::= SEXP EXPRESSION1 EXPRESSION3 
    | EXPRESSION2 SUM_OPR EXPRESSION2 
    | NOT EXPRESSION EXPRESSION4 
    |  /* ε */ ;

EXPRESSION1 ::= AR_OPR 
    | COMPARE_OPR 
    | SUM_OPR ;

EXPRESSION2 ::= Cadena 
    | Identificador;

EXPRESSION3 ::= SEXP
    | Identificador 
    | Cadena ;

EXPRESSION4 ::= COMPARE_OPR 
    | LOGIC_OPR ;

AGG_FN ::= AVG PARENTESISOP SEL_AVG PARENTESISCLO 
    | COUNT PARENTESISOP SEL_COUNT PARENTESISCLO 
    | MAX PARENTESISOP SEL_AGR PARENTESISCLO 
    | MIN PARENTESISOP SEL_AGR PARENTESISCLO 
    | SUM PARENTESISOP SEL_AGR PARENTESISCLO ;

SEL_AVG ::= SEL_AD SEL_AVG2; 

SEL_AD ::= ALL 
    | DISTINCT 
    | /* ε */ ;

SEL_AVG2 ::= SEXP 
    | Identificador SEL_AVG3; 

SEL_AVG3 ::= PUNTO Identificador 
    | /* ε */ ; 

SEL_COUNT ::= SEL_AD SEL_COUNT2 ;

SEL_COUNT2 ::= ASTERISCO
    | Identificador SEL_COUNT3 
    | SEXP  ;

SEL_COUNT3 ::= PUNTO Identificador 
    | /* ε */ ; 

SEL_AGR ::= SEL_AD SEL_AGR2 ;

SEL_AGR2 ::= Identificador SEL_AGR3 
    | SEXP;  

SEL_AGR3 ::= PUNTO Identificador 
    | /* ε */ ;

DML ::= DML2 DML3 ;

DML2 ::= COLNAME 
    | SEXP ;

DML3 ::= AS Identificador DML4 
    | /* ε */ ;

DML4 ::= COMMA DML
    | /* ε */ ;

COLST ::= PARENTESISOP COLST1 ;

COLST1 ::= Identificador COLST2 ;

COLST2 ::= COMMA COLST1 
    | PARENTESISCLO ;

AR_OPR ::= MENOS 
    | ASTERISCO 
    | DIV
    | PORCENTAJE ;

SUM_OPR ::= MAS;

COMPARE_OPR ::= MAYOR 
    | MENOR 
    | MAYORIGUAL 
    | MENORIGUAL;

LOGIC_OPR ::= BETWEEN 
    | IN 
    | LIKE;

COLNAME ::= Identificador PUNTO COLNAME1 ;

COLNAME1 ::= ASTERISCO 
    | Identificador ; 

JOINTB ::= TB_SOURCE JOINTB1 
    | PARENTESISOP JOIN PARENTESISCLO ;

JOINTB1 ::= JOIN_TYPE JOINTB3 
    | CROSS JOIN JOINTB4 
    | /* ε */ ;

JOINTB2 ::= JOIN_TYPE JOINTB3 
    | CROSS JOIN JOINTB4 ;

JOINTB3 ::= TB_SOURCE ON SearchC JOINTB4 ;

JOINTB4 ::= JOINTB2 
    | /* ε */ ;

JOIN_TYPE ::= JOIN_TYPE1 JOIN; 

JOIN_TYPE1 ::= INNER 
    |JOIN_TYPE2  ;

JOIN_TYPE2 ::= LEFT JOIN_TYPE3 
    | RIGHT JOIN_TYPE3 
    | FULL JOIN_TYPE3 
    | /* ε */ ;

JOIN_TYPE3 ::= OUTER 
    | /* ε */ ;
 
TB_SOURCE ::= OBJECT TB_SOURCE1 TB_SOURCE2 
    | ROWSET TB_SOURCE1 
    | ARROBA Identificador TB_SOURCE1 ;

TB_SOURCE1 ::= AS Identificador 
    | Identificador 
    | /* ε */ ;

TB_SOURCE2 ::= SAM_CL 
    | /* ε */ ;

ROWSET ::= OPENDATASOURCE PARENTESISOP Cadena COMMA Cadena PARENTESISCLO 
    | OPENQUERY PARENTESISOP Identificador COMMA Cadena PARENTESISCLO ; 

SAM_CL ::= TABLESAMPLE PARENTESISOP SAM_CL1 PARENTESISCLO; 

SAM_CL1 ::= SEXP SAM_CL2; 

SAM_CL2 ::= PERCENT
    | ROWS
    | /* ε */ ;

SearchC ::= SearchC1 SearchC2 ;

SearchC1 ::= MATCH PARENTESISOP GSP PARENTESISCLO  
    | SH_CONDWM ;

SearchC2 ::= AND SearchC ;

GSP ::= Identificador GSP1 Identificador ;

GSP1 ::= MENOR MENOS PARENTESISOP Identificador PARENTESISCLO MENOS 
    | MENOS PARENTESISOP Identificador PARENTESISCLO MENOS MAYOR ;

SH_CONDWM ::= NOT PREDICADO SH_CONDWM1 
    | PARENTESISOP SH_CONDWM PARENTESISCLO SH_CONDWM1; 

SH_CONDWM1 ::= OR SH_CONDWM2 
    | /* ε */ ;

SH_CONDWM2 ::= NOT SH_CONDWM3 
    | SH_CONDWM3 ;

SH_CONDWM3 ::= PREDICADO SH_CONDWM1 
    | PARENTESISOP SH_CONDWM PARENTESISCLO SH_CONDWM1 ;

PREDICADO ::= PREDICADO1 PREDICADO2 
    | CONTAINS PARENTESISOP PREDICADO7 COMMA PREDICADO8 PARENTESISCLO
    | FREETEXT PARENTESISOP PREDICADO7 COMMA PREDICADO9 PARENTESISCLO ;

PREDICADO1 ::= Identificador 
    | SEXP 
    | CaseWhen 
    | AGG_FN 
    | STR_FN 
    | DT_FN 
    | CONV 
    | OTH_FN ;

PREDICADO2 ::= COMPARE_OPR PREDICADO1 
    | NOT PREDICADO3 
    | LIKE PREDICADO1 PREDICADO6 
    | BETWEEN PREDICADO1 AND PREDICADO1 
    | IS PREDICADO4 NULL 
    | IN PREDICADO1 PREDICADO5 ;

PREDICADO3 ::= LIKE PREDICADO1 PREDICADO6 
    | BETWEEN PREDICADO1 AND PREDICADO1 
    | IN PREDICADO1 PREDICADO5 ;

PREDICADO4 ::= NOT 
    | /* ε */ ;

PREDICADO5 ::= COMMA PREDICADO1 PREDICADO5 
    | /* ε */ ; 

PREDICADO6 ::= ESCAPE Cadena 
    | /* ε */ ; 

PREDICADO7 ::= ASTERISCO
    | OBJECT ;

PREDICADO8 ::= SearchC ;

PREDICADO9 ::= Cadena 
    | ARROBA Identificador ;

CaseWhen ::= CASE CaseWhen1 ;

CaseWhen1 ::= EXPRESSION CaseWhen2 
    | CaseWhen2 ;

CaseWhen2 ::= WHEN EXPRESSION THEN EXPRESSION CaseWhen3 ;

CaseWhen3 ::= ELSE EXPRESSION END 
    | CaseWhen2 
    | END ;

STR_FN ::= LOWER PARENTESISOP STR_FN1 PARENTESISCLO 
    | TRANSLATE PARENTESISOP STR_FN1 COMMA STR_FN1 COMMA STR_FN1 PARENTESISCLO 
    | UPPER PARENTESISOP STR_FN1 PARENTESISCLO 
    | CHAR PARENTESISOP SEXP PARENTESISCLO 
    | LEFT PARENTESISOP STR_FN1 COMMA SEXP PARENTESISCLO 
    | TRIM PARENTESISOP STR_FN1 STR_FN2 PARENTESISCLO 
    | NCHAR PARENTESISOP SEXP PARENTESISCLO 
    | RIGHT PARENTESISOP STR_FN1 COMMA SEXP PARENTESISCLO 
    | SPACE PARENTESISOP SEXP PARENTESISCLO  
    | SUBSTRING PARENTESISOP STR_FN1 COMMA SEXP COMMA SEXP PARENTESISCLO ;

STR_FN1 ::= ARROBA Identificador 
    | Cadena 
    | Identificador ;

STR_FN2 ::= FROM STR_FN1 
    | /* ε */ ;

DT_FN ::= CURRENT_TIMESTAMP 
    | DAY PARENTESISOP DT_FN1 PARENTESISCLO 
    | MONTH PARENTESISOP DT_FN1 PARENTESISCLO 
    | YEAR PARENTESISOP DT_FN1 PARENTESISCLO 
    | SET LANGUAGE DT_FN2 ;

DT_FN1 ::= Cadena 
    | ARROBA Identificador ;

DT_FN2 ::= ARROBA Identificador 
    | Identificador ;

CONV ::= CAST PARENTESISOP CONV1  
    | CONVERT PARENTESISOP CONV2 ;

CONV1 ::= EXPRESSION AS DATA_TYPE CONV3 PARENTESISCLO ;

CONV2 ::= DATA_TYPE CONV3 CONV4 ; 

CONV3 ::= PARENTESISOP Entero PARENTESISCLO 
    | /* ε */ ; 

CONV4 ::= EXPRESSION CONV5 ;

CONV5 ::= COMMA SEXP 
    | PARENTESISCLO ;

OTH_FN ::= NEXT VALUE FOR Identificador OTH_FN1 
    | SYSTEM_USER 
    | SESSION_USER 
    | NULLIF PARENTESISOP EXPRESSION COMMA EXPRESSION PARENTESISCLO ;

OTH_FN1 ::=  PUNTO Identificador OTH_FN2 
    | OTH_FN2 ;

OTH_FN2 ::= PUNTO Identificador OTH_FN3 
    | OTH_FN3 ;

OTH_FN3 ::= OVER ORDER BY ORDERB ;

ORDERB ::= SELIST ORDERB1 ;

ORDERB1 ::= ORDERB2 
    | COMMA ORDERB ;

ORDERB2 ::= COLLATE ORDERB3 
    | ORDERB4 ;

ORDERB3 ::= Identificador ORDERB4 ;

ORDERB4 ::= ASC 
    | DESC ;

SELIST ::= SELIST1 ;

SELIST1 ::= ASTERISCO
    | Identificador SELIST2 
    | EXPRESSION SELIST5 
    | AGG_FN SELIST5 
    | STR_FN SELIST5 
    | DT_FN SELIST5 
    | CONV SELIST5 
    | CaseWhen SELIST5 ;

SELIST2 ::= PUNTO SELIST3 
    | IGUAL SELIST6 
    | /* ε */ ;

SELIST3 ::= ASTERISCO 
    | Identificador SELIST5 ;

SELIST5 ::= AS Identificador 
    | Identificador  
    | /* ε */ ;

SELIST6 ::= EXPRESSION ;

DATA_TYPE ::= Identificador DATA_TYPE2
                |DATA_TYPE3 ;

DATA_TYPE2 ::= PUNTO Identificador;
                
                

DATA_TYPE3 ::= BIT DATA_TYPE4
                |INT DATA_TYPE4
                |INTEGER DATA_TYPE4
                |FLOAT DATA_TYPE4
                |VARCHAR DATA_TYPE4
                |DATE DATA_TYPE4
                |REAL DATA_TYPE4
                |DECIMAL DATA_TYPE4
                |NUMERIC DATA_TYPE4
                |SMALLINT DATA_TYPE4
                |TIME DATA_TYPE4
                |CHAR DATA_TYPE4
                |NCHAR DATA_TYPE4 ;

DATA_TYPE4 ::= PARENTESISOP Entero DATA_TYPE5
                |/* ε */ ;

DATA_TYPE5 ::= COMMA Entero PARENTESISCLO
                | PARENTESISCLO;

///////////////COMIENZA DROP

DROPC ::= DROP DROP2 DROP1 DROP10 ;

DROP1 ::= TABLE DROP3  
    | DATABASE DROP5 
    | USER Identificador
    | VIEW DROP3 
    | INDEX DROP7 ;

DROP2 ::= IF EXISTS 
    | /* ε */ ;

DROP3 ::= OBJECT DROP4 ;

DROP4 ::= COMMA DROP11 
    | /* ε */ ;

DROP5 ::= Identificador DROP6 ;

DROP6 ::= COMMA DROP5 
    | /* ε */ ;

DROP7 ::= Identificador DROP8 ;

DROP8 ::= ON OBJECT 
    | PUNTO Identificador DROP9 ;

DROP9 ::= PUNTO Identificador 
    | /* ε */ ;

DROP10 ::= COMF
    | COMMA DROPC ;

DROP11 ::= DROP3 
    | DROPC;

////////////////Comienza TRUNCATE

TRUNCATEC ::= TRUNCATE TABLE OBJECT TRUNCATE1 COMF;

TRUNCATE1 ::= COMMA OBJECT 
    | /* ε */ ;

 ///////////////////////////COMIENZA CREATE

CREATEC ::= CREATE CREATE1 COMF ;

CREATE1 ::= DATABASE Identificador 
    | CREATE2 CREATE4 
    | TABLE CREATE11 
    | USER Identificador 
    | CREATE14 CREATE15
    | PROCEDURE STORED_PROCEDURE1 ;

CREATE2 ::= UNIQUE CREATE3 
    | CREATE3 ;

CREATE3 ::= CLUSTERED
    |NONCLUSTERED ;

CREATE4 ::= INDEX Identificador ON OBJECT CREATE5 ;

CREATE5 ::= PARENTESISOP CREATE6  ;

CREATE6 ::= Identificador CREATE7 CREATE8 ;

CREATE7 ::= ASC 
    | DESC 
    |  /* ε */ ;

CREATE8 ::= COMMA CREATE6 
    | PARENTESISCLO CREATE9 ;

CREATE9 ::= INCLUDE PARENTESISOP Identificador CREATE10 PARENTESISCLO
    |  /* ε */ ;

CREATE10 ::= COMMA Identificador CREATE10 
    |  /* ε */ ;

CREATE11 ::= OBJECT CREATE12; 

CREATE12 ::= COL_DEF CREATE13 
    | TB_CST CREATE13 ;

CREATE13 ::= COMMA CREATE12 
    |  /* ε */ ; 

CREATE14 ::= OR ALTER 
    |  /* ε */ ; 

CREATE15 ::= VIEW Identificador CREATE16 ;

CREATE16 ::= PUNTO Identificador CREATE17 
    | CREATE17 ;

CREATE17 ::= PARENTESISOP Identificador CREATE18 PARENTESISCLO CREATE19 
    | CREATE19 ;

CREATE18 ::= COMMA Identificador CREATE18 
    |  /* ε */ ;

CREATE19 ::= AS SELECT CREATE20 ;

CREATE20 ::= WITH CHECK OPTION 
    |  /* ε */ ;

//////////////////////////// COMUNES///

TB_CST ::= TB_CST1 TB_CST2  ;

TB_CST1 ::= CONSTRAINT Identificador 
    | /* ε */ ;

TB_CST2 ::= PRIMARY KEY TB_CST3 
    | UNIQUE TB_CST3 
    | TB_CST7 
    | CONNECTION TB_CST17 
    | DEFAULT TB_CST18 
    | CHECK TB_CST15 ;

TB_CST3 ::= CLUSTERED TB_CST4 
    | TB_CST4 ;

TB_CST4 ::= WITH TB_CST5 TB_CST6 
    | TB_CST6 ;

TB_CST5 ::= FILLFACTOR IGUAL Entero 
    | PARENTESISOP FILLFACTOR IGUAL Entero PARENTESISCLO ;

TB_CST6 ::= ON Identificador PARENTESISOP Identificador PARENTESISCLO ;

TB_CST7 ::= TB_CST8 REFERENCES Identificador TB_CST9 ;

TB_CST8 ::= FOREIGN KEY 
    | /* ε */ ;

TB_CST9 ::= PUNTO Identificador TB_CST10 
    | TB_CST10 ;

TB_CST10 ::= PARENTESISOP Identificador PARENTESISCLO TB_CST11 ;

TB_CST11 ::= ON TB_CST12 TB_CST13 
    | NOT FOR REPLICATION 
    | /* ε */ ;

TB_CST12 ::= DELETE 
    | UPDATE ;

TB_CST13 ::= NO ACTION 
    | CASCADE
    | SET TB_CST14 ;

TB_CST14 ::= NULL 
    | DEFAULT ;

TB_CST15 ::= NOT FOR REPLICATION TB_CST16 
    | TB_CST16 ;

TB_CST16 ::= PARENTESISOP EXPRESSION PARENTESISCLO TB_CST21 ;

TB_CST17 ::= PARENTESISOP TB_CST19 PARENTESISCLO ;

TB_CST18 ::= CONST_EXP FOR Identificador TB_CST23 ; 

TB_CST19 ::= Identificador TO Identificador TB_CST20 ;

TB_CST20 ::= COMMA TB_CST19 
    | /* ε */ ; 

TB_CST21 ::= ON DELETE TB_CST22  
    | /* ε */ ; 

TB_CST22 ::= NO ACTION 
    | CASCADE ;

TB_CST23 ::= WITH VALUES 
    | /* ε */ ;


COL_DEF ::= Identificador DATA_TYPE COL_DEF1 ;

COL_DEF1 ::= COLLATE Identificador COL_DEF2 
    | COL_DEF2 ;

COL_DEF2 ::= NULL COL_DEF3 
    | NOT NULL COL_DEF3 
    | COL_DEF3 
    | IDENTITY COL_DEF6 ;

COL_DEF3 ::= CONSTRAINT Identificador COL_DEF10 
    | COL_CST 
    | COL_DEF4 ;

COL_DEF4 ::= DEFAULT CONST_EXP COL_DEF5 ;

COL_DEF5 ::= WITH VALUES COL_DEF8 
    | COL_DEF8 ;

COL_DEF6 ::= PARENTESISOP SEXP COMMA SEXP PARENTESISCLO COL_DEF7 
    | COL_DEF7 ;

COL_DEF7 ::= NOT FOR REPLICATION COL_DEF8 
    | COL_DEF8 ;

COL_DEF8 ::= ROWGUIDCOL COL_DEF9 
    | COL_DEF9 ;

COL_DEF10 ::= COL_DEF4 
    | COL_CST ;

CONST_EXP ::= ARROBA Identificador
    | Identificador
    | Cadena
    | Entero 
    | Float ;

COL_CST ::= COL_CST1 COL_CST2 ; 

COL_CST1 ::= CONSTRAINT Identificador 
    | /* ε */ ;

COL_CST2 ::= PRIMARY KEY COL_CST3 
    | UNIQUE COL_CST3 
    | COL_CST7 
    | CHECK COL_CST15 ;

COL_CST3 ::= CLUSTERED COL_CST4 
    | COL_CST4 ;

COL_CST4 ::= WITH COL_CST5 COL_CST6 
    | COL_CST6 ;

COL_CST5 ::= FILLFACTOR IGUAL Entero 
    | PARENTESISOP FILLFACTOR IGUAL Entero PARENTESISCLO ;

COL_CST6 ::= ON Identificador PARENTESISOP Identificador PARENTESISCLO 
    | /* ε */ ;

COL_CST7 ::= COL_CST8 REFERENCES Identificador COL_CST9 ;

COL_CST8 ::= FOREIGN KEY 
    | /* ε */ ;

COL_CST9 ::= PUNTO Identificador COL_CST10 
    | COL_CST10 ;

COL_CST10 ::= PARENTESISOP Identificador PARENTESISCLO COL_CST11 ;

COL_CST11 ::= ON COL_CST12 COL_CST13 
    | NOT FOR REPLICATION 
    | /* ε */ ;

COL_CST12 ::= DELETE 
    | UPDATE ;

COL_CST13 ::= NO ACTION 
    | CASCADE 
    | SET COL_CST14 ;

COL_CST14 ::= NULL 
    | DEFAULT ;

COL_CST15 ::= NOT FOR REPLICATION COL_CST16 
    | COL_CST16 ;

COL_CST16 ::= PARENTESISOP EXPRESSION PARENTESISCLO ;

//////////////////////////////COMIENZA ALTER

ALTERC ::= ALTER ALTER1 ;

ALTER1 ::= VIEW ALTER2 
    | TABLE OBJECT ALTER6 
    | USER Identificador COMF
    | DATABASE ALTER22 ALTER23
    | PROCEDURE STORED_PROCEDURE1 ;

ALTER2 ::= Identificador ALTER3 ;

ALTER3 ::= PUNTO Identificador ALTER4 
    | ALTER4 ;

ALTER4 ::= PARENTESISOP Identificador ALTER5 
    | AS SELECT ALTER24 ;

ALTER5 ::= COMMA Identificador ALTER5 
    | PARENTESISCLO AS SELECT1 ALTER24 ;

ALTER6 ::= ALTER COLUMN Identificador ALTER7 
    | ADD ALTER15 
    | DROP ALTER18 ;

ALTER7 ::= Identificador ALTER8 ALTER9 
    | ADD ALTER14 
    | DROP ALTER14 ;

ALTER8 ::= PUNTO Identificador 
    | /* ε */ ; 

ALTER9 ::= PARENTESISOP Entero ALTER10 PARENTESISCLO ALTER11 ;

ALTER10 ::= COMMA Entero 
    | /* ε */ ;

ALTER11 ::= COLLATE Identificador ALTER12 
    | ALTER12 ;

ALTER12 ::= ALTER13 
    | /* ε */ ;

ALTER13 ::= NULL 
    | NOT NULL ;

ALTER14 ::= ROWGUIDCOL 
    | NOT FOR REPLICATION ;

ALTER15 ::= COL_DEF ALTER16 
    | TB_CST ALTER16 ;

ALTER16 ::= COMMA ALTER15 
    | COMF;

ALTER18 ::= CONSTRAINT ALTER19 
    | COLUMN ALTER19 
    | ALTER19 ;

ALTER19 ::= IF EXISTS ALTER20 
    | ALTER20 ;

ALTER20 ::= Identificador ALTER21 ;

ALTER21 ::= COMMA ALTER20 
    | COMF ;

ALTER22 ::= Identificador 
    | CURRENT;

ALTER23 ::= COLLATE Identificador COMF ;

ALTER24 ::= WITH CHECK OPTION 
    | /* ε */ ;

///////////////////COMIENZA UPDATE

UPDATEC ::= UPDATE UPDATE1 ;

UPDATE1 ::= TOP PARENTESISOP SEXP PARENTESISCLO UPDATE2 UPDATE3 
    | UPDATE3 ;

UPDATE2 ::= PERCENT 
    | /* ε */ ; 

UPDATE3 ::= OBJECT UPDATE4 
    | ARROBA Identificador UPDATE4 ;

UPDATE4 ::= SET UPDATE5 ;

UPDATE5 ::= UPDATE6 UPDATE11 ;

UPDATE6 ::= Identificador UPDATE7 
    | ARROBA Identificador IGUAL UPDATE10 ;

UPDATE7 ::= PUNTO UPDATE8 
    | IGUAL UPDATE9 ;

UPDATE8 ::= Identificador IGUAL UPDATE10 ;

UPDATE9 ::= EXPRESSION 
    | DEFAULT 
    | NULL ;

UPDATE10 ::= EXPRESSION ;

UPDATE11 ::= COMMA UPDATE5 
    | UPDATE12 COMF ;

UPDATE12 ::= OUTCL UPDATE16 
    | UPDATE16 ;

UPDATE13 ::= JOINTB UPDATE14 ;

UPDATE14 ::= COMMA UPDATE13 ;

UPDATE16 ::= FROM UPDATE13 UPDATE17 
    | UPDATE17 ;

UPDATE17 ::= WHERE EXPRESSION 
    | /* ε */ ; 

///////////////COMIENZA INSERT

INSERTC ::= INSERT INSERT1 ;

INSERT1 ::= TOP PARENTESISOP SEXP PARENTESISCLO INSERT2 
    | INSERT3 ;

INSERT2 ::= PERCENT INSERT3 
    | INSERT3 ;

INSERT3 ::= INTO INSERT4 
    | INSERT4 ;

INSERT4 ::= OBJECT INSERT5 ;

INSERT5 ::= COLST INSERT6 
    | INSERT6 ;

INSERT6 ::= OUTCL INSERT7    
    | INSERT7 ;

INSERT7 ::= VALUES PARENTESISOP INSERT8 
    | SELECT1 COMF 
    | DEFAULT VALUES COMF;

INSERT8 ::= INSERT10 INSERT11 ;

INSERT10 ::= DEFAULT 
    | NULL 
    | EXPRESSION ;

INSERT11 ::= COMMA INSERT8 
    | PARENTESISCLO INSERT12 ;

INSERT12 ::= COMMA VALUES PARENTESISOP INSERT8 
    | COMF ;

 /////////////////////////////////////////////SELECT

SELECT1 ::= SELECT SELECT2 ;

SELECT2 ::= SELECT3 SELECT4 ;

SELECT3 ::= ALL 
    | DISTINCT
    | /* ε */ ; 

SELECT4 ::= TOP SELECT5 
    | SELECT7 ;

SELECT5 ::= PARENTESISOP SEXP PARENTESISCLO SELECT6 ;

SELECT6 ::= PERCENT SELECT7 
    | SELECT7 ;

SELECT7 ::= SELIST SELECT8 ;

SELECT8 ::= INTO SELECT9 
    | SELECT11 ;

SELECT9 ::= OBJECT SELECT11 ;

SELECT11 ::= FROM JOINTB SELECT17 
    | SELECT12 ;

SELECT12 ::= WHERE EXPRESSION SELECT13 
    | SELECT13 ;

SELECT13 ::= GROUP BY EXPRESSION SELECT18 SELECT14 
    | SELECT14 ;

SELECT14 ::= HAVING EXPRESSION SELECT15 
    | SELECT15 ;

SELECT15 ::= ORDER BY ORDERB 
    | /* ε */ ;  

SELECT17 ::= COMMA JOINTB SELECT17 
    | SELECT12 ;

SELECT18 ::= COMMA EXPRESSION SELECT18 
    | COMF;

BEGEND ::= BEGIN SQL_STM END ;

BEGINT ::= BEGIN BEGINT1 COMF ;


BEGINT1 ::= TRAN BEGINT2 
    |TRANSACTION BEGINT2 ;

BEGINT2 ::=  Identificador  
    |ARROBA Identificador;

SQL_STM ::= ROLLB
    |SAVEP
    |COM
    |DELETE1
    |DROPC
    |CREATEC
    |TRUNCATEC
    |ALTERC
    |UPDATEC
    |INSERTC
    |SELECT1;

STORED_PROCEDURE1 ::= PROCEDURE OBJECT STORED_PROCEDURE2 COMF;

STORED_PROCEDURE2 ::= ARROBA Identificador DATA_TYPE STORED_PROCEDURE3 STP7 AS BEGIN1 ;

STORED_PROCEDURE3 ::=  VARYING STP4 
    |STP4 ;

STP4 ::= IGUAL DEFAULT STP5 
    |STP5 ;

STP5 ::=OUTPUT 
    | /* ε */ ;  


STP7 ::= FOR REPLICATION 
    | /* ε */ ; 


BEGIN1 ::= BEGIN BEGIN2 END ;

BEGIN2 ::= SELECT1 BEGIN3 
    | INSERT BEGIN3 
    | UPDATE BEGIN3 
    | DELETE1  BEGIN3 ;

BEGIN3 ::= SELECT1 BEGIN4 
    |INSERT BEGIN4 
    |UPDATE BEGIN4 
    |DELETE BEGIN4 
    | /* ε */ ;

 

BEGIN4 ::= SELECT1 
    |INSERT 
    |UPDATE 
    |DELETE
    | /* ε */ ;


FUNCTION1 ::= Identificador FUNCTION1 
    | FUNCTION2 ;

FUNCTION2 ::= PUNTO Identificador  FUNCTION3 ;

FUNCTION3 ::=  PARENTESISOP FUNCTION4 PARENTESISCLO FUNCTION7 ;

FUNCTION4 ::= ARROBA Identificador FUNCTION5 DATA_TYPE FUNCTION6 ;

FUNCTION5 ::= AS  
    | /* ε */ ;

FUNCTION6 ::= COMMA FUNCTION4 
    | /* ε */ ;


FUNCTION7 ::= RETURNS FUNCTION8 ;

FUNCTION8 ::=  DATA_TYPE FUNCTION9 
    | TABLE FUNCTION12 ;

 

FUNCTION9 ::= AS FUNCTION10 
    | FUNCTION12 ;


FUNCTION10 ::=  BEGEND FUNCTION11 COMF ;

FUNCTION11 ::= RETURN SEXP ;

FUNCTION12 ::=  AS FUNCTION13 
    | FUNCTION15 ;

FUNCTION13 ::= PARENTESISOP FUNCTION14 PARENTESISCLO 
    | FUNCTION14 ;

FUNCTION14 ::= SELECT1 ; 

CURSOR1 ::= DECLARE Identificador CURSOR RESERVADAS_CURSOR1 CURSOR2 ;

CURSOR2 ::= FOR CURSOR3;

CURSOR3 ::= SELECT1
    |UPDATEC;

RESERVADAS_CURSOR1 ::= LOCAL RESERVADAS_CURSOR2 
    | GLOBAL RESERVADAS_CURSOR2 
    | RESERVADAS_CURSOR2 ; 

RESERVADAS_CURSOR2 ::=  SCROLL RESERVADAS_CURSOR3
    |FORWARD_ONLY  RESERVADAS_CURSOR3
    | RESERVADAS_CURSOR3;
    
RESERVADAS_CURSOR3 ::=  STATIC  RESERVADAS_CURSOR4
    |KEYSET  RESERVADAS_CURSOR4
    |DYNAMIC  RESERVADAS_CURSOR4
    |FAST_FORWARD  RESERVADAS_CURSOR4
    | RESERVADAS_CURSOR4;
    
RESERVADAS_CURSOR4 ::=  READ_ONLY  RESERVADAS_CURSOR5
    |SCROLL_LOCKS  RESERVADAS_CURSOR5
    |OPTIMISTIC  RESERVADAS_CURSOR5
    |RESERVADAS_CURSOR5;
    
RESERVADAS_CURSOR5 ::=  TYPE_WARNING
    | /* ε */ ;
