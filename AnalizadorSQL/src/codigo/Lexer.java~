/* The following code was generated by JFlex 1.4.3 on 23/09/19 16:52 */

package codigo;
import static codigo.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 23/09/19 16:52 from the specification file
 * <tt>/home/cristobal/Documentos/MiniSQL/AnalizadorSQL/src/codigo/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\65\1\3\2\0\1\14\22\0\1\63\1\17\1\0\1\30"+
    "\1\0\1\16\1\21\1\2\1\24\1\25\1\12\1\5\1\16\1\13"+
    "\1\6\1\11\12\1\1\0\1\16\1\17\1\20\1\17\1\0\1\16"+
    "\1\31\1\47\1\41\1\32\1\7\1\57\1\52\1\43\1\45\1\61"+
    "\1\50\1\33\1\54\1\36\1\44\1\51\1\62\1\35\1\40\1\34"+
    "\1\42\1\55\1\53\1\60\1\37\1\46\1\22\1\0\1\23\1\0"+
    "\1\56\1\0\4\64\1\10\25\64\1\26\1\15\1\27\66\0\1\4"+
    "\uff4b\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\1\1\1\3\1\1\2\4\2\5"+
    "\2\4\1\1\1\4\1\1\4\4\27\5\1\6\1\0"+
    "\1\7\2\0\5\5\1\0\1\10\2\5\1\11\2\5"+
    "\1\12\24\5\1\13\12\5\1\14\30\5\1\15\1\16"+
    "\4\5\1\17\1\5\1\20\1\21\1\5\1\22\4\5"+
    "\1\23\17\5\1\24\23\5\1\0\2\5\1\25\5\5"+
    "\1\26\2\0\1\10\1\27\1\30\1\31\1\5\1\32"+
    "\1\33\1\34\1\5\1\35\3\5\1\36\4\5\1\37"+
    "\2\5\1\40\33\5\1\41\24\5\1\42\4\5\1\43"+
    "\11\5\1\44\5\5\1\45\22\5\1\46\16\5\1\47"+
    "\2\5\1\50\17\5\1\51\1\52\2\5\1\53\11\5"+
    "\1\54\14\5\1\55\2\5\1\56\12\5\1\57\4\5"+
    "\1\6\1\0\1\60\1\5\1\0\1\5\1\61\3\5"+
    "\1\62\11\5\1\63\1\64\4\5\1\65\1\5\1\66"+
    "\1\67\5\5\1\70\1\71\2\5\1\72\1\5\1\73"+
    "\1\74\4\5\1\75\3\5\1\76\2\5\1\77\2\5"+
    "\1\100\1\5\1\101\1\102\1\103\1\104\11\5\1\105"+
    "\1\5\1\106\3\5\1\107\4\5\1\110\1\5\1\111"+
    "\2\5\1\112\7\5\1\113\6\5\1\114\1\115\7\5"+
    "\1\116\1\117\10\5\1\120\17\5\1\121\6\5\1\122"+
    "\1\5\1\123\3\5\1\124\1\5\1\125\5\5\1\126"+
    "\7\5\1\127\5\5\1\130\1\131\1\5\1\132\3\5"+
    "\1\133\3\5\1\134\12\5\1\135\3\5\1\136\1\5"+
    "\1\137\1\140\10\5\1\141\4\5\1\142\1\143\4\5"+
    "\1\144\2\5\1\145\1\5\1\0\7\5\1\146\23\5"+
    "\1\147\1\5\1\150\1\151\1\152\3\5\1\153\26\5"+
    "\1\154\2\5\1\155\1\156\21\5\1\157\3\5\1\160"+
    "\5\5\1\161\1\5\1\162\2\5\1\163\13\5\1\164"+
    "\2\5\1\165\3\5\1\166\1\167\1\5\1\170\2\5"+
    "\1\171\1\5\1\172\11\5\1\173\3\5\1\174\4\5"+
    "\1\175\3\5\1\176\1\5\1\177\11\5\1\200\1\201"+
    "\4\5\1\202\1\5\1\203\1\204\1\5\1\205\1\206"+
    "\1\5\1\207\1\5\1\210\1\211\1\5\1\212\1\5"+
    "\1\213\2\5\1\214\1\215\1\216\4\5\1\217\1\5"+
    "\1\220\1\221\1\0\1\222\3\5\1\223\1\224\2\5"+
    "\1\225\3\5\1\226\6\5\1\227\1\230\6\5\1\231"+
    "\16\5\1\232\4\5\1\233\1\234\7\5\1\235\3\5"+
    "\1\236\4\5\1\237\3\5\1\240\1\241\12\5\1\242"+
    "\1\5\1\243\5\5\1\244\7\5\1\245\1\246\2\5"+
    "\1\247\1\250\2\5\1\251\4\5\1\252\7\5\1\253"+
    "\6\5\1\254\1\255\3\5\1\256\6\5\1\257\1\5"+
    "\1\260\4\5\1\261\1\262\1\263\7\5\1\0\1\264"+
    "\1\5\1\265\10\5\1\266\1\267\2\5\1\270\5\5"+
    "\1\271\11\5\1\272\1\273\5\5\1\274\7\5\1\275"+
    "\1\5\1\276\1\5\1\277\1\300\1\301\1\302\11\5"+
    "\1\303\1\5\1\304\1\305\1\5\1\306\4\5\1\307"+
    "\4\5\1\310\1\5\1\311\1\312\1\313\1\314\5\5"+
    "\1\315\2\5\1\316\4\5\1\317\1\5\1\320\3\5"+
    "\1\321\1\5\1\322\1\323\2\5\1\324\1\5\1\325"+
    "\2\5\1\326\2\5\1\0\1\327\1\330\2\5\1\331"+
    "\1\332\1\5\1\333\1\334\1\5\1\335\2\5\1\336"+
    "\1\5\1\337\1\5\1\340\1\5\1\341\2\5\1\342"+
    "\1\5\1\343\1\5\1\344\3\5\1\345\1\5\1\346"+
    "\2\5\1\347\1\350\1\351\4\5\1\352\1\353\1\5"+
    "\1\354\7\5\1\355\1\356\1\357\1\360\1\5\1\361"+
    "\5\5\1\362\2\5\1\363\1\364\3\5\1\365\4\5"+
    "\1\366\1\367\2\5\1\370\5\5\1\371\3\5\1\372"+
    "\1\5\1\373\1\0\1\374\1\375\1\5\1\376\1\377"+
    "\7\5\1\u0100\2\5\1\u0101\2\5\1\u0102\4\5\1\u0103"+
    "\10\5\1\u0104\1\5\1\u0105\4\5\1\u0106\1\5\1\u0107"+
    "\10\5\1\u0108\2\5\1\u0109\1\u010a\1\5\1\u010b\1\u010c"+
    "\1\u010d\1\5\1\u010e\1\u010f\1\5\1\u0110\1\0\3\5"+
    "\1\u0111\1\u0112\1\u0113\2\5\1\u0114\10\5\1\u0115\1\u0116"+
    "\5\5\1\u0117\1\5\1\u0118\3\5\1\u0119\4\5\1\u011a"+
    "\1\u011b\1\u011c\2\5\1\u011d\3\5\1\u011e\1\u011f\1\0"+
    "\1\5\1\u0120\1\5\1\u0121\1\u0122\1\u0123\1\u0124\1\u0125"+
    "\1\u0126\2\5\1\u0127\1\u0128\5\5\1\u0129\4\5\1\u012a"+
    "\2\5\1\u012b\2\5\1\u012c\1\5\1\u012d\1\0\4\5"+
    "\1\u012e\1\u012f\3\5\1\u0130\1\u0131\1\u0132\3\5\1\u0133"+
    "\2\5\1\u0134\1\5\1\u0135\1\u0136\1\5\1\u0137\4\5"+
    "\1\u0138\1\u0139\2\5\1\u013a\5\5\1\u013b\1\5\1\u013c"+
    "\4\5\1\u013d\3\5\1\u013e\2\5\1\u013f\15\5\1\u0140"+
    "\1\5\1\u0141\6\5\1\u0142";

  private static int [] zzUnpackAction() {
    int [] result = new int[1380];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\66\0\154\0\242\0\330\0\u010e\0\u0144\0\66"+
    "\0\u017a\0\u01b0\0\u01e6\0\u021c\0\u0252\0\u0288\0\u02be\0\u02f4"+
    "\0\u032a\0\u0360\0\u0396\0\u03cc\0\u0402\0\u0438\0\u046e\0\u04a4"+
    "\0\u04da\0\u0510\0\u0546\0\u057c\0\u05b2\0\u05e8\0\u061e\0\u0654"+
    "\0\u068a\0\u06c0\0\u06f6\0\u072c\0\u0762\0\u0798\0\u07ce\0\u0804"+
    "\0\u083a\0\u0870\0\u08a6\0\242\0\66\0\u010e\0\u08dc\0\u0912"+
    "\0\u0948\0\u097e\0\u09b4\0\u09ea\0\u0a20\0\u0a56\0\u0a8c\0\u0ac2"+
    "\0\u01b0\0\u0af8\0\u0b2e\0\u0b64\0\u0b9a\0\u0bd0\0\u0c06\0\u0c3c"+
    "\0\u0c72\0\u0ca8\0\u0cde\0\u0d14\0\u0d4a\0\u0d80\0\u0db6\0\u0dec"+
    "\0\u0e22\0\u0e58\0\u0e8e\0\u0ec4\0\u0efa\0\u0f30\0\u0f66\0\u0f9c"+
    "\0\u0fd2\0\u1008\0\u103e\0\u1074\0\u10aa\0\u10e0\0\u1116\0\u114c"+
    "\0\u1182\0\u11b8\0\u11ee\0\u1224\0\u125a\0\u1290\0\u12c6\0\u12fc"+
    "\0\u1332\0\u1368\0\u139e\0\u13d4\0\u140a\0\u1440\0\u1476\0\u14ac"+
    "\0\u14e2\0\u1518\0\u154e\0\u1584\0\u15ba\0\u15f0\0\u1626\0\u165c"+
    "\0\u1692\0\u16c8\0\u16fe\0\u1734\0\u176a\0\u17a0\0\u17d6\0\u180c"+
    "\0\u1842\0\u1878\0\u18ae\0\u18e4\0\u191a\0\u1950\0\u1986\0\u01b0"+
    "\0\u19bc\0\u19f2\0\u1a28\0\u1a5e\0\u01b0\0\u1a94\0\u1aca\0\u1b00"+
    "\0\u1b36\0\u1b6c\0\u1ba2\0\u1bd8\0\u1c0e\0\u1c44\0\u1c7a\0\u1cb0"+
    "\0\u1ce6\0\u1d1c\0\u1d52\0\u1d88\0\u1dbe\0\u1df4\0\u1e2a\0\u1e60"+
    "\0\u1e96\0\u1ecc\0\u1f02\0\u1f38\0\u1f6e\0\u1fa4\0\u1fda\0\u2010"+
    "\0\u2046\0\u207c\0\u20b2\0\u20e8\0\u211e\0\u2154\0\u218a\0\u21c0"+
    "\0\u21f6\0\u222c\0\u2262\0\u2298\0\u22ce\0\u2304\0\u233a\0\u2370"+
    "\0\u23a6\0\u0a20\0\u23dc\0\u2412\0\66\0\u01b0\0\u01b0\0\u2448"+
    "\0\u247e\0\u01b0\0\u01b0\0\u01b0\0\u24b4\0\u01b0\0\u24ea\0\u2520"+
    "\0\u2556\0\u01b0\0\u258c\0\u25c2\0\u25f8\0\u262e\0\u2664\0\u269a"+
    "\0\u26d0\0\u01b0\0\u2706\0\u273c\0\u2772\0\u27a8\0\u27de\0\u2814"+
    "\0\u284a\0\u2880\0\u28b6\0\u28ec\0\u2922\0\u2958\0\u298e\0\u29c4"+
    "\0\u29fa\0\u2a30\0\u2a66\0\u2a9c\0\u2ad2\0\u2b08\0\u2b3e\0\u2b74"+
    "\0\u2baa\0\u2be0\0\u2c16\0\u2c4c\0\u2c82\0\u01b0\0\u2cb8\0\u2cee"+
    "\0\u2d24\0\u2d5a\0\u2d90\0\u2dc6\0\u2dfc\0\u2e32\0\u2e68\0\u2e9e"+
    "\0\u2ed4\0\u2f0a\0\u2f40\0\u2f76\0\u2fac\0\u2fe2\0\u3018\0\u304e"+
    "\0\u3084\0\u30ba\0\u01b0\0\u30f0\0\u3126\0\u315c\0\u3192\0\u31c8"+
    "\0\u31fe\0\u3234\0\u326a\0\u32a0\0\u32d6\0\u330c\0\u3342\0\u3378"+
    "\0\u33ae\0\u01b0\0\u33e4\0\u341a\0\u3450\0\u3486\0\u34bc\0\u34f2"+
    "\0\u3528\0\u355e\0\u3594\0\u35ca\0\u3600\0\u3636\0\u366c\0\u36a2"+
    "\0\u36d8\0\u370e\0\u3744\0\u377a\0\u37b0\0\u37e6\0\u381c\0\u3852"+
    "\0\u3888\0\u38be\0\u38f4\0\u392a\0\u3960\0\u3996\0\u39cc\0\u3a02"+
    "\0\u3a38\0\u3a6e\0\u3aa4\0\u3ada\0\u3b10\0\u3b46\0\u3b7c\0\u3bb2"+
    "\0\u3be8\0\u3c1e\0\u3c54\0\u3c8a\0\u3cc0\0\u3cf6\0\u3d2c\0\u3d62"+
    "\0\u3d98\0\u3dce\0\u3e04\0\u3e3a\0\u3e70\0\u3ea6\0\u3edc\0\u3f12"+
    "\0\u3f48\0\u3f7e\0\u3fb4\0\u3fea\0\u4020\0\u01b0\0\u4056\0\u408c"+
    "\0\u01b0\0\u40c2\0\u40f8\0\u412e\0\u4164\0\u419a\0\u41d0\0\u4206"+
    "\0\u423c\0\u4272\0\u01b0\0\u42a8\0\u42de\0\u4314\0\u434a\0\u4380"+
    "\0\u43b6\0\u43ec\0\u4422\0\u4458\0\u448e\0\u44c4\0\u44fa\0\u01b0"+
    "\0\u4530\0\u4566\0\u459c\0\u45d2\0\u4608\0\u463e\0\u4674\0\u46aa"+
    "\0\u46e0\0\u4716\0\u474c\0\u4782\0\u47b8\0\u47ee\0\u4824\0\u485a"+
    "\0\u4890\0\u48c6\0\u48fc\0\u48fc\0\u01b0\0\u4932\0\u4968\0\u499e"+
    "\0\u49d4\0\u4a0a\0\u4a40\0\u4a76\0\u01b0\0\u4aac\0\u4ae2\0\u4b18"+
    "\0\u4b4e\0\u4b84\0\u4bba\0\u4bf0\0\u4c26\0\u4c5c\0\u01b0\0\u4c92"+
    "\0\u4cc8\0\u4cfe\0\u4d34\0\u4d6a\0\u01b0\0\u4da0\0\u01b0\0\u01b0"+
    "\0\u4dd6\0\u4e0c\0\u4e42\0\u4e78\0\u4eae\0\u01b0\0\u01b0\0\u4ee4"+
    "\0\u4f1a\0\u01b0\0\u4f50\0\u01b0\0\u01b0\0\u4f86\0\u4fbc\0\u4ff2"+
    "\0\u5028\0\u01b0\0\u505e\0\u5094\0\u50ca\0\u5100\0\u5136\0\u516c"+
    "\0\u01b0\0\u51a2\0\u51d8\0\u01b0\0\u520e\0\u01b0\0\u5244\0\u527a"+
    "\0\u01b0\0\u52b0\0\u52e6\0\u531c\0\u5352\0\u5388\0\u53be\0\u53f4"+
    "\0\u542a\0\u5460\0\u01b0\0\u5496\0\u01b0\0\u54cc\0\u5502\0\u5538"+
    "\0\u01b0\0\u556e\0\u55a4\0\u55da\0\u5610\0\u5646\0\u567c\0\u01b0"+
    "\0\u56b2\0\u56e8\0\u01b0\0\u571e\0\u5754\0\u578a\0\u57c0\0\u57f6"+
    "\0\u582c\0\u5862\0\u01b0\0\u5898\0\u58ce\0\u5904\0\u593a\0\u5970"+
    "\0\u59a6\0\u01b0\0\u01b0\0\u59dc\0\u5a12\0\u5a48\0\u5a7e\0\u5ab4"+
    "\0\u5aea\0\u5b20\0\u01b0\0\u01b0\0\u5b56\0\u5b8c\0\u5bc2\0\u5bf8"+
    "\0\u5c2e\0\u5c64\0\u5c9a\0\u5cd0\0\u5d06\0\u5d3c\0\u5d72\0\u5da8"+
    "\0\u5dde\0\u5e14\0\u5e4a\0\u5e80\0\u5eb6\0\u5eec\0\u5f22\0\u5f58"+
    "\0\u5f8e\0\u5fc4\0\u5ffa\0\u6030\0\u01b0\0\u6066\0\u609c\0\u60d2"+
    "\0\u6108\0\u613e\0\u6174\0\u01b0\0\u61aa\0\u01b0\0\u61e0\0\u6216"+
    "\0\u624c\0\u6282\0\u62b8\0\u62ee\0\u6324\0\u635a\0\u6390\0\u63c6"+
    "\0\u63fc\0\u01b0\0\u6432\0\u6468\0\u649e\0\u64d4\0\u650a\0\u6540"+
    "\0\u6576\0\u01b0\0\u65ac\0\u65e2\0\u6618\0\u664e\0\u6684\0\u01b0"+
    "\0\u01b0\0\u66ba\0\u01b0\0\u66f0\0\u6726\0\u675c\0\u01b0\0\u6792"+
    "\0\u67c8\0\u67fe\0\u6834\0\u686a\0\u68a0\0\u68d6\0\u690c\0\u6942"+
    "\0\u6978\0\u69ae\0\u69e4\0\u6a1a\0\u6a50\0\u01b0\0\u6a86\0\u6abc"+
    "\0\u6af2\0\u6b28\0\u6b5e\0\u01b0\0\u6b94\0\u6bca\0\u6c00\0\u6c36"+
    "\0\u6c6c\0\u6ca2\0\u6cd8\0\u6d0e\0\u6d44\0\u01b0\0\u6d7a\0\u6db0"+
    "\0\u6de6\0\u6e1c\0\u01b0\0\u01b0\0\u6e52\0\u6e88\0\u6ebe\0\u6ef4"+
    "\0\u01b0\0\u6f2a\0\u6f60\0\u01b0\0\u6f96\0\u6fcc\0\u7002\0\u7038"+
    "\0\u706e\0\u70a4\0\u70da\0\u7110\0\u7146\0\u01b0\0\u717c\0\u71b2"+
    "\0\u71e8\0\u721e\0\u7254\0\u728a\0\u72c0\0\u72f6\0\u732c\0\u7362"+
    "\0\u7398\0\u73ce\0\u7404\0\u743a\0\u7470\0\u74a6\0\u74dc\0\u7512"+
    "\0\u7548\0\u01b0\0\u757e\0\u01b0\0\u01b0\0\u01b0\0\u75b4\0\u75ea"+
    "\0\u7620\0\u7656\0\u768c\0\u76c2\0\u76f8\0\u772e\0\u7764\0\u779a"+
    "\0\u77d0\0\u7806\0\u783c\0\u7872\0\u78a8\0\u78de\0\u7914\0\u794a"+
    "\0\u7980\0\u79b6\0\u79ec\0\u7a22\0\u7a58\0\u7a8e\0\u7ac4\0\u7afa"+
    "\0\u01b0\0\u7b30\0\u7b66\0\u01b0\0\u01b0\0\u7b9c\0\u7bd2\0\u7c08"+
    "\0\u7c3e\0\u7c74\0\u7caa\0\u7ce0\0\u7d16\0\u7d4c\0\u7d82\0\u7db8"+
    "\0\u7dee\0\u7e24\0\u7e5a\0\u7e90\0\u7ec6\0\u7efc\0\u01b0\0\u7f32"+
    "\0\u7f68\0\u7f9e\0\u01b0\0\u7fd4\0\u800a\0\u8040\0\u8076\0\u80ac"+
    "\0\u01b0\0\u80e2\0\u01b0\0\u8118\0\u814e\0\u8184\0\u81ba\0\u81f0"+
    "\0\u8226\0\u825c\0\u8292\0\u82c8\0\u82fe\0\u8334\0\u836a\0\u83a0"+
    "\0\u83d6\0\u01b0\0\u840c\0\u8442\0\u01b0\0\u8478\0\u84ae\0\u84e4"+
    "\0\u01b0\0\u01b0\0\u851a\0\u01b0\0\u8550\0\u8586\0\u01b0\0\u85bc"+
    "\0\u01b0\0\u85f2\0\u8628\0\u865e\0\u8694\0\u86ca\0\u8700\0\u8736"+
    "\0\u876c\0\u87a2\0\u01b0\0\u87d8\0\u880e\0\u8844\0\u01b0\0\u887a"+
    "\0\u88b0\0\u88e6\0\u891c\0\u01b0\0\u8952\0\u8988\0\u89be\0\u01b0"+
    "\0\u89f4\0\u01b0\0\u8a2a\0\u8a60\0\u8a96\0\u8acc\0\u8b02\0\u8b38"+
    "\0\u8b6e\0\u8ba4\0\u8bda\0\u01b0\0\u01b0\0\u8c10\0\u8c46\0\u8c7c"+
    "\0\u8cb2\0\u01b0\0\u8ce8\0\u01b0\0\u01b0\0\u8d1e\0\u8d54\0\u01b0"+
    "\0\u8d8a\0\u01b0\0\u8dc0\0\u01b0\0\u01b0\0\u8df6\0\u01b0\0\u8e2c"+
    "\0\u8e62\0\u8e98\0\u8ece\0\u01b0\0\u01b0\0\u01b0\0\u8f04\0\u8f3a"+
    "\0\u8f70\0\u8fa6\0\u01b0\0\u8fdc\0\u01b0\0\u01b0\0\u9012\0\u01b0"+
    "\0\u9048\0\u907e\0\u90b4\0\u90ea\0\u01b0\0\u9120\0\u9156\0\u01b0"+
    "\0\u918c\0\u91c2\0\u91f8\0\u01b0\0\u922e\0\u9264\0\u929a\0\u92d0"+
    "\0\u9306\0\u933c\0\u01b0\0\u01b0\0\u9372\0\u93a8\0\u93de\0\u9414"+
    "\0\u944a\0\u9480\0\u01b0\0\u94b6\0\u94ec\0\u9522\0\u9558\0\u958e"+
    "\0\u95c4\0\u95fa\0\u9630\0\u9666\0\u969c\0\u96d2\0\u9708\0\u973e"+
    "\0\u9774\0\u01b0\0\u97aa\0\u97e0\0\u9816\0\u984c\0\u01b0\0\u01b0"+
    "\0\u9882\0\u98b8\0\u98ee\0\u9924\0\u995a\0\u9990\0\u99c6\0\u01b0"+
    "\0\u99fc\0\u9a32\0\u9a68\0\u01b0\0\u9a9e\0\u9ad4\0\u9b0a\0\u9b40"+
    "\0\u01b0\0\u9b76\0\u9bac\0\u9be2\0\u01b0\0\u01b0\0\u9c18\0\u9c4e"+
    "\0\u9c84\0\u9cba\0\u9cf0\0\u9d26\0\u9d5c\0\u9d92\0\u9dc8\0\u9dfe"+
    "\0\u01b0\0\u9e34\0\u01b0\0\u9e6a\0\u9ea0\0\u9ed6\0\u9f0c\0\u9f42"+
    "\0\u01b0\0\u9f78\0\u9fae\0\u9fe4\0\ua01a\0\ua050\0\ua086\0\ua0bc"+
    "\0\u01b0\0\u01b0\0\ua0f2\0\ua128\0\ua15e\0\u01b0\0\ua194\0\ua1ca"+
    "\0\u01b0\0\ua200\0\ua236\0\ua26c\0\ua2a2\0\u01b0\0\ua2d8\0\ua30e"+
    "\0\ua344\0\ua37a\0\ua3b0\0\ua3e6\0\ua41c\0\u01b0\0\ua452\0\ua488"+
    "\0\ua4be\0\ua4f4\0\ua52a\0\ua560\0\u01b0\0\u01b0\0\ua596\0\ua5cc"+
    "\0\ua602\0\u01b0\0\ua638\0\ua66e\0\ua6a4\0\ua6da\0\ua710\0\ua746"+
    "\0\u01b0\0\ua77c\0\u01b0\0\ua7b2\0\ua7e8\0\ua81e\0\ua854\0\u01b0"+
    "\0\u01b0\0\u01b0\0\ua88a\0\ua8c0\0\ua8f6\0\ua92c\0\ua962\0\ua998"+
    "\0\ua9ce\0\uaa04\0\u01b0\0\uaa3a\0\u01b0\0\uaa70\0\uaaa6\0\uaadc"+
    "\0\uab12\0\uab48\0\uab7e\0\uabb4\0\uabea\0\u01b0\0\u01b0\0\uac20"+
    "\0\uac56\0\u01b0\0\uac8c\0\uacc2\0\uacf8\0\uad2e\0\uad64\0\u01b0"+
    "\0\uad9a\0\uadd0\0\uae06\0\uae3c\0\uae72\0\uaea8\0\uaede\0\uaf14"+
    "\0\uaf4a\0\u01b0\0\u01b0\0\uaf80\0\uafb6\0\uafec\0\ub022\0\ub058"+
    "\0\u01b0\0\ub08e\0\ub0c4\0\ub0fa\0\ub130\0\ub166\0\ub19c\0\ub1d2"+
    "\0\u01b0\0\ub208\0\u01b0\0\ub23e\0\u01b0\0\u01b0\0\ub274\0\u01b0"+
    "\0\ub2aa\0\ub2e0\0\ub316\0\ub34c\0\ub382\0\ub3b8\0\ub3ee\0\ub424"+
    "\0\ub45a\0\u01b0\0\ub490\0\u01b0\0\ub4c6\0\ub4fc\0\ub532\0\ub568"+
    "\0\ub59e\0\ub5d4\0\ub60a\0\u01b0\0\ub640\0\ub676\0\ub6ac\0\ub6e2"+
    "\0\ub718\0\ub74e\0\u01b0\0\u01b0\0\u01b0\0\u01b0\0\ub784\0\ub7ba"+
    "\0\ub7f0\0\ub826\0\ub85c\0\u01b0\0\ub892\0\ub8c8\0\u01b0\0\ub8fe"+
    "\0\ub934\0\ub96a\0\ub9a0\0\u01b0\0\ub9d6\0\u01b0\0\uba0c\0\uba42"+
    "\0\uba78\0\u01b0\0\ubaae\0\u01b0\0\u01b0\0\ubae4\0\ubb1a\0\u01b0"+
    "\0\ubb50\0\u01b0\0\ubb86\0\ubbbc\0\u01b0\0\ubbf2\0\ubc28\0\ubc5e"+
    "\0\u01b0\0\u01b0\0\ubc94\0\ubcca\0\u01b0\0\u01b0\0\ubd00\0\66"+
    "\0\u01b0\0\ubd36\0\u01b0\0\ubd6c\0\ubda2\0\u01b0\0\ubdd8\0\u01b0"+
    "\0\ube0e\0\u01b0\0\ube44\0\u01b0\0\ube7a\0\ubeb0\0\u01b0\0\ubee6"+
    "\0\u01b0\0\ubf1c\0\u01b0\0\ubf52\0\ubf88\0\ubfbe\0\u01b0\0\ubff4"+
    "\0\u01b0\0\uc02a\0\uc060\0\u01b0\0\u01b0\0\u01b0\0\uc096\0\uc0cc"+
    "\0\uc102\0\uc138\0\u01b0\0\u01b0\0\uc16e\0\u01b0\0\uc1a4\0\uc1da"+
    "\0\uc210\0\uc246\0\uc27c\0\uc2b2\0\uc2e8\0\u01b0\0\u01b0\0\u01b0"+
    "\0\u01b0\0\uc31e\0\u01b0\0\uc354\0\uc38a\0\uc3c0\0\uc3f6\0\uc42c"+
    "\0\u01b0\0\uc462\0\uc498\0\uc4ce\0\u01b0\0\uc504\0\uc53a\0\uc570"+
    "\0\u01b0\0\uc5a6\0\uc5dc\0\uc612\0\uc648\0\u01b0\0\uc67e\0\uc6b4"+
    "\0\uc6ea\0\u01b0\0\uc720\0\uc756\0\uc78c\0\uc7c2\0\uc7f8\0\u01b0"+
    "\0\uc82e\0\uc864\0\uc89a\0\u01b0\0\uc8d0\0\u01b0\0\uc906\0\uc93c"+
    "\0\u01b0\0\uc972\0\u01b0\0\u01b0\0\uc9a8\0\uc9de\0\uca14\0\uca4a"+
    "\0\uca80\0\ucab6\0\ucaec\0\u01b0\0\ucb22\0\ucb58\0\u01b0\0\ucb8e"+
    "\0\ucbc4\0\u01b0\0\ucbfa\0\ucc30\0\ucc66\0\ucc9c\0\u01b0\0\uccd2"+
    "\0\ucd08\0\ucd3e\0\ucd74\0\ucdaa\0\ucde0\0\uce16\0\uce4c\0\u01b0"+
    "\0\uce82\0\u01b0\0\uceb8\0\uceee\0\ucf24\0\ucf5a\0\ucf90\0\ucfc6"+
    "\0\u01b0\0\ucffc\0\ud032\0\ud068\0\ud09e\0\ud0d4\0\ud10a\0\ud140"+
    "\0\ud176\0\u01b0\0\ud1ac\0\ud1e2\0\u01b0\0\u01b0\0\ud218\0\u01b0"+
    "\0\u01b0\0\u01b0\0\ud24e\0\u01b0\0\u01b0\0\ud284\0\u01b0\0\ud2ba"+
    "\0\ud2f0\0\ud326\0\ud35c\0\u01b0\0\u01b0\0\u01b0\0\ud392\0\ud3c8"+
    "\0\u01b0\0\ud3fe\0\ud434\0\ud46a\0\ud4a0\0\ud4d6\0\ud50c\0\ud542"+
    "\0\ud578\0\u01b0\0\u01b0\0\ud5ae\0\ud5e4\0\ud61a\0\ud650\0\ud686"+
    "\0\u01b0\0\ud6bc\0\u01b0\0\ud6f2\0\ud728\0\ud75e\0\u01b0\0\ud794"+
    "\0\ud7ca\0\ud800\0\ud836\0\u01b0\0\ud86c\0\u01b0\0\ud8a2\0\ud8d8"+
    "\0\u01b0\0\ud90e\0\ud944\0\ud97a\0\u01b0\0\u01b0\0\ud9b0\0\ud9e6"+
    "\0\u01b0\0\uda1c\0\u01b0\0\u01b0\0\u01b0\0\u01b0\0\u01b0\0\u01b0"+
    "\0\uda52\0\uda88\0\u01b0\0\u01b0\0\udabe\0\udaf4\0\udb2a\0\udb60"+
    "\0\udb96\0\u01b0\0\udbcc\0\udc02\0\udc38\0\udc6e\0\u01b0\0\udca4"+
    "\0\udcda\0\u01b0\0\udd10\0\udd46\0\u01b0\0\udd7c\0\u01b0\0\uddb2"+
    "\0\udde8\0\ude1e\0\ude54\0\ude8a\0\u01b0\0\u01b0\0\udec0\0\udef6"+
    "\0\udf2c\0\u01b0\0\udf62\0\u01b0\0\udf98\0\udfce\0\ue004\0\u01b0"+
    "\0\ue03a\0\ue070\0\66\0\ue0a6\0\u01b0\0\u01b0\0\ue0dc\0\u01b0"+
    "\0\ue112\0\ue148\0\ue17e\0\ue1b4\0\u01b0\0\u01b0\0\ue1ea\0\ue220"+
    "\0\u01b0\0\ue256\0\ue28c\0\ue2c2\0\ue2f8\0\ue32e\0\u01b0\0\ue364"+
    "\0\u01b0\0\ue39a\0\ue3d0\0\ue406\0\ue43c\0\u01b0\0\ue472\0\ue4a8"+
    "\0\ue4de\0\u01b0\0\ue514\0\ue54a\0\u01b0\0\ue580\0\ue5b6\0\ue5ec"+
    "\0\ue622\0\ue658\0\ue68e\0\ue6c4\0\ue6fa\0\ue730\0\ue766\0\ue79c"+
    "\0\ue7d2\0\ue808\0\u01b0\0\ue83e\0\u01b0\0\ue874\0\ue8aa\0\ue8e0"+
    "\0\ue916\0\ue94c\0\ue982\0\u01b0";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[1380];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\1\5\1\6\1\7\1\10\1\11"+
    "\1\12\1\13\1\10\1\14\1\5\1\15\1\10\2\16"+
    "\1\17\1\20\1\10\1\21\1\10\1\22\1\10\1\23"+
    "\1\24\1\25\1\26\1\27\1\30\1\31\1\32\1\33"+
    "\1\34\1\35\1\36\1\37\1\40\1\41\1\42\1\43"+
    "\1\44\1\45\1\46\1\47\1\50\1\2\1\51\1\12"+
    "\1\52\1\12\1\5\1\12\1\5\67\0\1\3\4\0"+
    "\1\53\57\0\2\54\1\55\1\0\62\54\3\0\1\5"+
    "\10\0\1\5\46\0\1\5\1\0\1\5\3\56\1\0"+
    "\1\55\61\56\1\0\1\57\65\0\1\12\5\0\2\12"+
    "\20\0\2\12\1\60\1\12\1\61\1\62\1\12\1\63"+
    "\17\12\1\64\2\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\32\12\1\0\1\12\13\0\1\65\54\0"+
    "\1\57\11\0\1\66\67\0\1\10\70\0\1\10\66\0"+
    "\1\10\67\0\1\10\67\0\1\10\67\0\1\10\66\0"+
    "\1\10\36\0\1\12\5\0\2\12\20\0\1\12\1\67"+
    "\1\70\1\71\1\72\1\73\1\12\1\74\1\75\1\76"+
    "\4\12\1\77\5\12\1\100\5\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\101\1\12\20\0\1\102\3\12\1\103"+
    "\4\12\1\104\1\12\1\105\1\106\1\12\1\107\13\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\110\1\12\20\0"+
    "\1\111\12\12\1\112\1\113\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\114\1\12\20\0\1\115\3\12\1\116"+
    "\2\12\1\117\2\12\1\120\1\121\1\122\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\123\1\12\20\0\1\124"+
    "\10\12\1\125\1\12\1\126\1\127\15\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\130\1\12\20\0\1\131\7\12"+
    "\1\132\1\133\1\12\1\134\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\135\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\136\1\12\20\0\1\137\2\12"+
    "\1\140\2\12\1\141\1\12\1\142\1\143\1\144\1\145"+
    "\1\146\3\12\1\147\2\12\1\150\5\12\1\151\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\152\1\12"+
    "\1\153\1\12\1\154\4\12\1\155\1\156\1\157\16\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\160\1\12\1\161\10\12\1\162\11\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\163\12\12\1\164"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\165\1\166\2\12\1\167\1\170\6\12\1\171"+
    "\3\12\1\172\1\12\1\173\3\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\12\1\174\3\12\1\175"+
    "\1\12\1\176\13\12\1\177\2\12\1\200\3\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\13\12\1\201"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\1\202\1\12"+
    "\20\0\1\203\3\12\1\204\1\12\1\205\2\12\1\206"+
    "\1\12\1\207\1\210\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\211\1\12\20\0\14\12\1\212\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\213\1\12\20\0\1\214"+
    "\1\12\1\215\1\12\1\216\4\12\1\217\1\12\1\220"+
    "\1\221\15\12\1\0\1\12\2\0\1\12\5\0\1\222"+
    "\1\12\20\0\2\12\1\223\1\12\1\224\6\12\1\225"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\226\3\12\1\227\5\12\1\230\1\231\1\232\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\233\1\12\20\0"+
    "\1\234\12\12\1\235\1\236\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\237\13\12\1\240\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\241\1\12\20\0"+
    "\1\242\1\12\1\243\1\12\1\244\4\12\1\245\1\12"+
    "\1\246\1\247\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\250\16\12\1\0\1\12\2\0"+
    "\1\53\5\0\2\251\56\0\1\57\4\0\1\53\60\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\252\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\253"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\12\1\254\30\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\255\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\256\1\12\20\0\3\12\1\257\4\12"+
    "\1\260\3\12\1\261\15\12\1\0\1\12\1\0\3\262"+
    "\1\263\6\262\1\264\53\262\3\66\1\265\10\66\1\265"+
    "\51\66\1\0\1\12\5\0\2\12\20\0\1\266\1\267"+
    "\30\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\270\1\271\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\272\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\12\1\273\4\12\1\274"+
    "\23\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\7\12\1\275\1\276\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\277\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\300\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\7\12"+
    "\1\301\22\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\21\12\1\302\10\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\303\1\12\1\304\2\12\1\305"+
    "\1\12\1\306\1\307\15\12\1\310\3\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\311\2\12"+
    "\1\312\23\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\313\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\23\12\1\314\6\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\11\12\1\315\11\12"+
    "\1\316\6\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\317\6\12\1\320\22\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\321\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\322\23\12"+
    "\1\323\1\12\1\324\3\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\325\1\12\1\326\22\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\327"+
    "\7\12\1\330\10\12\1\331\1\332\7\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\333\11\12"+
    "\1\334\12\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\23\12\1\335\3\12\1\336\2\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\16\12\1\337\13\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\340"+
    "\5\12\1\341\2\12\1\342\2\12\1\343\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\344\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\345\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\20\12\1\346\11\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\23\12\1\347\6\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\350\1\12\1\351\1\352"+
    "\3\12\1\353\1\354\7\12\1\355\3\12\1\356\1\12"+
    "\1\357\3\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\14\12\1\360\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\361\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\362\17\12"+
    "\1\363\7\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\21\12\1\364\10\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\27\12\1\365\2\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\366\17\12"+
    "\1\367\6\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\12\12\1\370\17\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\371\20\12\1\372\6\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\373\1\12\1\374\2\12\1\375\21\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\376\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\377"+
    "\1\u0100\3\12\1\u0101\1\u0102\12\12\1\u0103\6\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\24\12\1\u0104"+
    "\5\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u0105\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u0106\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u0107\5\12\1\u0108\17\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\16\12"+
    "\1\u0109\4\12\1\u010a\6\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\11\12\1\u010b\20\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\23\12\1\u010c\6\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\15\12"+
    "\1\u010d\14\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u010e\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u010f\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u0110\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u0111\3\12"+
    "\1\u0112\22\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\11\12\1\u0113\1\12\1\u0114\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0115\1\12\20\0\13\12\1\u0116"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u0117\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0118\1\12\20\0\1\u0119\31\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u011a\1\12\1\u011b\1\12"+
    "\1\u011c\1\u011d\3\12\1\u011e\11\12\1\u011f\6\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u0120"+
    "\2\12\1\u0121\1\u0122\11\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0123\1\12\20\0\1\u0124\13\12\1\u0125\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\12"+
    "\1\u0126\16\12\1\u0127\11\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\24\12\1\u0128\5\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u0129\6\12"+
    "\1\u012a\20\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\12\1\u012b\30\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u012c\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u012d\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u012e\26\12\1\0\1\12\2\0\1\12\5\0\1\u012f"+
    "\1\12\20\0\3\12\1\u0130\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0131\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\26\12\1\u0132\3\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0133\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\12\1\u0134\1\12\1\u0135\1\12\1\u0136\1\12\1\u0137"+
    "\1\u0138\3\12\1\u0139\3\12\1\u013a\11\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\13\12\1\u013b\16\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\23\12"+
    "\1\u013c\6\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u013d\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u013e\15\12\1\u013f\10\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u0140\21\12\1\0\1\12\2\0\1\12\5\0\1\u0141"+
    "\1\12\20\0\13\12\1\u0142\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0143\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0144"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0145\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\6\12\1\u0146\23\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0147\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u0148"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\12\1\u0149\2\12\1\u014a\2\12\1\u014b\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\u014c\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u014d\1\12\20\0"+
    "\13\12\1\u014e\1\u014f\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\16\12\1\u0150\13\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\7\12\1\u0151\22\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\24\12"+
    "\1\u0152\5\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0153\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u0154\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u0155\12\12\1\u0156"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0157\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u0158\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u0159\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u015a\1\12\20\0\14\12"+
    "\1\u015b\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u015c\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u015d\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u015e\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u015f\23\12\1\u0160\2\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u0161\3\12\1\u0162\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u0163\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\2\12\1\u0164\1\12\1\u0165\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0166\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0167"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0168\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u0169\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u016a\1\12\20\0\13\12\1\u016b\16\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u016c\2\12\1\u016d\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u016e\4\12\1\u016f\20\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u0170\1\12\1\u0171\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\14\12\1\u0172\15\12\1\0\1\12"+
    "\2\0\1\u0173\3\0\1\u0174\5\0\1\u0174\53\0\1\12"+
    "\5\0\1\u0175\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0176\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\2\0\1\u0177\15\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u0178\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\10\12\1\u0179\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u017a\1\12\20\0\4\12\1\u017b\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u017c\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u017d\3\12\1\u017e\22\12\1\0\1\12\1\0\12\263"+
    "\1\264\64\263\1\265\1\264\53\263\1\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u017f\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0180\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0181\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u0182"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\12\12\1\u0183\17\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u0184\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0185\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0186\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\6\12"+
    "\1\u0187\23\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\10\12\1\u0188\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u0189\11\12\1\u018a\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u018b\1\12\20\0"+
    "\1\u018c\31\12\1\0\1\12\2\0\1\12\5\0\1\u018d"+
    "\1\12\20\0\1\u018e\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\20\12\1\u018f\11\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\20\12\1\u0190\11\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\16\12"+
    "\1\u0191\13\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u0192\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\21\12\1\u0193\10\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0194\4\12\1\u0195"+
    "\6\12\1\u0196\12\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\u0197\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\12\1\u0198\30\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0199\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u019a\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\21\12\1\u019b\10\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u019c\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\12\1\u019d\30\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u019e"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u019f\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u01a0\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u01a1\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u01a2\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\20\12\1\u01a3\11\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u01a4\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\2\12\1\u01a5\27\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u01a6\6\12\1\u01a7\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\25\12"+
    "\1\u01a8\4\12\1\0\1\12\2\0\1\12\5\0\1\u01a9"+
    "\1\12\20\0\5\12\1\u01aa\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\21\12\1\u01ab\1\12\1\u01ac"+
    "\6\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\31\12\1\u01ad\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u01ae\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u01af\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\12\1\u01b0\1\u01b1\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u01b2"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u01b3\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u01b4\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u01b5\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u01b6"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\1\u01b7\1\12"+
    "\20\0\13\12\1\u01b8\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u01b9\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u01ba\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u01bb\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u01bc\27\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u01bd\1\u01be\10\12\1\u01bf\10\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\12\12\1\u01c0"+
    "\17\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u01c1\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u01c2\2\12\1\u01c3\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u01c4\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u01c5"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u01c6\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u01c7\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u01c8\1\12\20\0\10\12\1\u01c9\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\12\12\1\u01ca"+
    "\17\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u01cb\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u01cc\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\11\12\1\u01cd\20\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\7\12\1\u01ce\22\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u01cf\5\12\1\u01d0\1\12\1\u01d1\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u01d2\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u01d3\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u01d4\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u01d5\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u01d6\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u01d7\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\7\12\1\u01d8"+
    "\22\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u01d9\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u01da\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u01db\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u01dc\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u01dd"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\1\u01de\1\12"+
    "\20\0\7\12\1\u01df\1\u01e0\11\12\1\u01e1\7\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\u01e2\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u01e3\1\12\20\0"+
    "\3\12\1\u01e4\4\12\1\u01e5\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u01e6\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\7\12\1\u01e7"+
    "\22\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u01e8\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u01e9\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u01ea\2\12\1\u01eb\22\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u01ec\21\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u01ed\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u01ee\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u01ef\6\12"+
    "\1\u01f0\20\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u01f1\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u01f2\1\12\1\u01f3\1\12"+
    "\1\u01f4\14\12\1\u01f5\5\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u01f6\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\20\12\1\u01f7\2\12"+
    "\1\u01f8\6\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\u01f9\15\12\1\u01fa\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u01fb\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u01fc"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u01fd\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\21\12\1\u01fe\10\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u01ff\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\u0200\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0201\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0202\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\12\1\u0203\30\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u0204\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0205\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\6\12"+
    "\1\u0206\23\12\1\0\1\12\2\0\1\12\5\0\1\u0207"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0208\1\12\20\0\20\12\1\u0209\11\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u020a\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u020b\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u020c\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u020d\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u020e\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u020f\1\12\20\0"+
    "\14\12\1\u0210\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0211\1\12\20\0\13\12\1\u0212\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0213\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0214\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u0215\27\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0216\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\11\12\1\u0217\20\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u0218\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0219\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\1\u021a\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\22\12\1\u021b\7\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\14\12\1\u021c\15\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\17\12\1\u021d\12\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u021e"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\22\12\1\u021f\7\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\17\12\1\u0220\12\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\12\12\1\u0221\17\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\25\12\1\u0222"+
    "\4\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0223\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\u0224\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0225\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\10\12\1\u0226"+
    "\21\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u0227\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\7\12\1\u0228\1\u0229\7\12\1\u022a\11\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u022b\21\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u022c\5\12\1\u022d\7\12\1\u022e\1\u022f"+
    "\5\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0230\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u0231\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u0232\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\16\12\1\u0233"+
    "\13\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u0234\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u0235\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u0236\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0237"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0238\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u0239\1\u023a\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u023b\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\17\12"+
    "\1\u023c\12\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\12\12\1\u023d\17\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\21\12\1\u023e\10\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\10\12\1\u023f\21\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\11\12"+
    "\1\u0240\20\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0241\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\11\12\1\u0242\20\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\11\12\1\u0243\20\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\6\12"+
    "\1\u0244\1\12\1\u0245\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\22\12\1\u0246\7\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\10\12\1\u0247\21\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\7\12"+
    "\1\u0248\22\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u0249\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u024a\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\23\12\1\u024b\6\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u024c\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u024d\21\12\1\0\1\12\2\0\1\12\5\0\1\u024e"+
    "\1\12\20\0\3\12\1\u024f\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u0250\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0251\1\12\20\0\2\12"+
    "\1\u0252\27\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u0253\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u0254\24\12\1\0\1\12"+
    "\2\0\1\u0173\65\0\1\12\5\0\2\12\20\0\24\12"+
    "\1\u0255\5\12\1\0\1\12\10\0\1\u0256\57\0\1\12"+
    "\5\0\2\12\20\0\20\12\1\u0257\11\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\11\12\1\u0258\20\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0259\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u025a\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\20\12\1\u025b\11\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u025c\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\10\12\1\u025d"+
    "\21\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u025e\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u025f\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u0260\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\13\12\1\u0261"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0262\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u0263\27\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0264\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u0265"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u0266\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\23\12\1\u0267\6\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u0268\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\11\12\1\u0269\20\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\16\12"+
    "\1\u026a\13\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\2\12\1\u026b\27\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\14\12\1\u026c\15\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u026d\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u026e\7\12\1\u026f\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u0270\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\14\12\1\u0271\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u0272\27\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\11\12\1\u0273\20\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u0274\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u0275\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0276\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u0277\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u0278\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\7\12\1\u0279\22\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u027a\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\7\12\1\u027b\22\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u027c\27\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u027d\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\10\12\1\u027e"+
    "\21\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\21\12\1\u027f\10\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u0280\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u0281\5\12\1\u0282"+
    "\14\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0283\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u0284\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u0285\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u0286"+
    "\6\12\1\u0287\16\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u0288\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u0289\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u028a"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\17\12\1\u028b\12\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u028c\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u028d\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\16\12\1\u028e\13\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\13\12"+
    "\1\u028f\16\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\11\12\1\u0290\20\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u0291\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u0292\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\13\12"+
    "\1\u0293\16\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u0294\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u0295\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\14\12\1\u0296\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0297\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\2\12\1\u0298\27\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0299\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u029a\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\7\12\1\u029b"+
    "\22\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u029c\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u029d\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u029e\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u029f"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u02a0\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u02a1\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u02a2\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u02a3\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\23\12"+
    "\1\u02a4\6\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u02a5\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u02a6\30\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u02a7\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u02a8"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u02a9\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u02aa\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u02ab\12\12\1\u02ac\16\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u02ad"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u02ae\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u02af\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u02b0\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u02b1\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u02b2"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\7\12\1\u02b3\22\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u02b4\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u02b5\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\17\12\1\u02b6\12\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u02b7"+
    "\24\12\1\u02b8\4\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u02b9\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\u02ba\31\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\23\12\1\u02bb\6\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u02bc\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u02bd"+
    "\13\12\1\u02be\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u02bf\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u02c0\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u02c1\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u02c2"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u02c3\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u02c4\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u02c5\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\11\12\1\u02c6"+
    "\20\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\13\12\1\u02c7\16\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\24\12\1\u02c8\5\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u02c9\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\21\12\1\u02ca\10\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u02cb\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u02cc\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u02cd\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u02ce\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u02cf\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u02d0\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u02d1\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\11\12\1\u02d2\20\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\12"+
    "\1\u02d3\2\12\1\u02d4\22\12\1\u02d5\1\12\1\u02d6\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\13\12\1\u02d7"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u02d8\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u02d9\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u02da\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\27\12\1\u02db\2\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u02dc\21\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u02dd\14\12\1\u02de\10\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u02df\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u02e0\1\u02e1\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u02e2\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u02e3\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u02e4"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u02e5\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\12\1\u02e6\30\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u02e7\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u02e8\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\11\12\1\u02e9"+
    "\20\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\17\12\1\u02ea\12\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\7\12\1\u02eb\22\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u02ec\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u02ed\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u02ee\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u02ef\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u02f0\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\14\12\1\u02f1\15\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u02f2\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u02f3\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u02f4\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u02f5\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\u02f6\31\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u02f7\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u02f8"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u02f9\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u02fa\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u02fb\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u02fc\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\20\12"+
    "\1\u02fd\11\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\26\12\1\u02fe\3\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u02ff\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0300\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0301\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0302\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u0303\15\12\1\0\1\12\2\0\1\12\5\0\1\u0304"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\12\12\1\u0305\17\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0306\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\12\12\1\u0307"+
    "\17\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0308\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0309\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\14\12\1\u030a\15\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\12\12\1\u030b\17\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\12\12"+
    "\1\u030c\17\12\1\0\1\12\2\0\1\12\5\0\1\u030d"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u030e\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u030f\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0310"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0311\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u0312\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\12\1\u0313\30\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\26\12\1\u0314"+
    "\3\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0315\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u0316\27\12\1\0\1\12\61\0"+
    "\1\u0317\6\0\1\12\5\0\1\u0318\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u0319\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u031a\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\10\12\1\u031b\21\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u031c\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\7\12"+
    "\1\u031d\22\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u031e\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u031f\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u0320\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u0321"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u0322\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u0323\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0324\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\14\12\1\u0325\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0326\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u0327\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u0328\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0329\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\u032a\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u032b\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u032c\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u032d\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u032e\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u032f"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u0330\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u0331\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u0332\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\13\12\1\u0333\16\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0334\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\14\12\1\u0335\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u0336\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u0337\1\12\1\u0338"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0339\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u033a\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u033b\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u033c\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\u033d\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u033e\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\u033f\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0340\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u0341\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u0342"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0343\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u0344\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\26\12\1\u0345\3\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\10\12\1\u0346"+
    "\21\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0347\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0348\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0349\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u034a\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\1\u034b\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\11\12"+
    "\1\u034c\20\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\14\12\1\u034d\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\u034e\31\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u034f\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\26\12\1\u0350"+
    "\3\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0351\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u0352\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u0353\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0354"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\1\u0355\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\u0356\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u0357\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\14\12\1\u0358\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\12"+
    "\1\u0359\30\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u035a\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u035b\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\23\12\1\u035c\6\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u035d\27\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u035e\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u035f\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u0360\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u0361"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u0362\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u0363\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u0364\30\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u0365\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\13\12"+
    "\1\u0366\16\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\12\1\u0367\30\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0368\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0369\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u036a\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u036b\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\20\12\1\u036c\11\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\10\12\1\u036d\21\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\2\12\1\u036e\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\7\12"+
    "\1\u036f\22\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0370\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u0371\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\7\12\1\u0372\22\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u0373\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u0374\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\10\12\1\u0375\21\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u0376\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0377\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0378\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u0379\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u037a\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\22\12\1\u037b"+
    "\7\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\13\12\1\u037c\16\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u037d\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\21\12\1\u037e\10\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\13\12\1\u037f\16\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\25\12"+
    "\1\u0380\4\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0381\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\u0382\31\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u0383\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\23\12\1\u0384"+
    "\6\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u0385\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u0386\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u0387\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u0388\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u0389\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u038a\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\7\12\1\u038b\14\12\1\u038c\5\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u038d\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u038e\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u038f\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u0390\30\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u0391\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0392"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0393\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0394\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\20\12\1\u0395\11\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0396\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0397\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u0398\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u0399\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u039a\27\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u039b\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\7\12\1\u039c"+
    "\22\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u039d\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\12\1\u039e\30\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u039f\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u03a0"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\10\12\1\u03a1\21\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u03a2\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u03a3\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\13\12\1\u03a4"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u03a5\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\24\12\1\u03a6\5\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u03a7\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u03a8\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u03a9\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\7\12\1\u03aa\22\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u03ab\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u03ac\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u03ad\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u03ae"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\21\12\1\u03af\10\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u03b0\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\u03b1\31\12\1\0\1\12\10\0"+
    "\1\u03b2\57\0\1\12\5\0\1\u03b3\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u03b4"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u03b5\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u03b6\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u03b7\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u03b8"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u03b9\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u03ba\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u03bb\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\16\12\1\u03bc"+
    "\1\12\1\u03bd\11\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u03be\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u03bf\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u03c0\1\12\20\0\1\u03c1\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u03c2\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u03c3\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u03c4\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\16\12\1\u03c5\13\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u03c6\21\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u03c7\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\21\12\1\u03c8\10\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\21\12\1\u03c9\10\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u03ca"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\15\12\1\u03cb\14\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u03cc\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\10\12\1\u03cd\21\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u03ce\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u03cf"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u03d0\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u03d1\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u03d2\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u03d3"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u03d4\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u03d5\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\27\12\1\u03d6\2\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\24\12\1\u03d7\5\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u03d8\21\12\1\0\1\12\2\0\1\12\5\0\1\u03d9"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u03da\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u03db\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u03dc\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u03dd\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\10\12\1\u03de\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u03df\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\12\1\u03e0\30\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\2\12"+
    "\1\u03e1\27\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u03e2\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\u03e3\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u03e4\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\17\12\1\u03e5"+
    "\12\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u03e6\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u03e7\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u03e8\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u03e9"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u03ea\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u03eb\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\25\12\1\u03ec\4\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u03ed"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\22\12\1\u03ee\7\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u03ef\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u03f0\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u03f1"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\1\u03f2\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u03f3\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\21\12\1\u03f4\10\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u03f5\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u03f6"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u03f7\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u03f8\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u03f9\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u03fa\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\10\12"+
    "\1\u03fb\21\12\1\0\1\12\2\0\1\12\5\0\1\u03fc"+
    "\1\12\20\0\14\12\1\u03fd\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\20\12\1\u03fe\11\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u03ff"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u0400\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u0401\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u0402\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u0403\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0404\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u0405\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u0406\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0407\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\10\12\1\u0408"+
    "\21\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0409\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u040a\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\22\12\1\u040b\7\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u040c"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\1\u040d\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\20\12\1\u040e\11\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u040f\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u0410\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u0411\26\12\1\0\1\12\2\0\1\12\5\0\1\u0412"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u0413\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u0414\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\14\12\1\u0415\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0416\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0417\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u0418\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u0419\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u041a\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u041b\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u041c\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u041d\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\24\12\1\u041e\5\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u041f\15\12\1\0\1\12\2\0\1\12\5\0\1\u0420"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u0421\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\6\12\1\u0422\23\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0423\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\13\12"+
    "\1\u0424\16\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u0425\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0426\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0427\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\32\12\1\u0428\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\21\12\1\u0429\10\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u042a\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\27\12\1\u042b\2\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u042c\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u042d\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u042e\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\10\12\1\u042f\21\12\1\0\1\12\42\0\1\u0430"+
    "\25\0\1\12\5\0\2\12\20\0\2\12\1\u0431\27\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\13\12"+
    "\1\u0432\16\12\1\0\1\12\2\0\1\12\5\0\1\u0433"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u0434\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\15\12\1\u0435\14\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0436\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u0437"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\1\u0438\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u0439\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u043a\30\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\16\12\1\u043b\13\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u043c\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u043d\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u043e\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u043f\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0440\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0441\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u0442\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0443\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\23\12\1\u0444\6\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u0445\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u0446\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\21\12\1\u0447\10\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\24\12\1\u0448\5\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0449\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\23\12\1\u044a"+
    "\6\12\1\0\1\12\2\0\1\12\5\0\1\u044b\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u044c\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u044d\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u044e\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\21\12\1\u044f"+
    "\10\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0450\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\u0451\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u0452\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\17\12\1\u0453"+
    "\12\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0454\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\u0455\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u0456\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0457"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\25\12\1\u0458\4\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\6\12\1\u0459\23\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u045a\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u045b"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u045c\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u045d\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u045e\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u045f"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u0460\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0461\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\14\12\1\u0462\15\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\12\1\u0463\30\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0464\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\25\12\1\u0465\4\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u0466\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0467\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u0468\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0469\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\13\12\1\u046a\16\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u046b\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u046c\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u046d\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u046e\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\14\12\1\u046f\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0470\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\17\12\1\u0471\12\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0472\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u0473"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\7\12\1\u0474\22\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u0475\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u0476\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\6\12\1\u0477"+
    "\23\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\13\12\1\u0478\16\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\10\12\1\u0479\21\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u047a\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u047b"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u047c\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u047d\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u047e\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\21\12\1\u047f"+
    "\10\12\1\0\1\12\2\0\1\12\5\0\1\u0480\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\u0481\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u0482\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\21\12\1\u0483\10\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u0484\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\27\12\1\u0485\2\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u0486\25\12\1\0\1\12"+
    "\53\0\1\u0487\14\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u0488\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\5\12\1\u0489\24\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u048a\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u048b\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u048c\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u048d\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u048e\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u048f\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u0490"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0491\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u0492\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\10\12\1\u0493\21\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\6\12\1\u0494"+
    "\23\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\20\12\1\u0495\11\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u0496\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0497\1\12\20\0\14\12\1\u0498\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0499\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\20\12\1\u049a\11\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\25\12\1\u049b\4\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\11\12\1\u049c\20\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u049d"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\1\u049e\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\4\12\1\u049f\25\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u04a0\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u04a1\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\11\12\1\u04a2"+
    "\20\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u04a3\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u04a4\7\12\1\u04a5\12\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\10\12\1\u04a6\21\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\7\12"+
    "\1\u04a7\22\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\21\12\1\u04a8\10\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u04a9\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\12\1\u04aa\30\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\12"+
    "\1\u04ab\1\12\1\u04ac\5\12\1\u04ad\20\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u04ae\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u04af\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\21\12\1\u04b0\10\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u04b1\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\5\12\1\u04b2\24\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u04b3\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\u04b4\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u04b5\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\27\12\1\u04b6\2\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u04b7\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\7\12\1\u04b8\22\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u04b9\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\6\12\1\u04ba\23\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\10\12\1\u04bb"+
    "\14\12\1\u04bc\4\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u04bd\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u04be\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u04bf"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\6\12\1\u04c0\23\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u04c1\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u04c2\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u04c3\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u04c4\24\12\1\0\1\12\2\0\1\12\5\0\1\u04c5"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u04c6\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u04c7\26\12\1\0\1\12"+
    "\36\0\1\u04c8\31\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u04c9\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\13\12\1\u04ca\16\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\3\12\1\u04cb\26\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u04cc\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u04cd"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\1\u04ce\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\10\12\1\u04cf\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u04d0\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u04d1\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u04d2"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\13\12\1\u04d3\16\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u04d4\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\4\12\1\u04d5\25\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\12\12\1\u04d6"+
    "\10\12\1\u04d7\6\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u04d8\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\13\12\1\u04d9\16\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\7\12\1\u04da"+
    "\22\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u04db\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u04dc\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u04dd\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\11\12\1\u04de"+
    "\20\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u04df\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u04e0\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u04e1\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u04e2\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\21\12\1\u04e3"+
    "\10\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\1\u04e4\31\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\14\12\1\u04e5\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u04e6\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u04e7\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\25\12"+
    "\1\u04e8\4\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u04e9\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u04ea\30\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u04eb\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u04ec"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u04ed\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u04ee\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\21\12\1\u04ef\10\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\13\12\1\u04f0"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u04f1\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\13\12\1\u04f2\16\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\14\12\1\u04f3\15\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\24\12\1\u04f4"+
    "\5\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\12\12\1\u04f5\17\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\7\12\1\u04f6\22\12\1\0\1\12\45\0"+
    "\1\u04f7\22\0\1\12\5\0\2\12\20\0\1\u04f8\31\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u04f9\25\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\14\12\1\u04fa\15\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u04fb\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\12\1\u04fc\30\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u04fd\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u04fe\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\5\12\1\u04ff\24\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0500\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\13\12\1\u0501"+
    "\16\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0502\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\1\u0503\1\12\20\0\32\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\5\12\1\u0504\24\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u0505\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0506\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\12"+
    "\1\u0507\30\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\23\12\1\u0508\6\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\6\12\1\u0509\23\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u050a\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\3\12"+
    "\1\u050b\26\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\23\12\1\u050c\6\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u050d\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u050e\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\12\12\1\u050f"+
    "\17\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\14\12\1\u0510\15\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\16\12\1\u0511\13\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u0512\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0513"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\11\12\1\u0514\20\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u0515\27\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u0516\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u0517\1\12\20\0\32\12"+
    "\1\0\1\12\43\0\1\u0518\24\0\1\12\5\0\2\12"+
    "\20\0\16\12\1\u0519\13\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\13\12\1\u051a\16\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\11\12\1\u051b\20\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\5\12"+
    "\1\u051c\24\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\12\1\u051d\30\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\4\12\1\u051e\25\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\14\12\1\u051f\15\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\14\12"+
    "\1\u0520\15\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\20\12\1\u0521\11\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0522\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0523\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\4\12\1\u0524\25\12"+
    "\1\0\1\12\2\0\1\12\5\0\1\u0525\1\12\20\0"+
    "\32\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\5\12\1\u0526\24\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u0527\27\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\12\12\1\u0528\17\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\4\12\1\u0529"+
    "\25\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\7\12\1\u052a\22\12\1\0\1\12\52\0\1\u052b\15\0"+
    "\1\12\5\0\2\12\20\0\2\12\1\u052c\27\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\5\12\1\u052d"+
    "\24\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u052e\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\11\12\1\u052f\20\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0530\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\2\12\1\u0531"+
    "\27\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\12\12\1\u0532\17\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\7\12\1\u0533\22\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\5\12\1\u0534\24\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\21\12\1\u0535"+
    "\10\12\1\0\1\12\2\0\1\12\5\0\1\u0536\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\10\12\1\u0537\21\12\1\0\1\12\2\0\1\12"+
    "\5\0\1\u0538\1\12\20\0\32\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0539\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u053a\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u053b"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\4\12\1\u053c\25\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u053d\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\21\12\1\u053e\10\12\1\0"+
    "\1\12\2\0\1\12\5\0\1\u053f\1\12\20\0\32\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\4\12"+
    "\1\u0540\25\12\1\0\1\12\2\0\1\12\5\0\1\u0541"+
    "\1\12\20\0\32\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\4\12\1\u0542\25\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\1\u0543\31\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\1\u0544\31\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\3\12\1\u0545"+
    "\26\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\3\12\1\u0546\26\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\14\12\1\u0547\15\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\7\12\1\u0548\22\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\23\12\1\u0549"+
    "\6\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\12\12\1\u054a\17\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\3\12\1\u054b\26\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u054c\1\12\20\0\32\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\20\12\1\u054d\11\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\6\12"+
    "\1\u054e\23\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\3\12\1\u054f\26\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\1\12\1\u0550\1\12\1\u0551\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u0552"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\1\u0553\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\1\u0554\31\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\16\12\1\u0555\13\12\1\0\1\12\2\0"+
    "\1\12\5\0\2\12\20\0\3\12\1\u0556\26\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\16\12\1\u0557"+
    "\13\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\2\12\1\u0558\27\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\1\u0559\31\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\2\12\1\u055a\27\12\1\0\1\12"+
    "\2\0\1\12\5\0\1\u055b\1\12\20\0\32\12\1\0"+
    "\1\12\2\0\1\12\5\0\2\12\20\0\14\12\1\u055c"+
    "\15\12\1\0\1\12\2\0\1\12\5\0\1\u055d\1\12"+
    "\20\0\32\12\1\0\1\12\2\0\1\12\5\0\2\12"+
    "\20\0\2\12\1\u055e\27\12\1\0\1\12\2\0\1\12"+
    "\5\0\2\12\20\0\7\12\1\u055f\22\12\1\0\1\12"+
    "\2\0\1\12\5\0\2\12\20\0\3\12\1\u0560\26\12"+
    "\1\0\1\12\2\0\1\12\5\0\2\12\20\0\1\u0561"+
    "\31\12\1\0\1\12\2\0\1\12\5\0\2\12\20\0"+
    "\16\12\1\u0562\13\12\1\0\1\12\2\0\1\12\5\0"+
    "\2\12\20\0\2\12\1\u0563\27\12\1\0\1\12\2\0"+
    "\1\12\5\0\1\u0564\1\12\20\0\32\12\1\0\1\12"+
    "\1\0";

  private static int [] zzUnpackTrans() {
    int [] result = new int[59832];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\5\1\1\11\43\1\1\0\1\11\2\0"+
    "\5\1\1\0\163\1\1\0\11\1\2\0\1\11\276\1"+
    "\1\0\2\1\1\0\336\1\1\0\300\1\1\0\232\1"+
    "\1\0\165\1\1\0\7\1\1\11\126\1\1\0\100\1"+
    "\1\0\56\1\1\0\40\1\1\0\22\1\1\11\71\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[1380];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;
    public String column1;
    public String column2;
    public String line;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 142) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 7: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Cadena;
          }
        case 323: break;
        case 85: 
          { line = Integer.toString(yyline+1); return OVER;
          }
        case 324: break;
        case 15: 
          { line = Integer.toString(yyline+1); return OF;
          }
        case 325: break;
        case 225: 
          { line = Integer.toString(yyline+1); return DATABASE;
          }
        case 326: break;
        case 118: 
          { line = Integer.toString(yyline+1); return USAGE;
          }
        case 327: break;
        case 10: 
          { line = Integer.toString(yyline+1); return AS;
          }
        case 328: break;
        case 271: 
          { line = Integer.toString(yyline+1); return PROCEDURE;
          }
        case 329: break;
        case 140: 
          { line = Integer.toString(yyline+1); return FETCH;
          }
        case 330: break;
        case 265: 
          { line = Integer.toString(yyline+1); return INDICATOR;
          }
        case 331: break;
        case 230: 
          { line = Integer.toString(yyline+1); return TRUNCATE;
          }
        case 332: break;
        case 226: 
          { line = Integer.toString(yyline+1); return DISTINCT;
          }
        case 333: break;
        case 280: 
          { line = Integer.toString(yyline+1); return SQLWARNING;
          }
        case 334: break;
        case 231: 
          { line = Integer.toString(yyline+1); return READTEXT;
          }
        case 335: break;
        case 102: 
          { line = Integer.toString(yyline+1); return ALTER;
          }
        case 336: break;
        case 106: 
          { line = Integer.toString(yyline+1); return LOWER;
          }
        case 337: break;
        case 149: 
          { line = Integer.toString(yyline+1); return ACTION;
          }
        case 338: break;
        case 192: 
          { line = Integer.toString(yyline+1); return SETUSER;
          }
        case 339: break;
        case 184: 
          { line = Integer.toString(yyline+1); return DEFAULT;
          }
        case 340: break;
        case 249: 
          { line = Integer.toString(yyline+1); return PRESERVE;
          }
        case 341: break;
        case 5: 
          { if(yytext().length()<=31){lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Identificador;} else{String cortador=yytext().substring(0,31); lexeme = cortador; column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-30); line = Integer.toString(yyline+1); return IdentificadorTruncado;}
          }
        case 342: break;
        case 181: 
          { line = Integer.toString(yyline+1); return EXTRACT;
          }
        case 343: break;
        case 227: 
          { line = Integer.toString(yyline+1); return LANGUAGE;
          }
        case 344: break;
        case 48: 
          { line = Integer.toString(yyline+1); return ELSE;
          }
        case 345: break;
        case 70: 
          { line = Integer.toString(yyline+1); return ROWS;
          }
        case 346: break;
        case 138: 
          { line = Integer.toString(yyline+1); return MONTH;
          }
        case 347: break;
        case 66: 
          { line = Integer.toString(yyline+1); return TIME;
          }
        case 348: break;
        case 35: 
          { line = Integer.toString(yyline+1); return SET;
          }
        case 349: break;
        case 147: 
          { line = Integer.toString(yyline+1); return EXCEPT;
          }
        case 350: break;
        case 307: 
          { line = Integer.toString(yyline+1); return OCTET_LENGTH;
          }
        case 351: break;
        case 292: 
          { line = Integer.toString(yyline+1); return TRANSACTION;
          }
        case 352: break;
        case 176: 
          { line = Integer.toString(yyline+1); return GLOBAL;
          }
        case 353: break;
        case 281: 
          { line = Integer.toString(yyline+1); return CHECKPOINT;
          }
        case 354: break;
        case 109: 
          { line = Integer.toString(yyline+1); return NAMES;
          }
        case 355: break;
        case 160: 
          { line = Integer.toString(yyline+1); return SCROLL;
          }
        case 356: break;
        case 141: 
          { line = Integer.toString(yyline+1); return FALSE;
          }
        case 357: break;
        case 319: 
          { line = Integer.toString(yyline+1); return CURRENT_TIMESTAMP;
          }
        case 358: break;
        case 81: 
          { line = Integer.toString(yyline+1); return USER;
          }
        case 359: break;
        case 240: 
          { line = Integer.toString(yyline+1); return SQLSTATE;
          }
        case 360: break;
        case 76: 
          { line = Integer.toString(yyline+1); return SOME;
          }
        case 361: break;
        case 228: 
          { line = Integer.toString(yyline+1); return TEXTSIZE;
          }
        case 362: break;
        case 245: 
          { line = Integer.toString(yyline+1); return HOLDLOCK;
          }
        case 363: break;
        case 253: 
          { line = Integer.toString(yyline+1); return FUNCTION;
          }
        case 364: break;
        case 124: 
          { line = Integer.toString(yyline+1); return INNER;
          }
        case 365: break;
        case 263: 
          { line = Integer.toString(yyline+1); return COLLATION;
          }
        case 366: break;
        case 52: 
          { line = Integer.toString(yyline+1); return DESC;
          }
        case 367: break;
        case 279: 
          { line = Integer.toString(yyline+1); return STATISTICS;
          }
        case 368: break;
        case 104: 
          { line = Integer.toString(yyline+1); return LOCAL;
          }
        case 369: break;
        case 24: 
          { line = Integer.toString(yyline+1); return ADD;
          }
        case 370: break;
        case 130: 
          { line = Integer.toString(yyline+1); return PIVOT;
          }
        case 371: break;
        case 177: 
          { line = Integer.toString(yyline+1); return MODULE;
          }
        case 372: break;
        case 293: 
          { line = Integer.toString(yyline+1); return TRANSLATION;
          }
        case 373: break;
        case 302: 
          { line = Integer.toString(yyline+1); return NONCLUSTERED;
          }
        case 374: break;
        case 266: 
          { line = Integer.toString(yyline+1); return INTERSECT;
          }
        case 375: break;
        case 320: 
          { line = Integer.toString(yyline+1); return SEMANTICKEYPHRASETABLE;
          }
        case 376: break;
        case 22: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return ComentarioE;
          }
        case 377: break;
        case 154: 
          { line = Integer.toString(yyline+1); return RETURN;
          }
        case 378: break;
        case 61: 
          { line = Integer.toString(yyline+1); return LIKE;
          }
        case 379: break;
        case 53: 
          { line = Integer.toString(yyline+1); return DATE;
          }
        case 380: break;
        case 152: 
          { line = Integer.toString(yyline+1); return DOMAIN;
          }
        case 381: break;
        case 248: 
          { line = Integer.toString(yyline+1); return INTERVAL;
          }
        case 382: break;
        case 312: 
          { line = Integer.toString(yyline+1); return CORRESPONDING;
          }
        case 383: break;
        case 301: 
          { line = Integer.toString(yyline+1); return INSENSITIVE;
          }
        case 384: break;
        case 3: 
          { /*se ignoran los espacios*/
          }
        case 385: break;
        case 58: 
          { line = Integer.toString(yyline+1); return LEFT;
          }
        case 386: break;
        case 44: 
          { line = Integer.toString(yyline+1); return GET;
          }
        case 387: break;
        case 242: 
          { line = Integer.toString(yyline+1); return COALESCE;
          }
        case 388: break;
        case 156: 
          { line = Integer.toString(yyline+1); return REVOKE;
          }
        case 389: break;
        case 313: 
          { line = Integer.toString(yyline+1); return CONTAINSTABLE;
          }
        case 390: break;
        case 62: 
          { line = Integer.toString(yyline+1); return TRAN;
          }
        case 391: break;
        case 314: 
          { line = Integer.toString(yyline+1); return FREETEXTTABLE;
          }
        case 392: break;
        case 16: 
          { line = Integer.toString(yyline+1); return IN;
          }
        case 393: break;
        case 213: 
          { line = Integer.toString(yyline+1); return PRIMARY;
          }
        case 394: break;
        case 73: 
          { line = Integer.toString(yyline+1); return NONE;
          }
        case 395: break;
        case 322: 
          { line = Integer.toString(yyline+1); return SEMANTICSIMILARITYDETAILSTABLE;
          }
        case 396: break;
        case 310: 
          { line = Integer.toString(yyline+1); return TIMEZONE_HOUR;
          }
        case 397: break;
        case 84: 
          { line = Integer.toString(yyline+1); return OPEN;
          }
        case 398: break;
        case 64: 
          { line = Integer.toString(yyline+1); return TRIM;
          }
        case 399: break;
        case 175: 
          { line = Integer.toString(yyline+1); return PUBLIC;
          }
        case 400: break;
        case 155: 
          { line = Integer.toString(yyline+1); return REVERT;
          }
        case 401: break;
        case 8: 
          { /*se ignoran los comentario*/
          }
        case 402: break;
        case 110: 
          { line = Integer.toString(yyline+1); return NCHAR;
          }
        case 403: break;
        case 40: 
          { line = Integer.toString(yyline+1); return INT;
          }
        case 404: break;
        case 108: 
          { line = Integer.toString(yyline+1); return RIGHT;
          }
        case 405: break;
        case 195: 
          { line = Integer.toString(yyline+1); return SQLCODE;
          }
        case 406: break;
        case 21: 
          { line = Integer.toString(yyline+1); return END;
          }
        case 407: break;
        case 165: 
          { line = Integer.toString(yyline+1); return COMMIT;
          }
        case 408: break;
        case 187: 
          { line = Integer.toString(yyline+1); return TSEQUAL;
          }
        case 409: break;
        case 153: 
          { line = Integer.toString(yyline+1); return LINENO;
          }
        case 410: break;
        case 59: 
          { line = Integer.toString(yyline+1); return LAST;
          }
        case 411: break;
        case 117: 
          { line = Integer.toString(yyline+1); return UNION;
          }
        case 412: break;
        case 97: 
          { line = Integer.toString(yyline+1); return VIEW;
          }
        case 413: break;
        case 23: 
          { line = Integer.toString(yyline+1); return ADA;
          }
        case 414: break;
        case 262: 
          { line = Integer.toString(yyline+1); return CHARACTER;
          }
        case 415: break;
        case 88: 
          { line = Integer.toString(yyline+1); return BULK;
          }
        case 416: break;
        case 234: 
          { line = Integer.toString(yyline+1); return ROLLBACK;
          }
        case 417: break;
        case 214: 
          { line = Integer.toString(yyline+1); return WAITFOR;
          }
        case 418: break;
        case 178: 
          { line = Integer.toString(yyline+1); return MINUTE;
          }
        case 419: break;
        case 232: 
          { line = Integer.toString(yyline+1); return RELATIVE;
          }
        case 420: break;
        case 287: 
          { line = Integer.toString(yyline+1); return PRIVILEGES;
          }
        case 421: break;
        case 43: 
          { line = Integer.toString(yyline+1); return PAD;
          }
        case 422: break;
        case 162: 
          { line = Integer.toString(yyline+1); return CREATE;
          }
        case 423: break;
        case 185: 
          { line = Integer.toString(yyline+1); return LEADING;
          }
        case 424: break;
        case 261: 
          { line = Integer.toString(yyline+1); return CLUSTERED;
          }
        case 425: break;
        case 123: 
          { line = Integer.toString(yyline+1); return INDEX;
          }
        case 426: break;
        case 186: 
          { line = Integer.toString(yyline+1); return TRIGGER;
          }
        case 427: break;
        case 268: 
          { line = Integer.toString(yyline+1); return ISOLATION;
          }
        case 428: break;
        case 205: 
          { line = Integer.toString(yyline+1); return OPENXML;
          }
        case 429: break;
        case 107: 
          { line = Integer.toString(yyline+1); return TABLE;
          }
        case 430: break;
        case 283: 
          { line = Integer.toString(yyline+1); return CONSTRAINT;
          }
        case 431: break;
        case 125: 
          { line = Integer.toString(yyline+1); return INPUT;
          }
        case 432: break;
        case 204: 
          { line = Integer.toString(yyline+1); return UNPIVOT;
          }
        case 433: break;
        case 137: 
          { line = Integer.toString(yyline+1); return MATCH;
          }
        case 434: break;
        case 211: 
          { line = Integer.toString(yyline+1); return PARTIAL;
          }
        case 435: break;
        case 100: 
          { line = Integer.toString(yyline+1); return FILE;
          }
        case 436: break;
        case 132: 
          { line = Integer.toString(yyline+1); return GROUP;
          }
        case 437: break;
        case 82: 
          { line = Integer.toString(yyline+1); return HOUR;
          }
        case 438: break;
        case 277: 
          { line = Integer.toString(yyline+1); return REFERENCES;
          }
        case 439: break;
        case 276: 
          { line = Integer.toString(yyline+1); return DISCONNECT;
          }
        case 440: break;
        case 36: 
          { line = Integer.toString(yyline+1); return SUM;
          }
        case 441: break;
        case 139: 
          { line = Integer.toString(yyline+1); return VALUE;
          }
        case 442: break;
        case 95: 
          { line = Integer.toString(yyline+1); return WORK;
          }
        case 443: break;
        case 252: 
          { line = Integer.toString(yyline+1); return FREETEXT;
          }
        case 444: break;
        case 179: 
          { line = Integer.toString(yyline+1); return VALUES;
          }
        case 445: break;
        case 170: 
          { line = Integer.toString(yyline+1); return OPTION;
          }
        case 446: break;
        case 68: 
          { line = Integer.toString(yyline+1); return REAL;
          }
        case 447: break;
        case 134: 
          { line = Integer.toString(yyline+1); return WHERE;
          }
        case 448: break;
        case 116: 
          { line = Integer.toString(yyline+1); return COUNT;
          }
        case 449: break;
        case 112: 
          { line = Integer.toString(yyline+1); return SQLCA;
          }
        case 450: break;
        case 46: 
          { line = Integer.toString(yyline+1); return MIN;
          }
        case 451: break;
        case 212: 
          { line = Integer.toString(yyline+1); return PREPARE;
          }
        case 452: break;
        case 196: 
          { line = Integer.toString(yyline+1); return CATALOG;
          }
        case 453: break;
        case 92: 
          { line = Integer.toString(yyline+1); return PROC;
          }
        case 454: break;
        case 151: 
          { line = Integer.toString(yyline+1); return DOUBLE;
          }
        case 455: break;
        case 29: 
          { line = Integer.toString(yyline+1); return ASC;
          }
        case 456: break;
        case 41: 
          { line = Integer.toString(yyline+1); return BIT;
          }
        case 457: break;
        case 11: 
          { line = Integer.toString(yyline+1); return TO;
          }
        case 458: break;
        case 87: 
          { line = Integer.toString(yyline+1); return ZONE;
          }
        case 459: break;
        case 37: 
          { line = Integer.toString(yyline+1); return SQL;
          }
        case 460: break;
        case 303: 
          { line = Integer.toString(yyline+1); return SESSION_USER;
          }
        case 461: break;
        case 94: 
          { line = Integer.toString(yyline+1); return WHEN;
          }
        case 462: break;
        case 72: 
          { line = Integer.toString(yyline+1); return NULL;
          }
        case 463: break;
        case 193: 
          { line = Integer.toString(yyline+1); return SESSION;
          }
        case 464: break;
        case 101: 
          { line = Integer.toString(yyline+1); return JOIN;
          }
        case 465: break;
        case 290: 
          { line = Integer.toString(yyline+1); return DISTRIBUTED;
          }
        case 466: break;
        case 69: 
          { line = Integer.toString(yyline+1); return RULE;
          }
        case 467: break;
        case 31: 
          { line = Integer.toString(yyline+1); return DEC;
          }
        case 468: break;
        case 127: 
          { line = Integer.toString(yyline+1); return BREAK;
          }
        case 469: break;
        case 121: 
          { line = Integer.toString(yyline+1); return ORDER;
          }
        case 470: break;
        case 89: 
          { line = Integer.toString(yyline+1); return BOTH;
          }
        case 471: break;
        case 161: 
          { line = Integer.toString(yyline+1); return SCHEMA;
          }
        case 472: break;
        case 4: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Puntuacion;
          }
        case 473: break;
        case 198: 
          { line = Integer.toString(yyline+1); return CURRENT;
          }
        case 474: break;
        case 190: 
          { line = Integer.toString(yyline+1); return NUMERIC;
          }
        case 475: break;
        case 264: 
          { line = Integer.toString(yyline+1); return OPENQUERY;
          }
        case 476: break;
        case 251: 
          { line = Integer.toString(yyline+1); return WHENEVER;
          }
        case 477: break;
        case 235: 
          { line = Integer.toString(yyline+1); return ROWCOUNT;
          }
        case 478: break;
        case 296: 
          { line = Integer.toString(yyline+1); return REPLICATION;
          }
        case 479: break;
        case 286: 
          { line = Integer.toString(yyline+1); return BIT_LENGTH;
          }
        case 480: break;
        case 208: 
          { line = Integer.toString(yyline+1); return INCLUDE;
          }
        case 481: break;
        case 56: 
          { line = Integer.toString(yyline+1); return DISK;
          }
        case 482: break;
        case 315: 
          { line = Integer.toString(yyline+1); return OPENDATASOURCE;
          }
        case 483: break;
        case 119: 
          { line = Integer.toString(yyline+1); return USING;
          }
        case 484: break;
        case 115: 
          { line = Integer.toString(yyline+1); return CHECK;
          }
        case 485: break;
        case 223: 
          { line = Integer.toString(yyline+1); return DESCRIBE;
          }
        case 486: break;
        case 278: 
          { line = Integer.toString(yyline+1); return ROWGUIDCOL;
          }
        case 487: break;
        case 274: 
          { line = Integer.toString(yyline+1); return DESCRIPTOR;
          }
        case 488: break;
        case 30: 
          { line = Integer.toString(yyline+1); return AVG;
          }
        case 489: break;
        case 222: 
          { line = Integer.toString(yyline+1); return ABSOLUTE;
          }
        case 490: break;
        case 126: 
          { line = Integer.toString(yyline+1); return BEGIN;
          }
        case 491: break;
        case 86: 
          { line = Integer.toString(yyline+1); return INTO;
          }
        case 492: break;
        case 311: 
          { line = Integer.toString(yyline+1); return SECURITYAUDIT;
          }
        case 493: break;
        case 38: 
          { line = Integer.toString(yyline+1); return USE;
          }
        case 494: break;
        case 78: 
          { line = Integer.toString(yyline+1); return CASE;
          }
        case 495: break;
        case 6: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Float;
          }
        case 496: break;
        case 218: 
          { line = Integer.toString(yyline+1); return FORTRAN;
          }
        case 497: break;
        case 318: 
          { line = Integer.toString(yyline+1); return CHARACTER_LENGTH;
          }
        case 498: break;
        case 71: 
          { line = Integer.toString(yyline+1); return NEXT;
          }
        case 499: break;
        case 254: 
          { line = Integer.toString(yyline+1); return EXCEPTION;
          }
        case 500: break;
        case 197: 
          { line = Integer.toString(yyline+1); return CASCADE;
          }
        case 501: break;
        case 207: 
          { line = Integer.toString(yyline+1); return INTEGER;
          }
        case 502: break;
        case 63: 
          { line = Integer.toString(yyline+1); return TRUE;
          }
        case 503: break;
        case 51: 
          { line = Integer.toString(yyline+1); return DENY;
          }
        case 504: break;
        case 135: 
          { line = Integer.toString(yyline+1); return WHILE;
          }
        case 505: break;
        case 188: 
          { line = Integer.toString(yyline+1); return RESTORE;
          }
        case 506: break;
        case 201: 
          { line = Integer.toString(yyline+1); return CONVERT;
          }
        case 507: break;
        case 32: 
          { line = Integer.toString(yyline+1); return DAY;
          }
        case 508: break;
        case 91: 
          { line = Integer.toString(yyline+1); return PLAN;
          }
        case 509: break;
        case 258: 
          { line = Integer.toString(yyline+1); return TIMESTAMP;
          }
        case 510: break;
        case 13: 
          { line = Integer.toString(yyline+1); return OR;
          }
        case 511: break;
        case 129: 
          { line = Integer.toString(yyline+1); return PRIOR;
          }
        case 512: break;
        case 111: 
          { line = Integer.toString(yyline+1); return SPACE;
          }
        case 513: break;
        case 18: 
          { line = Integer.toString(yyline+1); return IF;
          }
        case 514: break;
        case 229: 
          { line = Integer.toString(yyline+1); return TRAILING;
          }
        case 515: break;
        case 19: 
          { line = Integer.toString(yyline+1); return BY;
          }
        case 516: break;
        case 289: 
          { line = Integer.toString(yyline+1); return DIAGNOSTICS;
          }
        case 517: break;
        case 297: 
          { line = Integer.toString(yyline+1); return SYSTEM_USER;
          }
        case 518: break;
        case 241: 
          { line = Integer.toString(yyline+1); return CASCADED;
          }
        case 519: break;
        case 26: 
          { line = Integer.toString(yyline+1); return ARE;
          }
        case 520: break;
        case 163: 
          { line = Integer.toString(yyline+1); return CURSOR;
          }
        case 521: break;
        case 282: 
          { line = Integer.toString(yyline+1); return CONNECTION;
          }
        case 522: break;
        case 217: 
          { line = Integer.toString(yyline+1); return FOREIGN;
          }
        case 523: break;
        case 47: 
          { line = Integer.toString(yyline+1); return FOR;
          }
        case 524: break;
        case 206: 
          { line = Integer.toString(yyline+1); return OFFSETS;
          }
        case 525: break;
        case 272: 
          { line = Integer.toString(yyline+1); return WRITETEXT;
          }
        case 526: break;
        case 191: 
          { line = Integer.toString(yyline+1); return NOCHECK;
          }
        case 527: break;
        case 194: 
          { line = Integer.toString(yyline+1); return SECTION;
          }
        case 528: break;
        case 65: 
          { line = Integer.toString(yyline+1); return THEN;
          }
        case 529: break;
        case 120: 
          { line = Integer.toString(yyline+1); return UPPER;
          }
        case 530: break;
        case 321: 
          { line = Integer.toString(yyline+1); return SEMANTICSIMILARITYTABLE;
          }
        case 531: break;
        case 305: 
          { line = Integer.toString(yyline+1); return CURRENT_TIME;
          }
        case 532: break;
        case 247: 
          { line = Integer.toString(yyline+1); return IDENTITY;
          }
        case 533: break;
        case 27: 
          { line = Integer.toString(yyline+1); return AND;
          }
        case 534: break;
        case 158: 
          { line = Integer.toString(yyline+1); return SELECT;
          }
        case 535: break;
        case 209: 
          { line = Integer.toString(yyline+1); return BETWEEN;
          }
        case 536: break;
        case 75: 
          { line = Integer.toString(yyline+1); return SAVE;
          }
        case 537: break;
        case 306: 
          { line = Integer.toString(yyline+1); return CURRENT_USER;
          }
        case 538: break;
        case 42: 
          { line = Integer.toString(yyline+1); return KEY;
          }
        case 539: break;
        case 80: 
          { line = Integer.toString(yyline+1); return CHAR;
          }
        case 540: break;
        case 49: 
          { line = Integer.toString(yyline+1); return EXEC;
          }
        case 541: break;
        case 74: 
          { line = Integer.toString(yyline+1); return YEAR;
          }
        case 542: break;
        case 224: 
          { line = Integer.toString(yyline+1); return DEFERRED;
          }
        case 543: break;
        case 238: 
          { line = Integer.toString(yyline+1); return SMALLINT;
          }
        case 544: break;
        case 182: 
          { line = Integer.toString(yyline+1); return DECLARE;
          }
        case 545: break;
        case 259: 
          { line = Integer.toString(yyline+1); return RAISERROR;
          }
        case 546: break;
        case 308: 
          { line = Integer.toString(yyline+1); return WITHIN_GROUP;
          }
        case 547: break;
        case 257: 
          { line = Integer.toString(yyline+1); return TRANSLATE;
          }
        case 548: break;
        case 304: 
          { line = Integer.toString(yyline+1); return CURRENT_DATE;
          }
        case 549: break;
        case 105: 
          { line = Integer.toString(yyline+1); return LOGIN;
          }
        case 550: break;
        case 256: 
          { line = Integer.toString(yyline+1); return TEMPORARY;
          }
        case 551: break;
        case 98: 
          { line = Integer.toString(yyline+1); return FROM;
          }
        case 552: break;
        case 55: 
          { line = Integer.toString(yyline+1); return DUMP;
          }
        case 553: break;
        case 189: 
          { line = Integer.toString(yyline+1); return NATURAL;
          }
        case 554: break;
        case 20: 
          { line = Integer.toString(yyline+1); return GO;
          }
        case 555: break;
        case 67: 
          { line = Integer.toString(yyline+1); return READ;
          }
        case 556: break;
        case 299: 
          { line = Integer.toString(yyline+1); return CONSTRAINTS;
          }
        case 557: break;
        case 60: 
          { line = Integer.toString(yyline+1); return LOAD;
          }
        case 558: break;
        case 159: 
          { line = Integer.toString(yyline+1); return SECOND;
          }
        case 559: break;
        case 83: 
          { line = Integer.toString(yyline+1); return ONLY;
          }
        case 560: break;
        case 54: 
          { line = Integer.toString(yyline+1); return DROP;
          }
        case 561: break;
        case 166: 
          { line = Integer.toString(yyline+1); return UNIQUE;
          }
        case 562: break;
        case 239: 
          { line = Integer.toString(yyline+1); return SQLERROR;
          }
        case 563: break;
        case 14: 
          { line = Integer.toString(yyline+1); return ON;
          }
        case 564: break;
        case 90: 
          { line = Integer.toString(yyline+1); return KILL;
          }
        case 565: break;
        case 57: 
          { line = Integer.toString(yyline+1); return DBCC;
          }
        case 566: break;
        case 128: 
          { line = Integer.toString(yyline+1); return PRINT;
          }
        case 567: break;
        case 131: 
          { line = Integer.toString(yyline+1); return GRANT;
          }
        case 568: break;
        case 246: 
          { line = Integer.toString(yyline+1); return OVERLAPS;
          }
        case 569: break;
        case 202: 
          { line = Integer.toString(yyline+1); return COMPUTE;
          }
        case 570: break;
        case 309: 
          { line = Integer.toString(yyline+1); return AUTHORIZATION;
          }
        case 571: break;
        case 255: 
          { line = Integer.toString(yyline+1); return ASSERTION;
          }
        case 572: break;
        case 219: 
          { line = Integer.toString(yyline+1); return END_EXEC;
          }
        case 573: break;
        case 1: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return ERROR;
          }
        case 574: break;
        case 273: 
          { line = Integer.toString(yyline+1); return DEALLOCATE;
          }
        case 575: break;
        case 180: 
          { line = Integer.toString(yyline+1); return EXECUTE;
          }
        case 576: break;
        case 122: 
          { line = Integer.toString(yyline+1); return OUTER;
          }
        case 577: break;
        case 316: 
          { line = Integer.toString(yyline+1); return TIMEZONE_MINUTE;
          }
        case 578: break;
        case 260: 
          { line = Integer.toString(yyline+1); return SUBSTRING;
          }
        case 579: break;
        case 173: 
          { line = Integer.toString(yyline+1); return BROWSE;
          }
        case 580: break;
        case 28: 
          { line = Integer.toString(yyline+1); return ANY;
          }
        case 581: break;
        case 167: 
          { line = Integer.toString(yyline+1); return UPDATE;
          }
        case 582: break;
        case 215: 
          { line = Integer.toString(yyline+1); return VARYING;
          }
        case 583: break;
        case 34: 
          { line = Integer.toString(yyline+1); return NOT;
          }
        case 584: break;
        case 39: 
          { line = Integer.toString(yyline+1); return OFF;
          }
        case 585: break;
        case 93: 
          { line = Integer.toString(yyline+1); return GOTO;
          }
        case 586: break;
        case 142: 
          { line = Integer.toString(yyline+1); return FLOAT;
          }
        case 587: break;
        case 183: 
          { line = Integer.toString(yyline+1); return DECIMAL;
          }
        case 588: break;
        case 146: 
          { line = Integer.toString(yyline+1); return ESCAPE;
          }
        case 589: break;
        case 294: 
          { line = Integer.toString(yyline+1); return TRY_CONVERT;
          }
        case 590: break;
        case 237: 
          { line = Integer.toString(yyline+1); return SHUTDOWN;
          }
        case 591: break;
        case 203: 
          { line = Integer.toString(yyline+1); return UNKNOWN;
          }
        case 592: break;
        case 25: 
          { line = Integer.toString(yyline+1); return ALL;
          }
        case 593: break;
        case 298: 
          { line = Integer.toString(yyline+1); return CHAR_LENGTH;
          }
        case 594: break;
        case 2: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1);  line = Integer.toString(yyline+1); return Entero;
          }
        case 595: break;
        case 250: 
          { line = Integer.toString(yyline+1); return POSITION;
          }
        case 596: break;
        case 133: 
          { line = Integer.toString(yyline+1); return WRITE;
          }
        case 597: break;
        case 295: 
          { line = Integer.toString(yyline+1); return RECONFIGURE;
          }
        case 598: break;
        case 168: 
          { line = Integer.toString(yyline+1); return HAVING;
          }
        case 599: break;
        case 174: 
          { line = Integer.toString(yyline+1); return PASCAL;
          }
        case 600: break;
        case 164: 
          { line = Integer.toString(yyline+1); return COLUMN;
          }
        case 601: break;
        case 291: 
          { line = Integer.toString(yyline+1); return TABLESAMPLE;
          }
        case 602: break;
        case 136: 
          { line = Integer.toString(yyline+1); return MERGE;
          }
        case 603: break;
        case 172: 
          { line = Integer.toString(yyline+1); return BACKUP;
          }
        case 604: break;
        case 103: 
          { line = Integer.toString(yyline+1); return LEVEL;
          }
        case 605: break;
        case 269: 
          { line = Integer.toString(yyline+1); return IMMEDIATE;
          }
        case 606: break;
        case 145: 
          { line = Integer.toString(yyline+1); return ERRLVL;
          }
        case 607: break;
        case 236: 
          { line = Integer.toString(yyline+1); return NATIONAL;
          }
        case 608: break;
        case 284: 
          { line = Integer.toString(yyline+1); return UPDATETEXT;
          }
        case 609: break;
        case 221: 
          { line = Integer.toString(yyline+1); return ALLOCATE;
          }
        case 610: break;
        case 200: 
          { line = Integer.toString(yyline+1); return CONNECT;
          }
        case 611: break;
        case 288: 
          { line = Integer.toString(yyline+1); return FILLFACTOR;
          }
        case 612: break;
        case 79: 
          { line = Integer.toString(yyline+1); return CAST;
          }
        case 613: break;
        case 150: 
          { line = Integer.toString(yyline+1); return DELETE;
          }
        case 614: break;
        case 77: 
          { line = Integer.toString(yyline+1); return SIZE;
          }
        case 615: break;
        case 143: 
          { line = Integer.toString(yyline+1); return FOUND;
          }
        case 616: break;
        case 33: 
          { line = Integer.toString(yyline+1); return TOP;
          }
        case 617: break;
        case 171: 
          { line = Integer.toString(yyline+1); return INSERT;
          }
        case 618: break;
        case 270: 
          { line = Integer.toString(yyline+1); return PRECISION;
          }
        case 619: break;
        case 12: 
          { line = Integer.toString(yyline+1); return NO;
          }
        case 620: break;
        case 317: 
          { line = Integer.toString(yyline+1); return IDENTITY_INSERT;
          }
        case 621: break;
        case 144: 
          { line = Integer.toString(yyline+1); return FIRST;
          }
        case 622: break;
        case 157: 
          { line = Integer.toString(yyline+1); return NULLIF;
          }
        case 623: break;
        case 50: 
          { line = Integer.toString(yyline+1); return EXIT;
          }
        case 624: break;
        case 210: 
          { line = Integer.toString(yyline+1); return PERCENT;
          }
        case 625: break;
        case 220: 
          { line = Integer.toString(yyline+1); return EXTERNAL;
          }
        case 626: break;
        case 300: 
          { line = Integer.toString(yyline+1); return IDENTITYCOL;
          }
        case 627: break;
        case 243: 
          { line = Integer.toString(yyline+1); return CONTAINS;
          }
        case 628: break;
        case 148: 
          { line = Integer.toString(yyline+1); return EXISTS;
          }
        case 629: break;
        case 99: 
          { line = Integer.toString(yyline+1); return FULL;
          }
        case 630: break;
        case 285: 
          { line = Integer.toString(yyline+1); return OPENROWSET;
          }
        case 631: break;
        case 267: 
          { line = Integer.toString(yyline+1); return INITIALLY;
          }
        case 632: break;
        case 113: 
          { line = Integer.toString(yyline+1); return CLOSE;
          }
        case 633: break;
        case 199: 
          { line = Integer.toString(yyline+1); return COLLATE;
          }
        case 634: break;
        case 216: 
          { line = Integer.toString(yyline+1); return VARCHAR;
          }
        case 635: break;
        case 244: 
          { line = Integer.toString(yyline+1); return CONTINUE;
          }
        case 636: break;
        case 114: 
          { line = Integer.toString(yyline+1); return CROSS;
          }
        case 637: break;
        case 275: 
          { line = Integer.toString(yyline+1); return DEFERRABLE;
          }
        case 638: break;
        case 233: 
          { line = Integer.toString(yyline+1); return RESTRICT;
          }
        case 639: break;
        case 9: 
          { line = Integer.toString(yyline+1); return AT;
          }
        case 640: break;
        case 45: 
          { line = Integer.toString(yyline+1); return MAX;
          }
        case 641: break;
        case 169: 
          { line = Integer.toString(yyline+1); return OUTPUT;
          }
        case 642: break;
        case 96: 
          { line = Integer.toString(yyline+1); return WITH;
          }
        case 643: break;
        case 17: 
          { line = Integer.toString(yyline+1); return IS;
          }
        case 644: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
