/* The following code was generated by JFlex 1.4.3 on 20/8/19 10:58 */

package codigo;
import static codigo.Tokens.*;

/**
 * This class is a scanner generated by 
 * <a href="http://www.jflex.de/">JFlex</a> 1.4.3
 * on 20/8/19 10:58 from the specification file
 * <tt>/home/cristobal/Documentos/MiniSQL/AnalizadorSQL/src/codigo/Lexer.flex</tt>
 */
class Lexer {

  /** This character denotes the end of file */
  public static final int YYEOF = -1;

  /** initial size of the lookahead buffer */
  private static final int ZZ_BUFFERSIZE = 16384;

  /** lexical states */
  public static final int YYINITIAL = 0;

  /**
   * ZZ_LEXSTATE[l] is the state in the DFA for the lexical state l
   * ZZ_LEXSTATE[l+1] is the state in the DFA for the lexical state l
   *                  at the beginning of a line
   * l is of the form l = 2*k, k a non negative integer
   */
  private static final int ZZ_LEXSTATE[] = { 
     0, 0
  };

  /** 
   * Translates characters to character classes
   */
  private static final String ZZ_CMAP_PACKED = 
    "\11\0\1\64\1\16\2\0\1\56\22\0\1\53\1\61\3\0\1\60"+
    "\1\63\1\15\1\67\1\70\1\55\1\20\1\64\1\47\1\21\1\54"+
    "\12\1\1\0\1\60\1\61\1\62\1\61\2\0\1\23\1\24\1\30"+
    "\1\32\1\22\1\46\1\40\1\35\1\31\1\51\1\41\1\14\1\45"+
    "\1\12\1\26\1\42\1\52\1\33\1\25\1\27\1\13\1\37\1\43"+
    "\1\50\1\34\1\36\1\65\1\0\1\66\1\0\1\44\1\0\1\7"+
    "\3\73\1\5\1\6\5\73\1\10\5\73\1\3\1\11\1\2\1\4"+
    "\5\73\1\71\1\57\1\72\66\0\1\17\uff4b\0";

  /** 
   * Translates characters to character classes
   */
  private static final char [] ZZ_CMAP = zzUnpackCMap(ZZ_CMAP_PACKED);

  /** 
   * Translates DFA states to action switch labels.
   */
  private static final int [] ZZ_ACTION = zzUnpackAction();

  private static final String ZZ_ACTION_PACKED_0 =
    "\1\0\1\1\1\2\6\3\1\1\1\4\1\1\2\5"+
    "\24\3\1\5\1\3\1\5\1\1\1\5\1\1\3\5"+
    "\1\6\5\3\1\7\10\3\1\0\1\10\1\0\1\10"+
    "\1\0\11\3\2\7\26\3\1\7\2\3\1\7\2\3"+
    "\1\7\3\3\1\7\11\3\2\7\26\3\1\7\32\3"+
    "\1\11\1\3\2\0\13\3\1\7\12\3\1\7\7\3"+
    "\1\7\7\3\1\7\5\3\1\7\11\3\1\7\4\3"+
    "\1\7\30\3\1\7\13\3\1\7\54\3\1\7\3\3"+
    "\1\7\4\3\1\11\1\12\1\0\1\6\1\0\2\13"+
    "\12\3\1\0\35\3\2\7\4\3\2\7\24\3\1\7"+
    "\12\3\1\7\4\3\1\7\4\3\1\7\22\3\1\7"+
    "\3\3\1\7\1\3\1\7\4\3\1\0\6\3\1\0"+
    "\25\3\1\7\53\3\1\7\12\3\2\0\1\7\51\3"+
    "\1\0\2\3\1\7\11\3\1\7\1\3\1\7\13\3"+
    "\1\0\1\3\1\7\11\3\1\7\2\3\1\7\2\3"+
    "\1\0\11\3\1\0\10\3\1\0\7\3\1\0\2\3"+
    "\1\7\21\3";

  private static int [] zzUnpackAction() {
    int [] result = new int[668];
    int offset = 0;
    offset = zzUnpackAction(ZZ_ACTION_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAction(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /** 
   * Translates a state to a row index in the transition table
   */
  private static final int [] ZZ_ROWMAP = zzUnpackRowMap();

  private static final String ZZ_ROWMAP_PACKED_0 =
    "\0\0\0\74\0\170\0\264\0\360\0\u012c\0\u0168\0\u01a4"+
    "\0\u01e0\0\u021c\0\u0258\0\u0294\0\u02d0\0\74\0\u030c\0\u0348"+
    "\0\u0384\0\u03c0\0\u03fc\0\u0438\0\u0474\0\u04b0\0\u04ec\0\u0528"+
    "\0\u0564\0\u05a0\0\u05dc\0\u0618\0\u0654\0\u0690\0\u06cc\0\u0708"+
    "\0\u0744\0\u0780\0\u07bc\0\u07f8\0\u0834\0\u0870\0\u08ac\0\u08e8"+
    "\0\u0924\0\u0960\0\u099c\0\u09d8\0\u0a14\0\u0a50\0\u0a8c\0\u0ac8"+
    "\0\u0b04\0\u0b40\0\u0b7c\0\u0bb8\0\u0bf4\0\u0c30\0\u0c6c\0\u0ca8"+
    "\0\u0ce4\0\u0d20\0\u021c\0\74\0\u0294\0\u0294\0\u0d5c\0\u0d98"+
    "\0\u0dd4\0\u0e10\0\u0e4c\0\u0e88\0\u0ec4\0\u0f00\0\u0f3c\0\u0f78"+
    "\0\u0fb4\0\360\0\u0ff0\0\u102c\0\u1068\0\u10a4\0\u10e0\0\u111c"+
    "\0\u1158\0\u1194\0\u11d0\0\u120c\0\u1248\0\u1284\0\u12c0\0\u12fc"+
    "\0\u1338\0\u1374\0\u13b0\0\u13ec\0\u1428\0\u1464\0\u14a0\0\u14dc"+
    "\0\u1518\0\u1554\0\u1590\0\u15cc\0\u1608\0\u1644\0\u1680\0\u16bc"+
    "\0\u16f8\0\u1734\0\u1770\0\u17ac\0\u17e8\0\u1824\0\u1860\0\u189c"+
    "\0\u18d8\0\u1914\0\u1950\0\u198c\0\u19c8\0\u1a04\0\u1a40\0\u1a7c"+
    "\0\u1ab8\0\u1af4\0\u1b30\0\u1b6c\0\u1ba8\0\u1be4\0\u1c20\0\u1c5c"+
    "\0\u1c98\0\u1cd4\0\u1d10\0\u1d4c\0\u1d88\0\u1dc4\0\u1e00\0\u1e3c"+
    "\0\u1e78\0\u1eb4\0\u1ef0\0\u1f2c\0\u1f68\0\u1fa4\0\u1fe0\0\u201c"+
    "\0\u2058\0\u2094\0\u20d0\0\u210c\0\u2148\0\u2184\0\u21c0\0\u21fc"+
    "\0\u2238\0\u2274\0\u22b0\0\u22ec\0\u2328\0\u2364\0\u23a0\0\u23dc"+
    "\0\u2418\0\u2454\0\u2490\0\u24cc\0\u2508\0\u2544\0\u2580\0\u25bc"+
    "\0\u25f8\0\u2634\0\u2670\0\u26ac\0\u26e8\0\u2724\0\u2760\0\u279c"+
    "\0\u27d8\0\u2814\0\u2850\0\u288c\0\u28c8\0\u2904\0\u2940\0\u297c"+
    "\0\u29b8\0\u29f4\0\u2a30\0\u2a6c\0\u2aa8\0\u2ae4\0\u2b20\0\u2b5c"+
    "\0\u2b98\0\u2bd4\0\u2c10\0\u2c4c\0\u2c88\0\u2cc4\0\u2d00\0\u2d3c"+
    "\0\u2d78\0\u2db4\0\u2df0\0\u2e2c\0\u2e68\0\u2ea4\0\u2ee0\0\u2f1c"+
    "\0\u2f58\0\u2f94\0\u2fd0\0\u300c\0\u3048\0\u3084\0\u30c0\0\u30fc"+
    "\0\u3138\0\u3174\0\u31b0\0\u31ec\0\u3228\0\u3264\0\u32a0\0\u32dc"+
    "\0\u3318\0\u3354\0\u3390\0\u33cc\0\u3408\0\u3444\0\u3480\0\u34bc"+
    "\0\u34f8\0\u3534\0\u3570\0\u35ac\0\u35e8\0\u3624\0\u3660\0\u369c"+
    "\0\u36d8\0\u3714\0\u3750\0\u378c\0\u37c8\0\u3804\0\u3840\0\u387c"+
    "\0\u38b8\0\u38f4\0\u3930\0\u396c\0\u39a8\0\u39e4\0\u3a20\0\u3a5c"+
    "\0\u3a98\0\u3ad4\0\u3b10\0\u3b4c\0\u3b88\0\u3bc4\0\u3c00\0\u1770"+
    "\0\u3c3c\0\u3c78\0\u3cb4\0\u3cf0\0\u3d2c\0\u3d68\0\u3da4\0\u3de0"+
    "\0\u3e1c\0\u3e58\0\u3e94\0\u3ed0\0\u3f0c\0\u3f48\0\u3f84\0\u3fc0"+
    "\0\u3ffc\0\u4038\0\u4074\0\u40b0\0\u40ec\0\u4128\0\u4164\0\u2940"+
    "\0\u41a0\0\u41dc\0\u4218\0\u4254\0\u4290\0\u42cc\0\u4308\0\u4344"+
    "\0\u4380\0\u43bc\0\u43f8\0\u4434\0\u4470\0\u44ac\0\u44e8\0\u4524"+
    "\0\u4560\0\u459c\0\u45d8\0\u4614\0\u4650\0\u468c\0\u46c8\0\u4704"+
    "\0\u4740\0\u477c\0\u47b8\0\u47f4\0\u4830\0\u486c\0\u48a8\0\u48e4"+
    "\0\u4920\0\74\0\u495c\0\u4998\0\u49d4\0\u49d4\0\360\0\u4a10"+
    "\0\u4a4c\0\u4a88\0\u4ac4\0\u4b00\0\u4b3c\0\u4b78\0\u4bb4\0\u4bf0"+
    "\0\u4c2c\0\u4c68\0\u4ca4\0\u4ce0\0\u4d1c\0\u4d58\0\u4d94\0\u4dd0"+
    "\0\u4e0c\0\u4e48\0\u4e84\0\u4ec0\0\u4efc\0\u4f38\0\u4f74\0\u4fb0"+
    "\0\u4fec\0\u5028\0\u5064\0\u50a0\0\u50dc\0\u5118\0\u5154\0\u5190"+
    "\0\u51cc\0\u5208\0\u5244\0\u5280\0\u52bc\0\u52f8\0\u5334\0\u5370"+
    "\0\u53ac\0\u53e8\0\u5424\0\u5460\0\u549c\0\u54d8\0\u5514\0\u5550"+
    "\0\u558c\0\u55c8\0\u5604\0\u5640\0\u567c\0\u56b8\0\u56f4\0\u5730"+
    "\0\u576c\0\u57a8\0\u57e4\0\u5820\0\u585c\0\u5898\0\u58d4\0\u5910"+
    "\0\u4740\0\u594c\0\u5988\0\u59c4\0\u5a00\0\u5a3c\0\u5a78\0\u5ab4"+
    "\0\u5af0\0\u5b2c\0\u5b68\0\u5ba4\0\u5be0\0\u5c1c\0\u5c58\0\u5c94"+
    "\0\u5cd0\0\u5d0c\0\u5d48\0\u5d84\0\u5dc0\0\u5dfc\0\u5e38\0\u5e74"+
    "\0\u5eb0\0\u5eec\0\u5f28\0\u5f64\0\u5fa0\0\u5fdc\0\u6018\0\u6054"+
    "\0\u6090\0\u60cc\0\u6108\0\u6144\0\u6180\0\u61bc\0\u61f8\0\u6234"+
    "\0\u6270\0\u62ac\0\u62e8\0\u6324\0\u6360\0\u639c\0\u63d8\0\u6414"+
    "\0\u6450\0\u648c\0\u64c8\0\u6504\0\u6540\0\u657c\0\u65b8\0\u65f4"+
    "\0\u6630\0\u666c\0\u66a8\0\u66e4\0\u6720\0\u675c\0\u6798\0\u67d4"+
    "\0\u6810\0\u684c\0\u6888\0\u68c4\0\u6900\0\u693c\0\u6978\0\u69b4"+
    "\0\u69f0\0\u6a2c\0\u6a68\0\u6aa4\0\u6ae0\0\u2f94\0\u6b1c\0\u6b58"+
    "\0\u6b94\0\u6bd0\0\u6c0c\0\u6c48\0\u6c84\0\u6cc0\0\u6cfc\0\u6d38"+
    "\0\u6d74\0\u6db0\0\u6dec\0\u6e28\0\u6e64\0\u6ea0\0\u6edc\0\u6f18"+
    "\0\u6f54\0\u6f90\0\u6fcc\0\u7008\0\u7044\0\u7080\0\u70bc\0\u70f8"+
    "\0\u7134\0\u7170\0\u71ac\0\u71e8\0\u2db4\0\u7224\0\u7260\0\u729c"+
    "\0\u72d8\0\u7314\0\u7350\0\u738c\0\u73c8\0\u7404\0\u7440\0\u747c"+
    "\0\u74b8\0\u74f4\0\u7530\0\u756c\0\u75a8\0\u75e4\0\u7620\0\u765c"+
    "\0\u4b00\0\u7698\0\u76d4\0\u7710\0\u774c\0\u7788\0\u77c4\0\u7800"+
    "\0\u783c\0\u7878\0\u78b4\0\u78f0\0\u792c\0\u2e68\0\u7968\0\u79a4"+
    "\0\u79e0\0\u7a1c\0\u7a58\0\u7a94\0\u7ad0\0\u7b0c\0\u7b48\0\u7b84"+
    "\0\u7bc0\0\u7bfc\0\u7c38\0\u7c74\0\u7cb0\0\u7cec\0\u7d28\0\u7d64"+
    "\0\u7da0\0\u7ddc\0\u7e18\0\u7e54\0\u7e90\0\u7ecc\0\u7f08\0\u7f44"+
    "\0\u7f80\0\u7fbc\0\u7ff8\0\u8034\0\u8070\0\u80ac\0\u80e8\0\u8124"+
    "\0\u8160\0\u819c\0\u81d8\0\u8214\0\u8250\0\u828c\0\u82c8\0\u8304"+
    "\0\u8340\0\u837c\0\u7ad0\0\u83b8\0\u83f4\0\u8430\0\u30fc\0\u846c"+
    "\0\u84a8\0\u84e4\0\u8520\0\u855c\0\u8598\0\u85d4\0\u2b20\0\u8610"+
    "\0\u864c\0\u8688\0\u86c4\0\u1518\0\u8700\0\u873c\0\u8778\0\u87b4"+
    "\0\u87f0\0\u882c\0\u8868\0\u88a4\0\74\0\u88e0\0\u891c\0\u8958"+
    "\0\u8994\0\u89d0\0\u8a0c\0\u8a48\0\u8a84\0\u8ac0\0\u8afc\0\u8b38"+
    "\0\u8b74\0\u8bb0\0\u8bec\0\u8c28\0\u8c64\0\u8ca0\0\u8cdc\0\u8d18"+
    "\0\u8d54\0\u8d90\0\u8dcc\0\u8e08\0\u8e44\0\u8e80\0\u8ebc\0\u8ef8"+
    "\0\u8f34\0\u8f70\0\u8fac\0\u8fe8\0\u9024\0\u9060\0\u909c\0\u90d8"+
    "\0\u9114\0\u9150\0\u918c\0\u91c8\0\u9204\0\u9240\0\u927c\0\u92b8"+
    "\0\u92f4\0\u9330\0\u936c\0\u93a8\0\u93e4\0\u9420\0\u945c\0\u9498"+
    "\0\u94d4\0\u9510\0\u954c\0\u9588\0\u8afc\0\u95c4\0\u9600\0\u963c"+
    "\0\u9678\0\u96b4\0\u96f0\0\u972c";

  private static int [] zzUnpackRowMap() {
    int [] result = new int[668];
    int offset = 0;
    offset = zzUnpackRowMap(ZZ_ROWMAP_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackRowMap(String packed, int offset, int [] result) {
    int i = 0;  /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int high = packed.charAt(i++) << 16;
      result[j++] = high | packed.charAt(i++);
    }
    return j;
  }

  /** 
   * The transition table of the DFA
   */
  private static final int [] ZZ_TRANS = zzUnpackTrans();

  private static final String ZZ_TRANS_PACKED_0 =
    "\1\2\1\3\1\4\3\5\1\6\3\5\1\7\1\10"+
    "\1\11\1\12\1\13\1\14\1\15\1\16\1\17\1\20"+
    "\1\21\1\22\1\23\1\24\1\25\1\26\1\27\1\30"+
    "\1\31\1\32\1\33\1\34\1\35\1\36\1\37\1\40"+
    "\1\2\1\41\1\42\1\43\1\5\1\44\1\5\1\13"+
    "\1\45\1\16\1\13\1\46\1\16\2\47\1\50\1\13"+
    "\1\51\1\16\1\52\1\16\1\53\1\16\1\5\75\0"+
    "\1\3\17\0\1\54\53\0\2\5\1\55\11\5\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\6\5\1\56"+
    "\5\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\12\5\1\57\1\5\5\0\1\60\1\61\2\5\1\62"+
    "\1\5\1\63\16\5\1\0\3\5\20\0\1\5\1\0"+
    "\11\5\1\64\2\5\5\0\3\5\1\65\14\5\1\66"+
    "\4\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\67\1\70\2\5\1\71\2\5\1\72\15\5\1\0"+
    "\3\5\20\0\1\5\15\73\1\74\1\0\55\73\16\0"+
    "\1\13\34\0\1\13\2\0\1\13\5\0\1\13\7\0"+
    "\15\75\2\0\1\76\54\75\1\0\1\77\73\0\11\5"+
    "\1\100\1\5\1\101\5\0\3\5\1\102\5\5\1\103"+
    "\13\5\1\0\1\104\2\5\20\0\1\5\1\0\11\5"+
    "\1\105\1\106\1\107\5\0\2\5\1\110\1\111\1\5"+
    "\1\112\1\113\1\5\1\114\1\115\3\5\1\116\7\5"+
    "\1\0\3\5\20\0\1\5\1\0\12\5\1\117\1\5"+
    "\5\0\1\120\1\121\2\5\1\122\2\5\1\123\1\5"+
    "\1\124\1\112\12\5\1\0\3\5\20\0\1\5\1\0"+
    "\12\5\1\125\1\5\5\0\1\126\1\127\2\5\1\130"+
    "\1\131\1\132\1\133\2\5\1\134\1\135\4\5\1\136"+
    "\2\5\1\137\1\5\1\0\2\5\1\140\20\0\1\5"+
    "\1\0\11\5\1\141\1\142\1\5\5\0\6\5\1\143"+
    "\2\5\1\144\3\5\1\145\2\5\1\146\3\5\1\147"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\150"+
    "\1\151\1\5\1\152\1\153\2\5\1\154\1\5\1\155"+
    "\1\5\1\156\11\5\1\0\3\5\20\0\1\5\1\0"+
    "\12\5\1\157\1\160\5\0\1\5\1\161\2\5\1\162"+
    "\4\5\1\163\1\5\1\164\11\5\1\0\3\5\20\0"+
    "\1\5\1\0\11\5\1\165\2\5\5\0\3\5\1\166"+
    "\4\5\1\167\12\5\1\170\1\112\1\0\3\5\20\0"+
    "\1\5\1\0\12\5\1\171\1\5\5\0\1\172\1\173"+
    "\1\174\1\5\1\175\2\5\1\176\1\5\1\177\13\5"+
    "\1\0\3\5\20\0\1\5\1\0\12\5\1\200\1\5"+
    "\5\0\1\201\1\202\2\5\1\203\2\5\1\204\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\205"+
    "\24\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\206\2\5\1\207\20\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\4\5\1\210\20\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\5\1\211"+
    "\5\5\1\212\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\213\5\0\1\214\3\5\1\215\4\5\1\216"+
    "\13\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\217\6\5\1\220\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\221\1\222\5\0\1\223\1\224\2\5"+
    "\1\225\2\5\1\226\1\5\1\227\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\230\2\5"+
    "\1\231\2\5\1\232\1\5\1\233\1\5\1\234\11\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\235"+
    "\1\236\2\5\1\237\2\5\1\240\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\12\5\1\241\1\242\5\0\1\243"+
    "\1\244\2\5\1\245\2\5\1\246\1\5\1\247\13\5"+
    "\1\0\3\5\20\0\1\5\1\0\1\77\45\0\1\250"+
    "\25\0\14\5\5\0\4\5\1\251\20\5\1\0\3\5"+
    "\20\0\1\5\55\0\1\252\75\0\1\16\76\0\1\16"+
    "\74\0\1\16\76\0\1\16\75\0\1\16\75\0\1\16"+
    "\2\0\1\54\3\0\1\253\14\0\1\253\52\0\3\5"+
    "\1\254\10\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\7\5\1\255\4\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\256\5\0\23\5\1\257"+
    "\1\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\25\5\1\0\1\214\2\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\260\15\5\1\261\1\5\1\0\3\5"+
    "\20\0\1\5\1\0\11\5\1\262\2\5\5\0\5\5"+
    "\1\112\1\263\16\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\13\5\1\205\11\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\7\5\1\264\7\5\1\265"+
    "\1\266\4\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\267\1\270\5\5\1\271\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\10\5\1\272\7\5"+
    "\1\273\4\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\274\13\5\1\275\6\5\1\214\1\0"+
    "\3\5\20\0\1\5\1\0\11\5\1\276\2\5\5\0"+
    "\3\5\1\214\21\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\277\4\5\1\300\12\5\1\273"+
    "\3\5\1\0\3\5\20\0\1\5\1\0\11\5\1\301"+
    "\2\5\5\0\17\5\1\115\5\5\1\0\3\5\20\0"+
    "\1\5\1\0\1\77\17\0\1\54\53\0\14\5\5\0"+
    "\10\5\1\302\14\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\3\5\1\115\21\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\6\5\1\303\16\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\11\5\1\304"+
    "\13\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\305\4\5\1\306\1\307\1\310\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\10\5\1\112\1\5"+
    "\1\112\12\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\311\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\312\5\0\5\5\1\273\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\3\5\1\313"+
    "\21\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\3\5\1\314\2\5\1\112\16\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\315\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\5\1\112"+
    "\6\5\1\112\14\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\112\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\16\5\1\112\6\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\316\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\317"+
    "\10\5\1\251\6\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\6\5\1\320\16\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\321\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\322"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\323\3\5\1\324\20\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\2\5\1\325\20\5\1\112\1\5"+
    "\1\0\3\5\20\0\1\5\1\0\13\5\1\326\5\0"+
    "\3\5\1\327\1\5\1\330\1\331\14\5\1\332\1\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\15\5"+
    "\1\115\7\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\23\5\1\115\1\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\5\1\333\23\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\11\5\1\334\1\5"+
    "\1\335\11\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\14\5\1\115\10\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\3\5\1\336\21\5\1\0\3\5"+
    "\20\0\1\5\1\0\12\5\1\337\1\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\5"+
    "\1\340\23\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\341\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\342\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\13\5\1\217\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\5\5\1\343\17\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\344\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\10\5\1\273\14\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\345\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\346\4\5\1\315\17\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\24\5"+
    "\1\347\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\25\5\1\0\1\350\2\5\20\0\1\5\1\0\14\5"+
    "\5\0\2\5\1\351\22\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\352\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\20\5\1\112\4\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\23\5\1\353"+
    "\1\5\1\0\3\5\20\0\1\5\1\0\12\5\1\354"+
    "\1\5\5\0\1\5\1\355\5\5\1\356\2\5\1\357"+
    "\12\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\360\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\361\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\362\1\5\5\0\4\5\1\101\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\3\5"+
    "\1\363\1\5\1\364\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\365\1\366\1\367\5\0\1\5\1\370"+
    "\7\5\1\371\11\5\1\372\1\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\373\3\5\1\374\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\375"+
    "\1\376\23\5\1\0\3\5\20\0\1\5\1\0\11\5"+
    "\1\273\2\5\5\0\3\5\1\377\1\5\1\u0100\1\u0101"+
    "\1\u0102\1\u0103\7\5\1\u0104\4\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\4\5\1\u0105\20\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u0106\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\23\5"+
    "\1\u0107\1\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\23\5\1\u0108\1\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\217\1\5\1\u0109\5\0\1\5\1\u010a"+
    "\1\5\1\u010b\2\5\1\u010c\15\5\1\u010d\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\5\5\1\u010e\4\5"+
    "\1\112\12\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\6\5\1\u010f\16\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\u0110\1\5\5\0\23\5\1\u0111\1\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\5"+
    "\1\u0112\1\5\1\u0113\21\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\4\5\1\u0108\20\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\115\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\13\5\1\u0114\5\0\1\5"+
    "\1\u0115\1\5\1\u0116\1\5\1\u0117\1\u0118\6\5\1\u0119"+
    "\2\5\1\u011a\3\5\1\u011b\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\u011c\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\u011d\5\0\21\5\1\u011e"+
    "\3\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\16\5\1\u011f\6\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\u0120\23\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\15\5\1\u0121\7\5\1\0"+
    "\3\5\20\0\1\5\1\0\12\5\1\u0120\1\u0122\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\11\5\1\115"+
    "\2\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u0123\5\0\11\5\1\u0124\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0125\24\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\4\5\1\u0126"+
    "\20\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\5\5\1\112\17\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\5\5\1\u0127\17\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\5\1\366\2\5\1\u0128"+
    "\20\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\12\5\1\112\12\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u0129\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\2\5\1\u012a\22\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\360\23\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\11\5"+
    "\1\u012b\13\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\u012c\4\5\1\112\1\u012d\13\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\3\5\1\u012e"+
    "\21\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\15\5\1\u012f\7\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u0130\3\5\1\u0131\2\5\1\u0132\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u0133\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\316\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\5\5\1\u0134\17\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\7\5\1\u0135\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\u0136"+
    "\6\5\1\200\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\11\5\1\270\13\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\u0137\17\5\1\0"+
    "\1\112\2\5\20\0\1\5\1\0\11\5\1\122\2\5"+
    "\5\0\10\5\1\u0138\14\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\u0139\2\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\11\5\1\u013a\2\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\4\5"+
    "\1\u013b\20\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u0137\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\101\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\12\5\1\u013c\1\5\5\0\11\5\1\u013d"+
    "\13\5\1\0\3\5\20\0\1\5\1\0\13\5\1\u013e"+
    "\5\0\11\5\1\u013f\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u0140\3\5\1\u0141\20\5\1\0"+
    "\3\5\20\0\1\5\16\250\1\u0142\37\250\1\u0142\15\250"+
    "\1\0\14\5\5\0\7\5\1\360\15\5\1\0\3\5"+
    "\20\0\1\5\55\u0143\1\u0144\16\u0143\1\0\1\u0145\16\0"+
    "\1\u0146\26\0\1\u0146\25\0\4\5\1\u0147\7\5\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\10\5\1\254"+
    "\3\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u0148\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u0149\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\12\5\1\u014a\1\5\5\0\7\5\1\u014b"+
    "\15\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\u014c\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\112\5\5\1\u014d\16\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\13\5\1\u014e\11\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\4\5\1\360"+
    "\20\5\1\0\2\5\1\u014f\20\0\1\5\1\0\11\5"+
    "\1\u0150\2\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\226\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\11\5\1\112\13\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\16\5"+
    "\1\115\6\5\1\0\3\5\20\0\1\5\1\0\11\5"+
    "\1\116\2\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\5\1\u0135\23\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0120\24\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\10\5\1\u0121"+
    "\14\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\u0129\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\16\5\1\u0151\6\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\10\5\1\112\14\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\u0129\23\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\u0152"+
    "\24\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\25\5\1\u0153\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\u0154\23\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u0155\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\6\5\1\u0139\16\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0156\10\5\1\u0157"+
    "\13\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\u0158\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\u0159\1\5\1\112\17\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\13\5\1\u015a\11\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\4\5"+
    "\1\u015b\20\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\4\5\1\u015c\20\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u015d\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\7\5\1\u015e\15\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\17\5\1\112"+
    "\5\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\21\5\1\u015f\3\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\17\5\1\u0128\5\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\13\5\1\112\11\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\22\5\1\u0160"+
    "\2\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\316\23\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\21\5\1\101\3\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\3\5\1\u0161\21\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u0162\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\3\5"+
    "\1\u0163\21\5\1\0\3\5\20\0\1\5\1\0\12\5"+
    "\1\u0164\1\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\u0165\1\5\5\0\4\5\1\u013c\1\315"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\u0166\23\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\5\5\1\u0167\17\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\4\5\1\220\20\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u0168\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u0169\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u016a\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\6\5\1\115\16\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\u016b\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u016c\2\5"+
    "\1\u016d\2\5\1\u016e\12\5\1\u016f\3\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0120\17\5\1\u0104"+
    "\4\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\u0170\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\u0171\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\u0172\2\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\3\5\1\u0173\21\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u0174\17\5\1\0\3\5\20\0\1\5\1\0\13\5"+
    "\1\u0175\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\25\5\1\0\2\5\1\u0176\20\0\1\5"+
    "\1\0\14\5\5\0\1\u0177\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\11\5\1\u015b\2\5\5\0\1\112\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\u0178\2\5"+
    "\5\0\7\5\1\u0179\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\16\5\1\u017a\4\5\1\112\1\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\22\5"+
    "\1\u017b\2\5\1\0\3\5\20\0\1\5\1\0\11\5"+
    "\1\112\2\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\3\5\1\u017c\5\5\1\u017d\13\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\3\5"+
    "\1\u017e\21\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\112\4\5\1\112\1\u017f\16\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\u0180\23\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\u0181\2\5"+
    "\5\0\3\5\1\u0182\1\5\1\u0183\7\5\1\u0184\7\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\214\2\5"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\12\5"+
    "\1\u0185\1\u0186\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\u0187\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\11\5\1\u0188\13\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\20\5\1\u0189"+
    "\2\5\1\u018a\1\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\u018b\23\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\3\5\1\u014c\21\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\6\5\1\u018c"+
    "\16\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\11\5\1\u018d\13\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u018e\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u018f\3\5\1\112\20\5\1\0"+
    "\3\5\20\0\1\5\1\0\13\5\1\u0190\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u0191\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u0192\6\5\1\u0193\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\12\5\1\214\1\5\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\13\5\1\u0194\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\u0195\2\5"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u0196\24\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u018b\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\u0197\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\6\5\1\u0198\16\5\1\0"+
    "\3\5\20\0\1\5\1\0\13\5\1\u0199\5\0\7\5"+
    "\1\u019a\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u019b\1\u019c\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\5\1\u019d\23\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\6\5\1\112\16\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\2\5"+
    "\1\200\22\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\251\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\16\5\1\u019e\6\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\5\5\1\u019f\1\u01a0"+
    "\10\5\1\112\5\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\u01a1\23\5\1\0\3\5\20\0"+
    "\1\5\1\0\13\5\1\112\5\0\10\5\1\u01a2\14\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u01a3\17\5\1\0\3\5\20\0\1\5\1\0\12\5"+
    "\1\u01a4\1\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\4\5\1\u01a5\20\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u01a6\3\5\1\u01a7"+
    "\20\5\1\0\3\5\20\0\1\5\1\0\13\5\1\u01a8"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u01a9\24\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\3\5\1\u01aa\21\5\1\0\3\5\20\0"+
    "\1\5\1\0\13\5\1\u01ab\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\3\5\1\112\2\5"+
    "\1\u01ac\7\5\1\u01ad\6\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\13\5\1\214\11\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\7\5\1\271\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\10\5"+
    "\1\u01ae\14\5\1\0\3\5\20\0\1\5\1\0\12\5"+
    "\1\u01af\1\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\12\5\1\u0121\12\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\21\5\1\112\3\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\2\5"+
    "\1\300\22\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\4\5\1\112\20\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\u0108\1\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\112\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\13\5\1\u01b0\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\6\5"+
    "\1\u01b1\16\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\6\5\1\300\16\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\5\5\1\u01b2\17\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\7\5\1\113\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\4\5"+
    "\1\214\20\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\u01b3\2\5\1\u01b4\11\5\1\u0199\4\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\6\5"+
    "\1\u01b5\16\5\1\0\3\5\20\0\1\5\1\0\11\5"+
    "\1\214\2\5\5\0\4\5\1\u0120\10\5\1\u01b6\5\5"+
    "\1\u01b7\1\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u01b8\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\13\5\1\u01b9\11\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\5\5\1\u01ba\17\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\u01bb\2\5"+
    "\5\0\11\5\1\115\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\6\5\1\321\16\5\1\0\3\5"+
    "\20\0\1\5\1\0\12\5\1\200\1\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\12\5\1\u018b\1\5"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\6\5\1\113\16\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\5\1\214\23\5\1\0\3\5"+
    "\20\0\1\5\1\0\11\5\1\277\2\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\u01bc"+
    "\4\5\1\u01bd\17\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u01be\5\0\1\112\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\3\5\1\214\21\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u01bf\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\23\5"+
    "\1\112\1\5\1\0\3\5\20\0\1\5\55\u0143\1\u01c0"+
    "\16\u0143\54\0\1\u0142\1\u0144\17\0\1\u0145\73\0\14\5"+
    "\5\0\7\5\1\u01c1\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\u01b0\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\11\5\1\300\13\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\4\5"+
    "\1\u01c2\20\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\112\21\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\u01c3\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\u01c4\24\5\1\0\3\5"+
    "\20\0\1\5\1\0\12\5\1\115\1\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\4\5"+
    "\1\u01c5\20\5\1\0\3\5\20\0\1\5\1\0\12\5"+
    "\1\u01c6\1\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\u0127\2\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\22\0\1\u01c7\52\0\14\5\5\0\20\5"+
    "\1\115\4\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\15\5\1\u0129\7\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\u01c2\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\u0162\23\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\20\5"+
    "\1\u01c8\4\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u014c\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\4\5\1\u01c9\20\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\6\5\1\373\16\5"+
    "\1\0\3\5\20\0\1\5\1\0\13\5\1\u0189\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\11\5\1\113\13\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\4\5\1\360\20\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\156\24\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\u01ca\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\u01cb"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\6\5\1\214\16\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\7\5\1\u01cc\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\3\5\1\273\21\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\11\5\1\u01cd"+
    "\13\5\1\0\3\5\20\0\1\5\1\0\11\5\1\u01ce"+
    "\2\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\7\5\1\u01cf\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\23\5\1\u01d0\1\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u01d1\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\10\5"+
    "\1\u0150\14\5\1\0\3\5\20\0\1\5\1\0\13\5"+
    "\1\u01d2\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\11\5\1\u01d3\13\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\373\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\5\1\112"+
    "\2\5\1\u01d4\20\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\u01d5\23\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\u01d6\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\13\5\1\u01d7\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\10\5"+
    "\1\u01d8\1\u01d9\13\5\1\0\1\u01da\1\5\1\u01db\20\0"+
    "\1\5\1\0\14\5\5\0\1\u0159\24\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\3\5\1\u01dc\21\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\u01dd"+
    "\24\5\1\0\3\5\20\0\1\5\1\0\12\5\1\300"+
    "\1\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\3\5\1\u01de\10\5\1\u01df\10\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\3\5\1\u01e0"+
    "\21\5\1\0\3\5\20\0\1\5\1\0\13\5\1\u0121"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\16\5\1\273\6\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\6\5\1\u01e1\16\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\4\5\1\u0120\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\u01e2"+
    "\24\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\5\5\1\u01e3\17\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\u01e4\23\5\1\0\3\5\20\0"+
    "\1\5\1\0\13\5\1\u01e5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u01e6\24\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\u01e7"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\u01e8\5\5\1\u01e9\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\u01a6\24\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\23\5\1\360\1\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\5"+
    "\1\u01ea\23\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u01eb\24\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u01ec\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\214\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\5\5\1\115\17\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\17\5"+
    "\1\u01ed\5\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\u01ee\20\5\1\u0160\2\5\1\0\3\5"+
    "\20\0\1\5\1\0\11\5\1\u01ef\2\5\5\0\11\5"+
    "\1\214\13\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\u01f0\4\5\1\273\6\5\1\0\3\5"+
    "\20\0\1\5\1\0\12\5\1\u01d4\1\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u01f1\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\25\5\1\0\1\112\2\5\20\0\1\5\1\0"+
    "\14\5\5\0\6\5\1\u01f2\16\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\5\1\113\23\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\u01f3"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\10\5\1\u01f4\14\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u01f5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\u01f6\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\u01f7\23\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\23\5"+
    "\1\300\1\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\u01f8\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\u01f9\1\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\2\5\1\u01fa\22\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\u01fb\2\5"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\7\5\1\u01fc\1\5\1\u01fd\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\4\5\1\u01fe\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u01ff\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u0200\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\4\5\1\u01f7\4\5\1\u0201\13\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\11\5"+
    "\1\360\13\5\1\0\3\5\20\0\1\5\1\0\11\5"+
    "\1\u0202\2\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\214\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\17\5\1\115\5\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u0203\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\u0204\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u016c\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\2\5\1\u0205\22\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\4\5\1\u0206"+
    "\20\5\1\0\3\5\20\0\1\5\1\0\12\5\1\u0207"+
    "\1\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\13\5\1\u0208\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u0209\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\7\5\1\u010f\15\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\366\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\300\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u020a\24\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\7\5\1\u020b\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\u020c\24\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\7\5\1\u020d\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\5"+
    "\1\u020e\23\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\24\5\1\u017c\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\7\5\1\u020f\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\u01a2\24\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0210\24\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\7\5\1\u0211"+
    "\15\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\11\5\1\222\13\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\24\5\1\u0212\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\5\5\1\u0213\17\5\1\0\3\5"+
    "\20\0\1\5\54\u0214\1\u0142\1\u01c0\16\u0214\1\0\14\5"+
    "\5\0\24\5\1\112\1\0\3\5\20\0\1\5\1\0"+
    "\11\5\1\300\2\5\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\12\5\1\362\1\5\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\6\5\1\316"+
    "\16\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\21\5\1\360\3\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\5\1\270\23\5\1\0\3\5\20\0"+
    "\1\5\50\0\1\u0215\24\0\14\5\5\0\5\5\1\u0216"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\11\5\1\u0217\13\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u0218\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\u0121\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\4\5\1\u0219\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u021a\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u021b\17\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\3\5\1\u021c\21\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\5\1\112\23\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\23\5"+
    "\1\u021d\1\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\7\5\1\366\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\u017c\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\10\5\1\115\14\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\11\5"+
    "\1\u021e\13\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\u021f\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\5\1\u0220\23\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\4\5\1\u0221\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\23\5"+
    "\1\u0129\1\5\1\0\3\5\20\0\1\5\1\0\12\5"+
    "\1\u0222\1\5\5\0\25\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\133\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\3\5\1\u0223\21\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u0224\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\4\5\1\u0225\20\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\u0186\5\0\1\5\1\u013a\23\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\4\5\1\u0226"+
    "\20\5\1\0\3\5\20\0\1\5\1\0\11\5\1\u0227"+
    "\2\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u0228\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\10\5\1\u0229\14\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\4\5\1\116\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\6\5"+
    "\1\u01c8\16\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\u022a\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\u022b\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\11\5\1\u014f\2\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u022c\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\340\21\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\3\5\1\u022d\21\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\20\5\1\u022e\4\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\6\5"+
    "\1\u022f\16\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\u0230\21\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\3\5\1\326\11\5\1\300\7\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\5"+
    "\1\u0231\23\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\u0232\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\u0233\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\7\5\1\373\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u0234\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\115\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\11\5\1\u0235\13\5\1\0\3\5"+
    "\20\0\1\5\1\0\13\5\1\214\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\5\1\101"+
    "\23\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\4\5\1\u01cf\20\5\1\0\3\5\20\0\1\5\1\0"+
    "\11\5\1\u0162\2\5\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\7\5\1\u0236\15\5\1\0"+
    "\3\5\20\0\1\5\1\0\11\5\1\u0237\2\5\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\7\5\1\127\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\60\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\7\5\1\u0162\15\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\24\5\1\u0238\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\6\5\1\u0194"+
    "\16\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\u0239\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\u01c4\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\12\5\1\366\1\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\7\5\1\u023a\15\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\4\5"+
    "\1\u01c4\20\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\127\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\3\5\1\315\21\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\10\5\1\u023b\14\5"+
    "\1\0\3\5\20\0\1\5\1\0\13\5\1\u023c\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\11\5\1\217\13\5\1\0\3\5\20\0\1\5\1\0"+
    "\11\5\1\u023d\2\5\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\15\5\1\273\7\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\16\5\1\360"+
    "\6\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\u023e\23\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u023f\24\5\1\0\3\5\20\0\1\5"+
    "\55\u0214\1\u01c0\16\u0214\22\0\1\u0240\52\0\14\5\5\0"+
    "\7\5\1\u0241\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\11\5\1\u0242\2\5\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\11\5\1\u0243\2\5\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\u0244"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\7\5\1\u0245\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\5\5\1\u0246\17\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\22\5\1\u0247\2\5\1\0"+
    "\3\5\20\0\1\5\1\0\11\5\1\u0121\2\5\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\20\5\1\u014c\4\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\5\5\1\u0248\17\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\21\5\1\u0249\3\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u020e\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\1\5"+
    "\1\u024a\23\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\5\1\171\23\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\u024b\2\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\11\5\1\u024c\2\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u024d\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\u024e\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\u024f\24\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\5\1\u0250\23\5\1\0"+
    "\3\5\20\0\1\5\1\0\11\5\1\u0251\2\5\5\0"+
    "\25\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\112\6\5\1\u015e\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\20\5\1\u0252\4\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\4\5\1\u01d2\20\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u0253\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\7\5\1\u01a1\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\13\5\1\u0254\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\u017c\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\u0255"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\2\5\1\115\15\5\1\u0232\4\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\277\1\u0110\23\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\2\5\1\u0256"+
    "\22\5\1\0\3\5\20\0\1\5\1\0\11\5\1\326"+
    "\2\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\7\5\1\u0257\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\11\5\1\u0258\2\5\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\10\5\1\u0259"+
    "\14\5\1\0\3\5\20\0\1\5\1\0\12\5\1\u01f7"+
    "\1\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\1\u025a\24\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\25\5\1\0\3\5\1\u025b\17\0"+
    "\1\5\1\0\14\5\5\0\6\5\1\u0232\16\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\25\5\1\0"+
    "\1\u025c\2\5\20\0\1\5\30\0\1\u025d\44\0\14\5"+
    "\5\0\14\5\1\u0194\10\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\16\5\1\122\6\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\12\5\1\u025e\12\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\6\5"+
    "\1\u025f\16\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\7\5\1\u0260\15\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\1\5\1\u0261\23\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\3\5\1\u0262\21\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\23\5"+
    "\1\u0263\1\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u0264\24\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\15\5\1\u0184\7\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\22\5\1\u0265\2\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\277\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u0266\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\3\5\1\u0267\21\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\4\5\1\u0268\20\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0269\24\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\12\5\1\u026a"+
    "\12\5\1\0\3\5\20\0\1\5\1\0\12\5\1\u026b"+
    "\1\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\16\5\1\u023b\6\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\6\5\1\261\16\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\6\5\1\u026c"+
    "\16\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\16\5\1\261\6\5\1\0\3\5\20\0\1\5\40\0"+
    "\1\u026d\34\0\14\5\5\0\5\5\1\u0267\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\5\1\u026e"+
    "\23\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\3\5\1\u026f\13\5\1\u0270\5\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\6\5\1\u014c\16\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\3\5\1\u0271"+
    "\21\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\214\24\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\20\5\1\200\4\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\22\5\1\u0272\2\5\1\0\3\5"+
    "\20\0\1\5\1\0\12\5\1\u0164\1\5\5\0\5\5"+
    "\1\u0273\2\5\1\373\14\5\1\0\3\5\20\0\1\5"+
    "\1\0\11\5\1\u0274\2\5\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\5\5\1\u0275\17\5"+
    "\1\0\3\5\20\0\1\5\1\0\11\5\1\274\2\5"+
    "\5\0\25\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\11\5\1\322\13\5\1\0\3\5\20\0\1\5"+
    "\1\0\14\5\5\0\6\5\1\u026c\13\5\1\u0276\2\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\5\5"+
    "\1\u024e\17\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\4\5\1\u0129\20\5\1\0\3\5\20\0\1\5"+
    "\33\0\1\u0277\41\0\12\5\1\u0278\1\5\5\0\25\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\7\5"+
    "\1\u0279\15\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\1\u027a\24\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\4\5\1\u027b\20\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\13\5\1\u027c\7\5\1\u027d"+
    "\1\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\7\5\1\u027e\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\5\5\1\u0209\17\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\1\5\1\u0110\23\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\7\5\1\u027f"+
    "\15\5\1\0\3\5\20\0\1\5\26\0\1\u0280\46\0"+
    "\14\5\5\0\10\5\1\u018a\14\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\23\5\1\u0281\1\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\12\5\1\u0282"+
    "\12\5\1\0\3\5\20\0\1\5\1\0\12\5\1\u0283"+
    "\1\5\5\0\25\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\4\5\1\u0284\20\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\7\5\1\u0285\15\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\23\5\1\u0286"+
    "\1\5\1\0\3\5\20\0\1\5\1\0\11\5\1\u0287"+
    "\2\5\5\0\25\5\1\0\3\5\20\0\1\5\13\0"+
    "\1\u0288\61\0\14\5\5\0\7\5\1\u0289\15\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\20\5\1\u028a"+
    "\4\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\11\5\1\340\13\5\1\0\3\5\20\0\1\5\1\0"+
    "\12\5\1\u0120\1\5\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\11\5\1\u0189\2\5\5\0\25\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u028b\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\3\5"+
    "\1\u0184\21\5\1\0\3\5\20\0\1\5\42\0\1\u025d"+
    "\32\0\13\5\1\u028c\5\0\25\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\13\5\1\u028d\11\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\3\5\1\u01de"+
    "\21\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\u028e\23\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\11\5\1\u028f\13\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\11\5\1\u0290\13\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\5\1\u0291"+
    "\23\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\7\5\1\u0292\15\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\3\5\1\u0293\21\5\1\0\3\5\20\0"+
    "\1\5\1\0\14\5\5\0\5\5\1\u0294\17\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\1\u0295\24\5"+
    "\1\0\3\5\20\0\1\5\1\0\14\5\5\0\12\5"+
    "\1\u0296\12\5\1\0\3\5\20\0\1\5\1\0\14\5"+
    "\5\0\5\5\1\u0275\2\5\1\u0297\14\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\1\u0298\24\5\1\0"+
    "\3\5\20\0\1\5\1\0\14\5\5\0\5\5\1\u0299"+
    "\17\5\1\0\3\5\20\0\1\5\1\0\14\5\5\0"+
    "\1\5\1\u029a\23\5\1\0\3\5\20\0\1\5\1\0"+
    "\14\5\5\0\7\5\1\u029b\15\5\1\0\3\5\20\0"+
    "\1\5\1\0\13\5\1\u029c\5\0\25\5\1\0\3\5"+
    "\20\0\1\5\1\0\14\5\5\0\3\5\1\u0295\21\5"+
    "\1\0\3\5\20\0\1\5";

  private static int [] zzUnpackTrans() {
    int [] result = new int[38760];
    int offset = 0;
    offset = zzUnpackTrans(ZZ_TRANS_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackTrans(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      value--;
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }


  /* error codes */
  private static final int ZZ_UNKNOWN_ERROR = 0;
  private static final int ZZ_NO_MATCH = 1;
  private static final int ZZ_PUSHBACK_2BIG = 2;

  /* error messages for the codes above */
  private static final String ZZ_ERROR_MSG[] = {
    "Unkown internal scanner error",
    "Error: could not match input",
    "Error: pushback value was too large"
  };

  /**
   * ZZ_ATTRIBUTE[aState] contains the attributes of state <code>aState</code>
   */
  private static final int [] ZZ_ATTRIBUTE = zzUnpackAttribute();

  private static final String ZZ_ATTRIBUTE_PACKED_0 =
    "\1\0\1\11\13\1\1\11\54\1\1\0\1\11\1\0"+
    "\1\1\1\0\152\1\2\0\226\1\1\11\1\1\1\0"+
    "\1\1\1\0\14\1\1\0\154\1\1\0\6\1\1\0"+
    "\114\1\2\0\52\1\1\0\32\1\1\0\1\1\1\11"+
    "\17\1\1\0\11\1\1\0\10\1\1\0\7\1\1\0"+
    "\24\1";

  private static int [] zzUnpackAttribute() {
    int [] result = new int[668];
    int offset = 0;
    offset = zzUnpackAttribute(ZZ_ATTRIBUTE_PACKED_0, offset, result);
    return result;
  }

  private static int zzUnpackAttribute(String packed, int offset, int [] result) {
    int i = 0;       /* index in packed string  */
    int j = offset;  /* index in unpacked array */
    int l = packed.length();
    while (i < l) {
      int count = packed.charAt(i++);
      int value = packed.charAt(i++);
      do result[j++] = value; while (--count > 0);
    }
    return j;
  }

  /** the input device */
  private java.io.Reader zzReader;

  /** the current state of the DFA */
  private int zzState;

  /** the current lexical state */
  private int zzLexicalState = YYINITIAL;

  /** this buffer contains the current text to be matched and is
      the source of the yytext() string */
  private char zzBuffer[] = new char[ZZ_BUFFERSIZE];

  /** the textposition at the last accepting state */
  private int zzMarkedPos;

  /** the current text position in the buffer */
  private int zzCurrentPos;

  /** startRead marks the beginning of the yytext() string in the buffer */
  private int zzStartRead;

  /** endRead marks the last character in the buffer, that has been read
      from input */
  private int zzEndRead;

  /** number of newlines encountered up to the start of the matched text */
  private int yyline;

  /** the number of characters up to the start of the matched text */
  private int yychar;

  /**
   * the number of characters from the last newline up to the start of the 
   * matched text
   */
  private int yycolumn;

  /** 
   * zzAtBOL == true <=> the scanner is currently at the beginning of a line
   */
  private boolean zzAtBOL = true;

  /** zzAtEOF == true <=> the scanner is at the EOF */
  private boolean zzAtEOF;

  /** denotes if the user-EOF-code has already been executed */
  private boolean zzEOFDone;

  /* user code: */
    public String lexeme;
    public String column1;
    public String column2;
    public String line;


  /**
   * Creates a new scanner
   * There is also a java.io.InputStream version of this constructor.
   *
   * @param   in  the java.io.Reader to read input from.
   */
  Lexer(java.io.Reader in) {
    this.zzReader = in;
  }

  /**
   * Creates a new scanner.
   * There is also java.io.Reader version of this constructor.
   *
   * @param   in  the java.io.Inputstream to read input from.
   */
  Lexer(java.io.InputStream in) {
    this(new java.io.InputStreamReader(in));
  }

  /** 
   * Unpacks the compressed character translation table.
   *
   * @param packed   the packed character translation table
   * @return         the unpacked character translation table
   */
  private static char [] zzUnpackCMap(String packed) {
    char [] map = new char[0x10000];
    int i = 0;  /* index in packed string  */
    int j = 0;  /* index in unpacked array */
    while (i < 154) {
      int  count = packed.charAt(i++);
      char value = packed.charAt(i++);
      do map[j++] = value; while (--count > 0);
    }
    return map;
  }


  /**
   * Refills the input buffer.
   *
   * @return      <code>false</code>, iff there was new input.
   * 
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  private boolean zzRefill() throws java.io.IOException {

    /* first: make room (if you can) */
    if (zzStartRead > 0) {
      System.arraycopy(zzBuffer, zzStartRead,
                       zzBuffer, 0,
                       zzEndRead-zzStartRead);

      /* translate stored positions */
      zzEndRead-= zzStartRead;
      zzCurrentPos-= zzStartRead;
      zzMarkedPos-= zzStartRead;
      zzStartRead = 0;
    }

    /* is the buffer big enough? */
    if (zzCurrentPos >= zzBuffer.length) {
      /* if not: blow it up */
      char newBuffer[] = new char[zzCurrentPos*2];
      System.arraycopy(zzBuffer, 0, newBuffer, 0, zzBuffer.length);
      zzBuffer = newBuffer;
    }

    /* finally: fill the buffer with new input */
    int numRead = zzReader.read(zzBuffer, zzEndRead,
                                            zzBuffer.length-zzEndRead);

    if (numRead > 0) {
      zzEndRead+= numRead;
      return false;
    }
    // unlikely but not impossible: read 0 characters, but not at end of stream    
    if (numRead == 0) {
      int c = zzReader.read();
      if (c == -1) {
        return true;
      } else {
        zzBuffer[zzEndRead++] = (char) c;
        return false;
      }     
    }

	// numRead < 0
    return true;
  }

    
  /**
   * Closes the input stream.
   */
  public final void yyclose() throws java.io.IOException {
    zzAtEOF = true;            /* indicate end of file */
    zzEndRead = zzStartRead;  /* invalidate buffer    */

    if (zzReader != null)
      zzReader.close();
  }


  /**
   * Resets the scanner to read from a new input stream.
   * Does not close the old reader.
   *
   * All internal variables are reset, the old input stream 
   * <b>cannot</b> be reused (internal buffer is discarded and lost).
   * Lexical state is set to <tt>ZZ_INITIAL</tt>.
   *
   * @param reader   the new input stream 
   */
  public final void yyreset(java.io.Reader reader) {
    zzReader = reader;
    zzAtBOL  = true;
    zzAtEOF  = false;
    zzEOFDone = false;
    zzEndRead = zzStartRead = 0;
    zzCurrentPos = zzMarkedPos = 0;
    yyline = yychar = yycolumn = 0;
    zzLexicalState = YYINITIAL;
  }


  /**
   * Returns the current lexical state.
   */
  public final int yystate() {
    return zzLexicalState;
  }


  /**
   * Enters a new lexical state
   *
   * @param newState the new lexical state
   */
  public final void yybegin(int newState) {
    zzLexicalState = newState;
  }


  /**
   * Returns the text matched by the current regular expression.
   */
  public final String yytext() {
    return new String( zzBuffer, zzStartRead, zzMarkedPos-zzStartRead );
  }


  /**
   * Returns the character at position <tt>pos</tt> from the 
   * matched text. 
   * 
   * It is equivalent to yytext().charAt(pos), but faster
   *
   * @param pos the position of the character to fetch. 
   *            A value from 0 to yylength()-1.
   *
   * @return the character at position pos
   */
  public final char yycharat(int pos) {
    return zzBuffer[zzStartRead+pos];
  }


  /**
   * Returns the length of the matched text region.
   */
  public final int yylength() {
    return zzMarkedPos-zzStartRead;
  }


  /**
   * Reports an error that occured while scanning.
   *
   * In a wellformed scanner (no or only correct usage of 
   * yypushback(int) and a match-all fallback rule) this method 
   * will only be called with things that "Can't Possibly Happen".
   * If this method is called, something is seriously wrong
   * (e.g. a JFlex bug producing a faulty scanner etc.).
   *
   * Usual syntax/scanner level error handling should be done
   * in error fallback rules.
   *
   * @param   errorCode  the code of the errormessage to display
   */
  private void zzScanError(int errorCode) {
    String message;
    try {
      message = ZZ_ERROR_MSG[errorCode];
    }
    catch (ArrayIndexOutOfBoundsException e) {
      message = ZZ_ERROR_MSG[ZZ_UNKNOWN_ERROR];
    }

    throw new Error(message);
  } 


  /**
   * Pushes the specified amount of characters back into the input stream.
   *
   * They will be read again by then next call of the scanning method
   *
   * @param number  the number of characters to be read again.
   *                This number must not be greater than yylength()!
   */
  public void yypushback(int number)  {
    if ( number > yylength() )
      zzScanError(ZZ_PUSHBACK_2BIG);

    zzMarkedPos -= number;
  }


  /**
   * Resumes scanning until the next regular expression is matched,
   * the end of input is encountered or an I/O-Error occurs.
   *
   * @return      the next token
   * @exception   java.io.IOException  if any I/O-Error occurs
   */
  public Tokens yylex() throws java.io.IOException {
    int zzInput;
    int zzAction;

    // cached fields:
    int zzCurrentPosL;
    int zzMarkedPosL;
    int zzEndReadL = zzEndRead;
    char [] zzBufferL = zzBuffer;
    char [] zzCMapL = ZZ_CMAP;

    int [] zzTransL = ZZ_TRANS;
    int [] zzRowMapL = ZZ_ROWMAP;
    int [] zzAttrL = ZZ_ATTRIBUTE;

    while (true) {
      zzMarkedPosL = zzMarkedPos;

      boolean zzR = false;
      for (zzCurrentPosL = zzStartRead; zzCurrentPosL < zzMarkedPosL;
                                                             zzCurrentPosL++) {
        switch (zzBufferL[zzCurrentPosL]) {
        case '\u000B':
        case '\u000C':
        case '\u0085':
        case '\u2028':
        case '\u2029':
          yyline++;
          yycolumn = 0;
          zzR = false;
          break;
        case '\r':
          yyline++;
          yycolumn = 0;
          zzR = true;
          break;
        case '\n':
          if (zzR)
            zzR = false;
          else {
            yyline++;
            yycolumn = 0;
          }
          break;
        default:
          zzR = false;
          yycolumn++;
        }
      }

      if (zzR) {
        // peek one character ahead if it is \n (if we have counted one line too much)
        boolean zzPeek;
        if (zzMarkedPosL < zzEndReadL)
          zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        else if (zzAtEOF)
          zzPeek = false;
        else {
          boolean eof = zzRefill();
          zzEndReadL = zzEndRead;
          zzMarkedPosL = zzMarkedPos;
          zzBufferL = zzBuffer;
          if (eof) 
            zzPeek = false;
          else 
            zzPeek = zzBufferL[zzMarkedPosL] == '\n';
        }
        if (zzPeek) yyline--;
      }
      zzAction = -1;

      zzCurrentPosL = zzCurrentPos = zzStartRead = zzMarkedPosL;
  
      zzState = ZZ_LEXSTATE[zzLexicalState];


      zzForAction: {
        while (true) {
    
          if (zzCurrentPosL < zzEndReadL)
            zzInput = zzBufferL[zzCurrentPosL++];
          else if (zzAtEOF) {
            zzInput = YYEOF;
            break zzForAction;
          }
          else {
            // store back cached positions
            zzCurrentPos  = zzCurrentPosL;
            zzMarkedPos   = zzMarkedPosL;
            boolean eof = zzRefill();
            // get translated positions and possibly new buffer
            zzCurrentPosL  = zzCurrentPos;
            zzMarkedPosL   = zzMarkedPos;
            zzBufferL      = zzBuffer;
            zzEndReadL     = zzEndRead;
            if (eof) {
              zzInput = YYEOF;
              break zzForAction;
            }
            else {
              zzInput = zzBufferL[zzCurrentPosL++];
            }
          }
          int zzNext = zzTransL[ zzRowMapL[zzState] + zzCMapL[zzInput] ];
          if (zzNext == -1) break zzForAction;
          zzState = zzNext;

          int zzAttributes = zzAttrL[zzState];
          if ( (zzAttributes & 1) == 1 ) {
            zzAction = zzState;
            zzMarkedPosL = zzCurrentPosL;
            if ( (zzAttributes & 8) == 8 ) break zzForAction;
          }

        }
      }

      // store back cached position
      zzMarkedPos = zzMarkedPosL;

      switch (zzAction < 0 ? zzAction : ZZ_ACTION[zzAction]) {
        case 1: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return ERROR;
          }
        case 12: break;
        case 5: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Puntuacion;
          }
        case 13: break;
        case 2: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1);  line = Integer.toString(yyline+1); return Entero;
          }
        case 14: break;
        case 3: 
          { if(yytext().length()<=31){lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Identificador;} else{String cortador=yytext().substring(0,31); lexeme = cortador; column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-30); line = Integer.toString(yyline+1); return IdentificadorTruncado;}
          }
        case 15: break;
        case 11: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Bit;
          }
        case 16: break;
        case 7: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return PalabraClave;
          }
        case 17: break;
        case 4: 
          { /*se ignoran los espacios*/
          }
        case 18: break;
        case 10: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return ComentarioE;
          }
        case 19: break;
        case 6: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Float;
          }
        case 20: break;
        case 8: 
          { lexeme = yytext(); column1 = Integer.toString((yycolumn)); column2 = Integer.toString(yycolumn + yylength()-1); line = Integer.toString(yyline+1); return Cadena;
          }
        case 21: break;
        case 9: 
          { /*se ignoran los comentario*/
          }
        case 22: break;
        default: 
          if (zzInput == YYEOF && zzStartRead == zzCurrentPos) {
            zzAtEOF = true;
            return null;
          } 
          else {
            zzScanError(ZZ_NO_MATCH);
          }
      }
    }
  }


}
